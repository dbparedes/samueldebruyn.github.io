<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on Samuel Debruyn</title>
    <link>https://chipsncookies.com/tags/windows/</link>
    <description>Recent content in Windows on Samuel Debruyn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>s@muel.be (Samuel Debruyn)</managingEditor>
    <webMaster>s@muel.be (Samuel Debruyn)</webMaster>
    <lastBuildDate>Wed, 02 Mar 2016 14:40:08 +0100</lastBuildDate>
    <atom:link href="https://chipsncookies.com/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Setting up a Raspberry Pi as a git server for Windows clients</title>
      <link>https://chipsncookies.com/2016/setting-up-a-raspberry-pi-as-a-git-server-for-windows-clients/</link>
      <pubDate>Wed, 02 Mar 2016 14:40:08 +0100</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2016/setting-up-a-raspberry-pi-as-a-git-server-for-windows-clients/</guid>
      <description>

&lt;p&gt;Sometimes you&amp;rsquo;re not allowed or you don&amp;rsquo;t want to publish source code on GitHub, Bitbucket etc. In this post, I&amp;rsquo;ll explain how you can set up a Raspberry Pi (or any other Linux server) as a git repository server and how you can configure Windows clients for that server. We&amp;rsquo;ll automate everything from authentication to creating and deleting repositories.&lt;/p&gt;

&lt;h2 id=&#34;installation-of-the-prerequisites&#34;&gt;Installation of the prerequisites&lt;/h2&gt;

&lt;h3 id=&#34;on-the-windows-clients&#34;&gt;On the Windows clients&lt;/h3&gt;

&lt;p&gt;On your Windows clients, you&amp;rsquo;ll need PuTTY, Pageant, Plink, PuTTYgen and Git Bash. The installers are very straightforward.&lt;/p&gt;

&lt;p&gt;First install &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html&#34;&gt;PuTTY and its related tools&lt;/a&gt;. After the installation, add the installation directory to your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Windows 10:
System properties &amp;gt; Advanced system settings &amp;gt; Environment variables &amp;gt; System variables &amp;gt; Path &amp;gt; Add new &amp;gt;
C:\Program Files (x86)\PuTTY

Windows 8.1 or earlier: the directories in the Path variable are separated with a ;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When that&amp;rsquo;s done, install &lt;a href=&#34;https://git-for-windows.github.io/&#34;&gt;Git and its utilities&lt;/a&gt;. During the installation, select the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use Git and optional Unix tools from the Windows Command Prompt&lt;/li&gt;
&lt;li&gt;Use (Tortoise)Plink: &lt;code&gt;C:\Program Files (x86)\PuTTY\plink.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Checkout Windows-style, commit Unix-style line endings&lt;/li&gt;
&lt;li&gt;Use Windows&amp;rsquo; default console window&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;on-the-raspberry-pi-linux-server&#34;&gt;On the Raspberry Pi / Linux server&lt;/h3&gt;

&lt;p&gt;You&amp;rsquo;ll need ssh and git. On Debian-based systems, you can install them with the command below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo apt-get update &amp;amp;&amp;amp; apt-get install -y openssh-server git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;d recommend to &lt;a href=&#34;http://www.cyberciti.biz/faq/debian-linux-install-openssh-sshd-server/&#34;&gt;setup SSH&lt;/a&gt; and PuTTY for your personal user account and use that to perform the tasks in this guide.&lt;/p&gt;

&lt;h2 id=&#34;setting-up-the-linux-server&#34;&gt;Setting up the Linux server&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;re using a Raspberry Pi, I&amp;rsquo;d suggest not using your SD card to store your git repositories. Instead, use an external hard drive or a USB drive. I&amp;rsquo;m not going to explain how to mount a USB drive, as there are already &lt;a href=&#34;http://www.raspberrypi-spy.co.uk/2014/05/how-to-mount-a-usb-flash-disk-on-the-raspberry-pi/&#34;&gt;a lot of guides&lt;/a&gt; explaining this.&lt;/p&gt;

&lt;p&gt;First, we&amp;rsquo;ll have to create a new user and use its home directory as the root of our git repositories.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo adduser --home /path/to/where/you/want/to/store/your/repos --disabled-password gituser
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The command will ask you a few details about the user which you can safely ignore by pressing &lt;em&gt;Enter&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Next up, we&amp;rsquo;ll be configuring the SSH daemon. Use &lt;code&gt;sudo nano /etc/ssh/sshd_config&lt;/code&gt; to open up a text editor with the configuration file. Make sure it contains the lines below, so paste them in (&lt;em&gt;right click&lt;/em&gt;) or modify the existing configuration options.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PubkeyAuthentication yes # enable key-based authentication
AuthorizedKeysFile %h/.ssh/authorized_keys # where the authorized keys are stored
PermitRootLogin no # security measure: do not allow root to sign in using ssh
AllowUsers gituser # make sure our user is allowed to connect using SSH, add other users here separated with spaces if you want to allow them to use SSH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save with &lt;em&gt;CTRL+S&lt;/em&gt; and exit with &lt;em&gt;CTRL+X&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When that&amp;rsquo;s done, it&amp;rsquo;s time to log in as the newly created user with &lt;code&gt;sudo su gituser&lt;/code&gt; and go to its home directory using &lt;code&gt;cd&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Create a file to store the SSH authentication key with the right permissions:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;mkdir .ssh
chdmod 700 .ssh
cd .ssh
touch authorized_keys
chmod 600 authorized_keys
nano authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will open up a text editor.&lt;/p&gt;

&lt;p&gt;Now, back to our Windows machine. Let&amp;rsquo;s generate a new key using PuTTYgen. I usually create a SSH-2 RSA key consisting of 4096 bits. Save the private key somewhere on your machine and copy the generated public key and paste it in the text editor on the Linux machine.&lt;/p&gt;

&lt;p&gt;On the Linux machine, save the file and exit the text editor. To make sure the new configuration is active, restart the SSH server using &lt;code&gt;sudo service ssh restart&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Because we want to automate the creation and deletion of git repositories, we&amp;rsquo;ll need two scripts. I&amp;rsquo;ve provided them below.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/SamuelDebruyn/5c7004e92b9c293acc5a.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Use the following steps to put them on your system and make them runnable:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nano delrepo.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Paste script 1 using &lt;em&gt;right click&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Save and exit the text editor (&lt;em&gt;CTRL+S&lt;/em&gt;, &lt;em&gt;CTLRL+X&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nano initrepo.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Paste script 2 using &lt;em&gt;right click&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Save and exit the text editor (&lt;em&gt;CTRL+S&lt;/em&gt;, &lt;em&gt;CTLRL+X&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chmod +x ./*repo.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This concludes the setup on our Linux box.&lt;/p&gt;

&lt;h2 id=&#34;configuring-the-windows-clients&#34;&gt;Configuring the Windows clients&lt;/h2&gt;

&lt;p&gt;Time to fire up Pageant and add the private key we created before. Afterwards, fire up PuTTY and configure it to connect to the Linux machine.&lt;/p&gt;

&lt;p&gt;You need to supply the following configuration options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Session &amp;gt; Host name / IP address: address of the Linux machine&lt;/li&gt;
&lt;li&gt;Session &amp;gt; Port: default is 22 (can be set in &lt;em&gt;sshd_config&lt;/em&gt; with &lt;code&gt;Port 12345&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Connection &amp;gt; Data &amp;gt; Auto-login username: username of the user you created (I used &lt;em&gt;gituser&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Connection &amp;gt; SSH &amp;gt; Auth &amp;gt; Authentication methods &amp;gt; Attempt authentication using Pageant: must be checked&lt;/li&gt;
&lt;li&gt;Connection &amp;gt; SSH &amp;gt; Auth &amp;gt; Authentication methods &amp;gt; Attempt &amp;ldquo;keyboard-interactive&amp;rdquo; auth: should not be checked&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to save the session (Session &amp;gt; Saved sessions - I saved it as &lt;em&gt;gituser&lt;/em&gt;). Then open the connection. PuTTY will warn you about the new host, so type &lt;code&gt;yes&lt;/code&gt; and press &lt;em&gt;Enter&lt;/em&gt; to confirm. You should now be successfully connected to the Linux box using SSH. You can close the session if that&amp;rsquo;s the case, otherwise verify if you&amp;rsquo;ve followed every step in this guide correctly and if you can ping the Linux machine.&lt;/p&gt;

&lt;p&gt;To complete our setup, we need to make Plink the SSH agent for git. All you need to do is create a new environment variable called &lt;code&gt;GIT_SSH&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;System properties &amp;gt; Advanced system settings &amp;gt; Environment variables &amp;gt; System variables &amp;gt; New &amp;gt;
Name: GIT_SSH
Value: C:\Program Files (x86)\PuTTY\plink.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To create a new repository to use as a remote, open a Windows Command Prompt and type &lt;code&gt;plink name-of-the-saved-session ./initrepo.sh name-of-the-new-repo&lt;/code&gt;. To delete an existing repository, you can use &lt;code&gt;plink name-of-the-saved-session ./delrepo.sh name-of-the-existing-repo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To add the repository you created as a remote to a git repository, use &lt;code&gt;git remote add how-you-want-to-name-the-remote ssh://address-of-the-linux-machine/~/name-of-the-repository.git&lt;/code&gt;. If you&amp;rsquo;re not using port 22 for SSH, put the port after the address, separated with colon.&lt;/p&gt;

&lt;p&gt;Because we use Pageant for authentication, we need to load Pageant with the private key every time we boot up our Windows machine. This is the last part of the process we have to automate. Create a new shortcut to Pageant in the folder &lt;code&gt;%appdata%\Microsoft\Windows\Start Menu\Programs\Startup&lt;/code&gt;. Now add the keys to that shortcut as explained in &lt;a href=&#34;http://blog.shvetsov.com/2010/03/making-pageant-automatically-load-keys.html&#34;&gt;this guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So this was my guide to setting up a Linux machine as a git repository server for Windows clients. You can now start committing and pushing away! &lt;a href=&#34;https://twitter.com/SamuelDebruyn&#34;&gt;Let me know&lt;/a&gt; if you need help or if you&amp;rsquo;re stuck somewhere.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Run Docker on Hyper-V with Docker Machine</title>
      <link>https://chipsncookies.com/2015/run-docker-on-hyper-v-with-docker-machine/</link>
      <pubDate>Sun, 11 Oct 2015 23:43:40 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2015/run-docker-on-hyper-v-with-docker-machine/</guid>
      <description>

&lt;p&gt;Docker is awesome, right? And thanks to [boot2docker](&lt;a href=&#34;http://boot2docker.io/(http://boot2docker.io/&#34;&gt;http://boot2docker.io/(http://boot2docker.io/&lt;/a&gt;) Windows users were no longer left out of the fun.&lt;/p&gt;

&lt;p&gt;Still, setting everything up could be a PITA and you had to install Oracle VirtualBox to use it as Docker containers were actually run inside of a VM (which was the purpose of boot2docker). If you use Hyper-V regularly, you&amp;rsquo;ll notice that you can&amp;rsquo;t have it both ways. Scott Hanselman &lt;a href=&#34;http://www.hanselman.com/blog/SwitchEasilyBetweenVirtualBoxAndHyperVWithABCDEditBootEntryInWindows81.aspx&#34;&gt;figured out a way&lt;/a&gt; to make switching between the two a little bit less painful, but you still had to reboot your machine if you wanted to use VirtualBox.&lt;/p&gt;

&lt;p&gt;Time to fix that! You can now use Hyper-V to run the boot2docker VM and connect to Docker on Windows. I guess that this has been possible since boot2docker was released, but it wasn&amp;rsquo;t that straightforward to set up at the time. Enter &lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;Docker Machine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;TL;DR: Docker Machine is a cross platform utility to help you set up, manage and connect to Docker. It automagically (well, most of the time) picks the best way to set up Docker in your environment. That&amp;rsquo;s the boot2docker VM on Windows with either VirtualBox either Hyper-V, plain old Docker on Linux etc.&lt;/p&gt;

&lt;p&gt;Docker still recommends using VirtualBox on Windows, but Docker Machine supports &lt;a href=&#34;https://docs.docker.com/machine/drivers/&#34;&gt;tons of other drivers&lt;/a&gt;: AWS, Digital Ocean, Google Compute, Azure, Rackspace, Hyper-V&amp;hellip;&lt;/p&gt;

&lt;p&gt;So how do you install Docker Machine on Windows with Hyper-V? Here we go.&lt;/p&gt;

&lt;h2 id=&#34;setting-up-hyper-v-and-network-connections&#34;&gt;Setting up Hyper-V and network connections&lt;/h2&gt;

&lt;p&gt;Make sure the Hyper-V role is installed on your computer and the &lt;em&gt;Hyper-V Manager&lt;/em&gt; works fine. &lt;a href=&#34;https://chipsncookies.com/2015/how-to-fix-common-hyper-v-errors-on-windows-10/&#34;&gt;I still had to fix a small issue on Windows 10&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next, create a &lt;em&gt;Virtual Network Switch&lt;/em&gt;. Pick &lt;em&gt;internal&lt;/em&gt; as type.&lt;/p&gt;

&lt;p&gt;Then go to your Network Connections, open the properties of your active internet connection and share the connection with the newly created virtual network switch. This will make sure that the IP of the boot2docker VM never changes and it still has internet access.&lt;/p&gt;

&lt;h2 id=&#34;download-and-install-docker-machine&#34;&gt;Download and &lt;em&gt;install&lt;/em&gt; Docker Machine&lt;/h2&gt;

&lt;p&gt;You don&amp;rsquo;t need Docker Toolbox if you&amp;rsquo;re not going to use Oracle VirtualBox. Just download the latest version of Docker Machine from &lt;a href=&#34;https://github.com/docker/machine/releases/&#34;&gt;GitHub&lt;/a&gt;, rename it to &lt;code&gt;docker-machine.exe&lt;/code&gt; and put it in your &lt;em&gt;PATH&lt;/em&gt;. That&amp;rsquo;s all there is to it.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-docker-machine-with-the-hyper-v-driver&#34;&gt;Create a new Docker Machine with the Hyper-V driver&lt;/h2&gt;

&lt;p&gt;Now open an administrative command prompt (you need to be an administrator to create new virtual machines) and execute the following command to create a new Docker Machine named &lt;em&gt;boot2docker&lt;/em&gt;. Make sure to replace &lt;code&gt;My Internal Switch&lt;/code&gt; with the name of the internal switch you created before. You can add &lt;code&gt;--hyper-v-memory xxxx&lt;/code&gt; before the name of the machine to change the default amount of memory (it&amp;rsquo;s dynamic) from 1024 to something else.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine create --driver hyperv --hyperv-virtual-switch &amp;quot;My Internal Switch&amp;quot; boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If all went well, you should get a message saying you still need to set the environment variables to connect to the machine. Running the following command will give you a few more commands to run which set the required variables.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine env --shell cmd boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;connect-to-your-boot2docker-instance&#34;&gt;Connect to your boot2docker instance&lt;/h2&gt;

&lt;p&gt;You can now connect to your newly created boot2docker instance with the following command as it should already be running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine ssh boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A few more helpful commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine --help
docker-machine stop boot2docker
docker-machine start boot2docker
docker-machine restart boot2docker
docker-machine kill boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you need more fine-grained control, you can still use the &lt;em&gt;Hyper-V Manager&lt;/em&gt; to adjust more settings.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The right way to create Windows installation media</title>
      <link>https://chipsncookies.com/2015/the-right-way-to-create-windows-installation-media/</link>
      <pubDate>Wed, 26 Aug 2015 18:55:47 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2015/the-right-way-to-create-windows-installation-media/</guid>
      <description>

&lt;p&gt;There are several ways to create a USB stick to install Windows. Chances are you end up with an error during the installation or you (unknowingly) use the wrong partition layout for your HDD/SSD.&lt;/p&gt;

&lt;h2 id=&#34;get-an-iso&#34;&gt;Get an ISO&lt;/h2&gt;

&lt;p&gt;Which version of Windows do you want to install? This guide would work fine with Windows Vista or newer, but you can get an ISO for Windows 10 Home/Pro on &lt;a href=&#34;https://www.microsoft.com/en-us/software-download/windows10ISO&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The problem with that page, however, is that it redirects you to a download of a media creation tool if you&amp;rsquo;re opening the page on a Windows PC. The media creation tool allows you to download an ISO image, but it &lt;a href=&#34;http://d.ibtimes.co.uk/en/full/1451630/windows-10-installation-errors.png&#34;&gt;doesn&amp;rsquo;t always work properly&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So fiddle with your user agent settings (the hard way)&amp;hellip;&lt;/p&gt;

&lt;p&gt;or open it up on your smartphone/tablet, select the version of Windows you want to download and send the direct download link to yourself (the easy way).&lt;/p&gt;

&lt;h2 id=&#34;get-rufus&#34;&gt;Get Rufus&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://rufus.akeo.ie/&#34;&gt;Rufus&lt;/a&gt; is a simple tool which lets you easily create bootable USB sticks for any kind of operating system. All you have to do is download it. Rufus doesn&amp;rsquo;t require an installation.&lt;/p&gt;

&lt;h2 id=&#34;creating-the-image&#34;&gt;Creating the image&lt;/h2&gt;

&lt;p&gt;Now plug in your USB stick, fire up Rufus and point it to your USB stick (first dropdown list) and the ISO image (button next to the last dropdown list) you just downloaded. &lt;strong&gt;Pay attention&lt;/strong&gt; to the next steps, because Rufus will delete everything on the USB stick/disk you select.&lt;/p&gt;

&lt;p&gt;Select &lt;em&gt;GPT with UEFI&lt;/em&gt; for the partition layout.&lt;/p&gt;

&lt;p&gt;Pick &lt;em&gt;FAT32&lt;/em&gt; as filesystem (no, NTFS won&amp;rsquo;t work).&lt;/p&gt;

&lt;p&gt;Leave the cluster size at its default setting (&lt;em&gt;4096 bytes&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Make sure the checkmark next to &lt;em&gt;Create bootable disk with ISO image&lt;/em&gt; is checked.&lt;/p&gt;

&lt;p&gt;Now all you have to do is press &lt;em&gt;Start&lt;/em&gt; and wait a few minutes (depends on the speed of your USB device, could take about 15 minutes).&lt;/p&gt;

&lt;h2 id=&#34;booting-the-image&#34;&gt;Booting the image&lt;/h2&gt;

&lt;p&gt;This guide ends here, but if you don&amp;rsquo;t know how to boot your PC from the installation image you just created, consult the manual of your PC, BIOS or motherboard. &lt;em&gt;Usually you need to press one of the F-buttons while the logo of your motherboard&amp;rsquo;s manufacturer is displayed.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While you&amp;rsquo;re in your BIOS, make sure to enable &lt;em&gt;AHCI&lt;/em&gt; in the settings of your SATA ports and &lt;em&gt;UEFI&lt;/em&gt; in your boot settings. Always pick the listed &lt;em&gt;UEFI&lt;/em&gt; device when you select a boot device.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Natively boot Windows with a virtual HDD</title>
      <link>https://chipsncookies.com/2015/natively-boot-windows-with-a-virtual-hdd/</link>
      <pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2015/natively-boot-windows-with-a-virtual-hdd/</guid>
      <description>&lt;p&gt;A few days ago &lt;a href=&#34;https://insider.windows.com&#34;&gt;Microsoft released a new build for Windows 10&lt;/a&gt; and I wanted to give it a try. However, I didn&amp;rsquo;t want to resize my partitions or overwrite my Windows 8.1 partition.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Well, then install it in a VM!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then I wouldn&amp;rsquo;t have access to all of my RAM and CPU, so that wasn&amp;rsquo;t a solution either. However, I found the ideal solution.&lt;/p&gt;

&lt;p&gt;Apparently you can &lt;strong&gt;install Windows in a virtual hard drive&lt;/strong&gt;. Let me guide you through:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new VHD-file and remember the path to it. You can use &lt;em&gt;Disk Management&lt;/em&gt; (run &lt;code&gt;diskmgmt.msc&lt;/code&gt;) and click &lt;em&gt;Action&lt;/em&gt; and &lt;em&gt;Create VHD&lt;/em&gt;. I made it about 70 GB big with a dynamic size.&lt;/li&gt;
&lt;li&gt;Boot into the Windows installation (use &lt;a href=&#34;https://rufus.akeo.ie/&#34;&gt;Rufus&lt;/a&gt; or something similar to create a bootable USB stick).&lt;/li&gt;
&lt;li&gt;Select &lt;em&gt;Custom: Install Windows only (Advanced)&lt;/em&gt;, not an &lt;em&gt;Upgrade&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Now you have to select the partition on which you want to install Windows. Press &lt;em&gt;SHIFT+F10&lt;/em&gt; to open a command prompt instead.&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;diskpart&lt;/code&gt; to open the DiskPart utility.&lt;/li&gt;
&lt;li&gt;In DiskPart enter &lt;code&gt;select vdisk file=C:\Windows10.vhd&lt;/code&gt; with the correct path to your VHD to select the VHD.&lt;/li&gt;
&lt;li&gt;Now enter &lt;code&gt;attach vdisk&lt;/code&gt; and close the command prompt.&lt;/li&gt;
&lt;li&gt;If you now press &lt;em&gt;Refresh&lt;/em&gt; you will see unallocated space on a newly added disk station, that is your virtual hard drive. Select it.&lt;/li&gt;
&lt;li&gt;You can now continue installing Windows as usual.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I was surprised to find out about this possibility. This way you can try the new Windows &lt;em&gt;in full&lt;/em&gt; without compromising your production environment.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quick tips for problems with Windows Store and Windows 8 apps</title>
      <link>https://chipsncookies.com/2014/quick-tips-for-problems-with-windows-store-and-windows-8-apps/</link>
      <pubDate>Sun, 23 Mar 2014 00:00:00 +0000</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2014/quick-tips-for-problems-with-windows-store-and-windows-8-apps/</guid>
      <description>

&lt;p&gt;These are a few quick tips for when you&amp;rsquo;re experiencing problems with the Windows Store in Windows 8(.1)/9 and opening apps in Windows 8(.1)/9.&lt;/p&gt;

&lt;h2 id=&#34;symptoms&#34;&gt;Symptoms:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;clicking on a link to a Windows Store app shows a page telling you that the app could not be found&lt;/li&gt;
&lt;li&gt;clicking on a tile in the Windows Store doesn&amp;rsquo;t do anything&lt;/li&gt;
&lt;li&gt;the Windows Store doesn&amp;rsquo;t open&lt;/li&gt;
&lt;li&gt;an installed app doesn&amp;rsquo;t open&lt;/li&gt;
&lt;li&gt;an installed app tells you that you have to buy this app while you&amp;rsquo;ve already bought it&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;solutions&#34;&gt;Solutions:&lt;/h2&gt;

&lt;h3 id=&#34;for-problems-solely-related-to-the-windows-store&#34;&gt;For problems solely related to the Windows Store&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Click on the Windows Store tile.&lt;/li&gt;
&lt;li&gt;Touch the top of the screen and swipe it down (the gesture to close an app) and hold your mouse/finger at the bottom of the screen for at least 5 seconds.&lt;/li&gt;
&lt;li&gt;After 5 seconds, release your mouse/finger.&lt;/li&gt;
&lt;li&gt;Make sure you&amp;rsquo;re connected to the Internet.&lt;/li&gt;
&lt;li&gt;Press R while holding the Windows key on your keyboard.&lt;/li&gt;
&lt;li&gt;Type &lt;em&gt;wsreset&lt;/em&gt; and press enter.&lt;/li&gt;
&lt;li&gt;The Windows Store should now pop up. Wait for it to load, this can take up to a minute.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;for-everything-else&#34;&gt;For everything else&lt;/h3&gt;

&lt;p&gt;Make sure you&amp;rsquo;ve done the above solution for problems related to the Windows Store.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the Windows Store.&lt;/li&gt;
&lt;li&gt;Open the right charms bar (move your mouse to the bottom right corner of your screen).&lt;/li&gt;
&lt;li&gt;Click on &lt;em&gt;app updates&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Press the &lt;em&gt;sync licenses&lt;/em&gt; button.&lt;/li&gt;
&lt;li&gt;Press the &lt;em&gt;search updates&lt;/em&gt; button.&lt;/li&gt;
&lt;li&gt;Now update all your apps.&lt;/li&gt;
&lt;li&gt;Repeat this process once more if the problems persist.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If this didn&amp;rsquo;t fix the problems you&amp;rsquo;re experiencing, you should &lt;a href=&#34;https://twitter.com/intent/tweet?text=@WindowsSupport%20&#34;&gt;contact Microsoft&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>