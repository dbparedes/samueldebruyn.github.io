<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Samuel Debruyn</title>
    <link>http://sa.muel.be/tags/docker/</link>
    <description>Recent content in Docker on Samuel Debruyn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>s@muel.be (Samuel Debruyn)</managingEditor>
    <webMaster>s@muel.be (Samuel Debruyn)</webMaster>
    <lastBuildDate>Sun, 11 Oct 2015 23:43:40 +0200</lastBuildDate>
    <atom:link href="http://sa.muel.be/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Run Docker on Hyper-V with Docker Machine</title>
      <link>http://sa.muel.be/2015/run-docker-on-hyper-v-with-docker-machine/</link>
      <pubDate>Sun, 11 Oct 2015 23:43:40 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/run-docker-on-hyper-v-with-docker-machine/</guid>
      <description>

&lt;p&gt;Docker is awesome, right? And thanks to &lt;a href=&#34;http://boot2docker.io/(http://boot2docker.io/&#34;&gt;boot2docker&lt;/a&gt; Windows users were no longer left out of the fun.&lt;/p&gt;

&lt;p&gt;Still, setting everything up could be a PITA and you had to install Oracle VirtualBox to use it as Docker containers were actually run inside of a VM (which was the purpose of boot2docker). If you use Hyper-V regularly, you&amp;rsquo;ll notice that you can&amp;rsquo;t have it both ways. Scott Hanselman &lt;a href=&#34;http://www.hanselman.com/blog/SwitchEasilyBetweenVirtualBoxAndHyperVWithABCDEditBootEntryInWindows81.aspx&#34;&gt;figured out a way&lt;/a&gt; to make switching between the two a little bit less painful, but you still had to reboot your machine if you wanted to use VirtualBox.&lt;/p&gt;

&lt;p&gt;Time to fix that! You can now use Hyper-V to run the boot2docker VM and connect to Docker on Windows. I guess that this has been possible since boot2docker was released, but it wasn&amp;rsquo;t that straightforward to set up at the time. Enter &lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;Docker Machine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;TL;DR: Docker Machine is a cross platform utility to help you set up, manage and connect to Docker. It automagically (well, most of the time) picks the best way to set up Docker in your environment. That&amp;rsquo;s the boot2docker VM on Windows with either VirtualBox either Hyper-V, plain old Docker on Linux etc.&lt;/p&gt;

&lt;p&gt;Docker still recommends using VirtualBox on Windows, but Docker Machine supports &lt;a href=&#34;https://docs.docker.com/machine/drivers/&#34;&gt;tons of other drivers&lt;/a&gt;: AWS, Digital Ocean, Google Compute, Azure, Rackspace, Hyper-V&amp;hellip;&lt;/p&gt;

&lt;p&gt;So how do you install Docker Machine on Windows with Hyper-V? Here we go.&lt;/p&gt;

&lt;h2 id=&#34;setting-up-hyper-v-and-network-connections:cf9e56839475a0b7dfa86493bb900f82&#34;&gt;Setting up Hyper-V and network connections&lt;/h2&gt;

&lt;p&gt;Make sure the Hyper-V role is installed on your computer and the &lt;em&gt;Hyper-V Manager&lt;/em&gt; works fine. &lt;a href=&#34;http://sa.muel.be/2015/how-to-fix-common-hyper-v-errors-on-windows-10/&#34;&gt;I still had to fix a small issue on Windows 10&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next, create a &lt;em&gt;Virtual Network Switch&lt;/em&gt;. Pick &lt;em&gt;internal&lt;/em&gt; as type.&lt;/p&gt;

&lt;p&gt;Then go to your Network Connections, open the properties of your active internet connection and share the connection with the newly created virtual network switch. This will make sure that the IP of the boot2docker VM never changes and it still has internet access.&lt;/p&gt;

&lt;h2 id=&#34;download-and-install-docker-machine:cf9e56839475a0b7dfa86493bb900f82&#34;&gt;Download and &lt;em&gt;install&lt;/em&gt; Docker Machine&lt;/h2&gt;

&lt;p&gt;You don&amp;rsquo;t need Docker Toolbox if you&amp;rsquo;re not going to use Oracle VirtualBox. Just download the latest version of Docker Machine from &lt;a href=&#34;https://github.com/docker/machine/releases/&#34;&gt;GitHub&lt;/a&gt;, rename it to &lt;code&gt;docker-machine.exe&lt;/code&gt; and put it in your &lt;em&gt;PATH&lt;/em&gt;. That&amp;rsquo;s all there is to it.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-docker-machine-with-the-hyper-v-driver:cf9e56839475a0b7dfa86493bb900f82&#34;&gt;Create a new Docker Machine with the Hyper-V driver&lt;/h2&gt;

&lt;p&gt;Now open an administrative command prompt (you need to be an administrator to create new virtual machines) and execute the following command to create a new Docker Machine named &lt;em&gt;boot2docker&lt;/em&gt;. Make sure to replace &lt;code&gt;My Internal Switch&lt;/code&gt; with the name of the internal switch you created before. You can add &lt;code&gt;--hyper-v-memory xxxx&lt;/code&gt; before the name of the machine to change the default amount of memory (it&amp;rsquo;s dynamic) from 1024 to something else.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine create --driver Hyper-V --hyper-v-virtual-switch &amp;quot;My Internal Switch&amp;quot; boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If all went well, you should get a message saying you still need to set the environment variables to connect to the machine. Running the following command will give you a few more commands to run which set the required variables.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine env --shell cmd boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;connect-to-your-boot2docker-instance:cf9e56839475a0b7dfa86493bb900f82&#34;&gt;Connect to your boot2docker instance&lt;/h2&gt;

&lt;p&gt;You can now connect to your newly created boot2docker instance with the following command as it should already be running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine ssh boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A few more helpful commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine --help
docker-machine stop boot2docker
docker-machine start boot2docker
docker-machine restart boot2docker
docker-machine kill boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you need more fine-grained control, you can still use the &lt;em&gt;Hyper-V Manager&lt;/em&gt; to adjust more settings.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to fix common Hyper-V errors on Windows 10</title>
      <link>http://sa.muel.be/2015/how-to-fix-common-hyper-v-errors-on-windows-10/</link>
      <pubDate>Sun, 11 Oct 2015 22:38:46 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/how-to-fix-common-hyper-v-errors-on-windows-10/</guid>
      <description>&lt;p&gt;This short post is more of a note to myself for when I run into the same problem. I just wasted an hour on it so I guess that justifies it.&lt;/p&gt;

&lt;p&gt;So, what happened? I wanted to check out the new &lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;Docker Machine&lt;/a&gt; with Hyper-V support, but the Hyper-V Manager told me it could not connect to my local computer.&lt;/p&gt;

&lt;p&gt;When I opened Hyper-V Manager all I saw was an introduction. I then clicked &lt;em&gt;Connect to server&lt;/em&gt; and selected my local computer. A confusing error message appeared telling me that an object was not found. It was the &lt;em&gt;Hyper-V Virtual Machine Management service&lt;/em&gt; which seemed to be missing.&lt;/p&gt;

&lt;p&gt;My hypervisor was running, the mentioned service was running, there were no errors in the Event Viewer&amp;hellip; everything seemed to be working fine.&lt;/p&gt;

&lt;p&gt;A lot of Googling led me to &lt;a href=&#34;https://community.spiceworks.com/how_to/122307-fix-error-managing-hyper-v-server-2012-r2-from-windows-10&#34;&gt;a post&lt;/a&gt; mentioning a command that fixed this problem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MOFCOMP %SYSTEMROOT%\System32\WindowsVirtualization.V2.mof
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command reinitializes Hyper-V management on your computer and fixes this error. It seems to be a frequent cause of headaches on Windows 10 hosts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker image for Hugo builds (with Wercker)</title>
      <link>http://sa.muel.be/2015/docker-image-for-hugo-builds-with-wercker/</link>
      <pubDate>Mon, 31 Aug 2015 18:56:39 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/docker-image-for-hugo-builds-with-wercker/</guid>
      <description>

&lt;p&gt;This blog is built with &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, which allows me to use some great CI tools like &lt;a href=&#34;http://wercker.com&#34;&gt;Wercker&lt;/a&gt;. The first part of writing a &lt;em&gt;wercker.yml&lt;/em&gt; is picking a build container.&lt;/p&gt;

&lt;p&gt;A build container on Wercker is the environment in which your build or deploy steps run. Wercker used to build its own containers for that, but they&amp;rsquo;ve moved away from that approach to Docker containers. You can use all kinds of Docker containers, but most people just use one available publicly on &lt;a href=&#34;https://registry.hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To deploy my website to &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub pages&lt;/a&gt;, all I need is Git. So that&amp;rsquo;s why I built &lt;a href=&#34;https://hub.docker.com/r/samueldebruyn/debian-git/&#34;&gt;this simple Docker container&lt;/a&gt; with Debian and Git.&lt;/p&gt;

&lt;p&gt;Building this blog requires some more packages. Wercker doesn&amp;rsquo;t automatically pull in your Git submodules, so Git is also a necessity there. Another one is Hugo, to build the static website itself. Hugo doesn&amp;rsquo;t minimize your files, however. That&amp;rsquo;s why I also include &lt;a href=&#34;https://github.com/yui/yuicompressor&#34;&gt;YUI compressor&lt;/a&gt; (minifies *.js and *.css) and &lt;a href=&#34;https://github.com/kangax/html-minifier&#34;&gt;HTML minifier&lt;/a&gt; (like the name says, minifies HTML files). Finally, I&amp;rsquo;ve been experimenting with &lt;a href=&#34;https://github.com/gjtorikian/html-proofer&#34;&gt;HTML proofer&lt;/a&gt; to validate the generated HTML files and check them for dead links. All of these packages (and their dependencies) are available in my Docker container called &lt;a href=&#34;https://hub.docker.com/r/samueldebruyn/hugo-build/&#34;&gt;hugo-build&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;side-notes:32cb3da98bb2342bbc176f65d9a11aa9&#34;&gt;Side notes&lt;/h2&gt;

&lt;h3 id=&#34;hugo-build:32cb3da98bb2342bbc176f65d9a11aa9&#34;&gt;hugo-build&lt;/h3&gt;

&lt;p&gt;The image is quite big. It needs Java for YUI compressor, Ruby for html-proofer and Node for html-minifier. Setting up the environment and storing the container each take about half a minute. If you have some suggestions on making the image smaller, please &lt;a href=&#34;https://github.com/SamuelDebruyn/docker-hugo-build&#34;&gt;submit an issue or a pull request&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The latest list of included packages is available in the &lt;a href=&#34;https://github.com/SamuelDebruyn/docker-hugo-build&#34;&gt;README file&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The build often fails on a time-out while running &lt;code&gt;apt-get&lt;/code&gt;. It&amp;rsquo;s usually &lt;em&gt;fixed&lt;/em&gt; by running another build.&lt;/p&gt;

&lt;h3 id=&#34;html-proofer:32cb3da98bb2342bbc176f65d9a11aa9&#34;&gt;html-proofer&lt;/h3&gt;

&lt;p&gt;html-proofer will often fail because it scans your website for dead links before your website is even published. I haven&amp;rsquo;t been able to work around this, but &lt;a href=&#34;https://github.com/gjtorikian/html-proofer/pull/178&#34;&gt;here&amp;rsquo;s an issue&lt;/a&gt; that&amp;rsquo;s keeping track of this.&lt;/p&gt;

&lt;h3 id=&#34;example-wercker-yml-using-these-images:32cb3da98bb2342bbc176f65d9a11aa9&#34;&gt;Example &lt;em&gt;wercker.yml&lt;/em&gt; using these images&lt;/h3&gt;

&lt;p&gt;My blog uses these images to build and deploy automatically through Wercker. The source code is &lt;a href=&#34;https://github.com/SamuelDebruyn/sa.muel.be-hugo&#34;&gt;publicly available&lt;/a&gt; on GitHub.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>