<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Samuel Debruyn</title>
    <link>http://sa.muel.be/</link>
    <description>Recent content on Samuel Debruyn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>s@muel.be (Samuel Debruyn)</managingEditor>
    <webMaster>s@muel.be (Samuel Debruyn)</webMaster>
    <lastBuildDate>Mon, 13 Jul 2015 08:00:00 +0200</lastBuildDate>
    <atom:link href="http://sa.muel.be/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Material-lite theme for hugo</title>
      <link>http://sa.muel.be/2015/material-lite-theme-for-hugo/</link>
      <pubDate>Mon, 13 Jul 2015 08:00:00 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/material-lite-theme-for-hugo/</guid>
      <description>&lt;p&gt;Last week, &lt;a href=&#34;http://sa.muel.be/2015/an-introduction-to-hugo-a-static-site-generator/&#34;&gt;I wrote a post&lt;/a&gt; about how awesome &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt; is and why I switched from Jekyll to hugo.&lt;/p&gt;

&lt;p&gt;Then, a few days later, Google released an awesome template called &lt;a href=&#34;http://getmdl.io&#34;&gt;Material Design Lite&lt;/a&gt;. It&amp;rsquo;s basically Google&amp;rsquo;s famous &lt;a href=&#34;https://www.google.com/design/spec/material-design/introduction.html&#34;&gt;Material Design&lt;/a&gt; in HTML, CSS and JavaScript instead of in &lt;a href=&#34;https://www.polymer-project.org&#34;&gt;Polymer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was thinking about setting up another website for some side project and wanted to use material design. So I decided to write a material design theme for a simple hugo blog.&lt;/p&gt;

&lt;p&gt;You can check it out at &lt;a href=&#34;https://github.com/SamuelDebruyn/hugo-material-lite&#34;&gt;https://github.com/SamuelDebruyn/hugo-material-lite&lt;/a&gt; (&lt;a href=&#34;http://materialexample.sa.muel.be&#34;&gt;demo&lt;/a&gt;) Enjoy!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An introduction to hugo, a static site generator</title>
      <link>http://sa.muel.be/2015/an-introduction-to-hugo-a-static-site-generator/</link>
      <pubDate>Wed, 08 Jul 2015 14:50:29 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/an-introduction-to-hugo-a-static-site-generator/</guid>
      <description>

&lt;h2 id=&#34;a-good-blogging-platform:57055f3baf8c62a101a577dbb24c22b2&#34;&gt;A good blogging platform&lt;/h2&gt;

&lt;p&gt;What makes a good blogging platform really good? Well, that depends on the blogger. Programmers would need different features than make-up bloggers. As a programmer, I need to be able to easily integrate pieces of code with syntax highlighting in my posts and I&amp;rsquo;d prefer writing them in my favourite text/code editor instead of in a WYSIWYG editor.&lt;/p&gt;

&lt;h2 id=&#34;jekyll:57055f3baf8c62a101a577dbb24c22b2&#34;&gt;Jekyll&lt;/h2&gt;

&lt;p&gt;A static site generator like &lt;a href=&#34;http://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; fulfils (almost) all my needs as a programmer/blogger:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;posts are written in &lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt;, Textile, HTML&amp;hellip;&lt;/li&gt;
&lt;li&gt;you don&amp;rsquo;t need to setup a database and any simple web server will do the job since all you have to host is a simple, static website&lt;/li&gt;
&lt;li&gt;once setup, you don&amp;rsquo;t need to think about updates etc.&lt;/li&gt;
&lt;li&gt;extremely developer friendly (e.g. publish a post using the command line) and open source&lt;/li&gt;
&lt;li&gt;works great with source code control&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, after a while, you start to notice the little things that make Jekyll a lot less simple than it looks like.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it&amp;rsquo;s written in Ruby and some of its dependencies aren&amp;rsquo;t (bug free) available on &lt;del&gt;all platforms&lt;/del&gt; Windows&lt;/li&gt;
&lt;li&gt;setting it up can be quite bothersome, again, especially on Windows&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;hugo:57055f3baf8c62a101a577dbb24c22b2&#34;&gt;Hugo&lt;/h2&gt;

&lt;p&gt;A few other static site generators &lt;a href=&#34;https://www.staticgen.com&#34;&gt;have sprung up&lt;/a&gt; since Jekyll&amp;rsquo;s success.&lt;/p&gt;

&lt;p&gt;The one that caught my attention was &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt;. It has all the goodness from Jekyll, but it&amp;rsquo;s way easier to setup. Hugo itself is written in &lt;a href=&#34;http://golang.org&#34;&gt;Go&lt;/a&gt;, but they build &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;executable binaries&lt;/a&gt; for a lot of platforms and architectures. So you don&amp;rsquo;t need to install anything else. Even compiling it yourself isn&amp;rsquo;t that hard.&lt;/p&gt;

&lt;p&gt;The process of creating a new website is very similar to Jekyll. The &lt;code&gt;hugo&lt;/code&gt; command literally explains itself (&lt;code&gt;hugo help&lt;/code&gt;) and the &lt;a href=&#34;http://gohugo.io/overview/introduction/&#34;&gt;documentation&lt;/a&gt; on its website should suffice for most users.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve successfully migrated my &lt;a href=&#34;https://github.com/SamuelDebruyn/samueldebruyn.github.io/tree/5f5719a9d4519f8fbd4cdfffa2a10b3f066401ef&#34;&gt;Jekyll blog&lt;/a&gt; to &lt;a href=&#34;https://github.com/SamuelDebruyn/sa.muel.be-hugo&#34;&gt;hugo&lt;/a&gt; and haven&amp;rsquo;t regretted it ever since.&lt;/p&gt;

&lt;h2 id=&#34;disadvantages:57055f3baf8c62a101a577dbb24c22b2&#34;&gt;Disadvantages&lt;/h2&gt;

&lt;p&gt;One of the major disadvantages of hugo, or any static site generator for that matter, is integrating &lt;strong&gt;search&lt;/strong&gt;. You need some &lt;a href=&#34;http://discuss.gohugo.io/t/how-are-you-implementing-site-search/986/14&#34;&gt;JavaScript magic&lt;/a&gt; or a 3rd party search provider like &lt;a href=&#34;https://cse.google.com&#34;&gt;Google Custom Search Engine&lt;/a&gt; (which I went for).&lt;/p&gt;

&lt;p&gt;The other dynamic part of an ordinary blog is &lt;strong&gt;the comment section&lt;/strong&gt;. Again, the easiest way to &lt;em&gt;fix&lt;/em&gt; this is relying on a 3rd party comments plugin like &lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Still, these two disadvantages are easily outweighed by the advantages of a static website. Your website will survive &lt;a href=&#34;https://en.wikipedia.org/wiki/Slashdot_effect&#34;&gt;slashdotting&lt;/a&gt; and the only required maintenance is literally making sure your web server stays online.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Recovering a hacked WordPress</title>
      <link>http://sa.muel.be/2015/recovering-a-hacked-wordpress/</link>
      <pubDate>Mon, 06 Jul 2015 14:14:32 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/recovering-a-hacked-wordpress/</guid>
      <description>

&lt;h2 id=&#34;introduction:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;A few weeks ago, I had to &lt;a href=&#34;http://sa.muel.be/2015/about-that-time-i-dealt-with-a-bunch-of-hackers-on-a-wordpress/&#34;&gt;repair a hacked WordPress&lt;/a&gt; installation.&lt;/p&gt;

&lt;p&gt;A lot of the information I needed to successfully clean the WordPress completely of infected files was not centralized in a single guide. So I decided to write one and you are now reading it.&lt;/p&gt;

&lt;p&gt;So, your website is hacked, what now? Let&amp;rsquo;s go through the process of making sure that every infection is removed and it never happens again.&lt;/p&gt;

&lt;p&gt;In this first part you&amp;rsquo;ll recover from a hack. In a second part you&amp;rsquo;ll learn how to harden the security. I&amp;rsquo;ll publish &lt;a href=&#34;http://sa.muel.be/2015/hardening-your-wordpress-security/&#34;&gt;the second part&lt;/a&gt; a few weeks after the first part.&lt;/p&gt;

&lt;p&gt;This post is meant to be exhaustive and clear. If you have any suggestions or feel like something is missing or unclear, &lt;a href=&#34;mailto:s@muel.be?subject=Suggestions%20for%20the%20post%20about%20recovering%20a%20Wordpress%20hack&#34;&gt;&lt;em&gt;please&lt;/em&gt; let me know&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The WordPress version I used to write this post is 4.2.2.&lt;/p&gt;

&lt;h2 id=&#34;disabling-all-plugins-going-into-maintenance-mode:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Disabling all plugins / going into maintenance mode&lt;/h2&gt;

&lt;p&gt;The first thing you should do is avoiding further infections. &lt;strong&gt;Disable EVERY plugin&lt;/strong&gt;. We&amp;rsquo;ll reactivate them later on.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d also put the website in maintenance mode. This requires, ironically, a plugin called &lt;a href=&#34;https://wordpress.org/plugins/wp-maintenance-mode/&#34;&gt;WP Maintenance Mode&lt;/a&gt;. Install it, write a quick message for your visitors and enable it.&lt;/p&gt;

&lt;h2 id=&#34;take-a-backup:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Take a backup&lt;/h2&gt;

&lt;p&gt;Backup your complete WordPress folder and database. You can download all the files using FTP or SSH and export the database to SQL statements using something like &lt;a href=&#34;http://www.phpmyadmin.net/home_page/index.php&#34;&gt;phpMyAdmin&lt;/a&gt; or the customer panel of your host (CPanel, DirectAdmin&amp;hellip;). Don&amp;rsquo;t store the backup on your webserver as the hackers could also infect this backup.&lt;/p&gt;

&lt;h2 id=&#34;restore-the-original-wordpress-files:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Restore the original WordPress files&lt;/h2&gt;

&lt;p&gt;Download &lt;a href=&#34;https://wordpress.org/download/release-archive/&#34;&gt;a fresh copy of the version of WordPress&lt;/a&gt; you were using (which should always be the latest one). Unpack it and replace the directories &lt;em&gt;wp-admin&lt;/em&gt; and &lt;em&gt;wp-includes&lt;/em&gt; completely with the copy you just downloaded. Do the same with every file in the root folder and remove every file in your root that is not in the downloaded copy except for &lt;em&gt;wp-config.php&lt;/em&gt;. The &lt;strong&gt;only folder left untouched should be &lt;em&gt;wp-content&lt;/em&gt;&lt;/strong&gt;. WordPress also doesn&amp;rsquo;t include the &lt;em&gt;wp-config.php&lt;/em&gt; file so that should also be preserved (we&amp;rsquo;ll inspect this file later on in this guide).&lt;/p&gt;

&lt;h2 id=&#34;clearing-the-cache:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Clearing the cache&lt;/h2&gt;

&lt;p&gt;Delete the folders &lt;em&gt;wp-content/cache&lt;/em&gt; and &lt;em&gt;wp-content/plugins/widgets&lt;/em&gt;. They will be automatically recreated.&lt;/p&gt;

&lt;h2 id=&#34;regenerate-salts-and-hashes:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Regenerate salts and hashes&lt;/h2&gt;

&lt;p&gt;The &lt;em&gt;wp-config.php&lt;/em&gt; file contains a few hashes and salts to make sure that your cookies and sessions are unique and secure. As these could have been compromised, it&amp;rsquo;s &lt;strong&gt;absolutely necessary&lt;/strong&gt; to regenerate them. Open your &lt;em&gt;wp-config.php&lt;/em&gt; file in a text editor and overwrite your new hashes with new ones. WordPress offers &lt;a href=&#34;https://api.wordpress.org/secret-key/1.1/salt/&#34;&gt;an online generator&lt;/a&gt; so you can easily copy and paste them.&lt;/p&gt;

&lt;h2 id=&#34;upgrade-to-the-latest-version:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Upgrade to the latest version&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;re not on the latest version of WordPress, then update ASAP. I&amp;rsquo;d recommend using &lt;a href=&#34;https://codex.wordpress.org/Upgrading_WordPress_-_Extended_Instructions&#34;&gt;these extended instructions&lt;/a&gt; instead of the built-in updater, but the built-in updater should be fine for most infected websites.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Upgrade all your themes and plugins&lt;/strong&gt; while you&amp;rsquo;re at it.&lt;/p&gt;

&lt;h2 id=&#34;restore-the-original-themes-and-plugins:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Restore the original themes and plugins&lt;/h2&gt;

&lt;p&gt;In this step we&amp;rsquo;re going to restore the original theme and plugin files like we did with the original WordPress files. Download the &lt;a href=&#34;https://wordpress.org/themes/&#34;&gt;themes&lt;/a&gt; and &lt;a href=&#34;https://wordpress.org/plugins/&#34;&gt;plugins&lt;/a&gt; from wordpress.org or from the website of the publisher of the plugin or theme (for premium/payed versions). All you need to do is unpack the files into their respective directories in &lt;em&gt;wp-content/themes&lt;/em&gt; and &lt;em&gt;wp-content/plugins&lt;/em&gt;. Make sure there are no other files than the ones you just replaced in both of these folders.&lt;/p&gt;

&lt;p&gt;NB: some plugins (e.g. plugins containing &lt;a href=&#34;http://wpengineer.com/2500/wordpress-dropins/&#34;&gt;drop-ins&lt;/a&gt;) like &lt;a href=&#34;https://wordpress.org/plugins/wp-super-cache/&#34;&gt;WP Super Cache&lt;/a&gt; also put PHP files in your &lt;em&gt;wp-content&lt;/em&gt; directory.&lt;/p&gt;

&lt;h2 id=&#34;search-and-delete-infections-in-your-files:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Search and delete infections in your files&lt;/h2&gt;

&lt;p&gt;The only infected files left could be stored in the subfolders of &lt;em&gt;wp-content&lt;/em&gt; that we haven&amp;rsquo;t looked into yet.&lt;/p&gt;

&lt;h3 id=&#34;languages:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;languages&lt;/h3&gt;

&lt;p&gt;If your WordPress is in English, you can safely delete the contents of the &lt;em&gt;languages&lt;/em&gt; folder, otherwise you should download the translation in your language and put in the &lt;em&gt;wp-content/languages&lt;/em&gt; while deleting everything else in it.&lt;/p&gt;

&lt;h3 id=&#34;upgrade:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;upgrade&lt;/h3&gt;

&lt;p&gt;The folder &lt;em&gt;upgrade&lt;/em&gt; in &lt;em&gt;wp-content&lt;/em&gt; is used by WordPress&amp;rsquo; built-in updater and should always be empty except for when you&amp;rsquo;re updating of course.&lt;/p&gt;

&lt;h3 id=&#34;uploads-and-other-folders:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;uploads and other folders&lt;/h3&gt;

&lt;p&gt;Next up: search every other folder in &lt;em&gt;wp-content&lt;/em&gt; for PHP and server configuration files and delete files if you think they shouldn&amp;rsquo;t be there. I suggest doing a case insensitive search for &lt;em&gt;*.php&lt;/em&gt; and &lt;em&gt;.htaccess&lt;/em&gt; and carefully inspecting the results.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;find /path/to/wordpress/wp-content/uploads/ -iname &amp;quot;*.php&amp;quot; -or -iname &amp;quot;.htaccess&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You probably shouldn&amp;rsquo;t have any PHP or .htaccess files in &lt;em&gt;wp-content/uploads/someyear/&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Finally search all the remaining files for typical code injections. PHP injections usually contain the functions &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;base64_decode&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;egrep &#39;eval(|decode(&#39; -r -H /path/to/wordpress/wp-content/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;search-and-delete-infections-in-your-database:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Search and delete infections in your database&lt;/h2&gt;

&lt;p&gt;While most infections are usually to be found in the files, hackers could also insert executable and obfuscated code into your database. Most often these are XSS injections and WordPress should protect you against them. Still, it wouldn&amp;rsquo;t hurt to scan your posts and comments for injected code.&lt;/p&gt;

&lt;p&gt;The easiest way is to connect to your database right away using something like the previously mentioned &lt;em&gt;phpMyAdmin&lt;/em&gt; tool. Login, open the database and go to the SQL page so you can run some SQL commands. The select statements below will show you the posts and comments containing common injections. Use a &lt;code&gt;DELETE&lt;/code&gt; query (be careful) or the &lt;em&gt;phpMyAdmin&lt;/em&gt; GUI to completely delete the found posts and comments. Don&amp;rsquo;t forget to change &lt;code&gt;wp_&lt;/code&gt; to the prefix you use.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SELECT * FROM wp_posts WHERE post_content LIKE &#39;%&amp;lt;iframe%&#39;
UNION
SELECT * FROM wp_posts WHERE post_content LIKE &#39;%&amp;lt;noscript%&#39;
UNION
SELECT * FROM wp_posts WHERE post_content LIKE &#39;%display:%&#39;
UNION
SELECT * FROM wp_posts WHERE post_content LIKE &#39;%&amp;lt;?%&#39;
UNION
SELECT * FROM wp_posts WHERE post_content LIKE &#39;%&amp;lt;?php%&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;SELECT * FROM wp_comments WHERE comment_content LIKE &#39;%&amp;lt;iframe%&#39;
UNION
SELECT * FROM wp_comments WHERE comment_content LIKE &#39;%&amp;lt;noscript%&#39;
UNION
SELECT * FROM wp_comments WHERE comment_content LIKE &#39;%display:%&#39;
UNION
SELECT * FROM wp_comments WHERE comment_content LIKE &#39;%&amp;lt;?%&#39;
UNION
SELECT * FROM wp_comments WHERE comment_content LIKE &#39;%&amp;lt;?php%&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;using-exploit-scanner-and-sucuri-security-to-detect-further-infections:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Using &lt;em&gt;Exploit Scanner&lt;/em&gt; and &lt;em&gt;Sucuri Security&lt;/em&gt; to detect further infections&lt;/h2&gt;

&lt;p&gt;Most code injections should be gone by now, but there are a few WordPress plugins available to detect everything that&amp;rsquo;s left.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wordpress.org/plugins/exploit-scanner/&#34;&gt;Exploit Scanner&lt;/a&gt; scans your files for possible hidden infections. Its options allow you to also scan for iframes etc., but they cause a lot of false negatives.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wordpress.org/plugins/sucuri-scanner/&#34;&gt;Sucuri Security&lt;/a&gt; is a plugin I&amp;rsquo;d really recommend for any WordPress installation, whether you were hacked or not. The plugin allows you to automatically scan for changed files, notify you about any administrative action, easily reinstall every plugin and theme after a hack&amp;hellip;&lt;/p&gt;

&lt;p&gt;Take advantage of all possibilities of the free versions of both of them. They will make sure that your WordPress is clean and stays clean.&lt;/p&gt;

&lt;h2 id=&#34;check-users-and-passwords:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Check users and passwords&lt;/h2&gt;

&lt;p&gt;One of the last steps is to check if the hacker didn&amp;rsquo;t create any new users. While you&amp;rsquo;re at it, change the passwords of every user with more rights than a regular subscriber.&lt;/p&gt;

&lt;h2 id=&#34;restoring-your-website-and-keeping-it-safe:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Restoring your website and keeping it safe&lt;/h2&gt;

&lt;p&gt;Your WordPress should now be clean of infections and you can start restoring your website. Turn maintenance mode off and deactivate the &lt;em&gt;WP Maintenance Mode&lt;/em&gt; plugin. Now activate all the other plugins you used one by one. Make sure to &lt;strong&gt;delete any plugin you don&amp;rsquo;t really need&lt;/strong&gt; and check if they are still being maintained/updated. I&amp;rsquo;d also delete every inactive theme. This part of the guide is crucial since it was probably one of the plugins that was used to accomplish the hack.&lt;/p&gt;

&lt;h2 id=&#34;harden-your-wordpress-security:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Harden your WordPress Security&lt;/h2&gt;

&lt;p&gt;A few weeks after this post, I&amp;rsquo;ll publish &lt;a href=&#34;http://sa.muel.be/2015/hardening-your-wordpress-security/&#34;&gt;a follow-up guide&lt;/a&gt; on improving the security on your WordPress website.&lt;/p&gt;

&lt;h2 id=&#34;sources:f2974dd08b401ad9524c4d408196c0cd&#34;&gt;Sources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wordpress.stackexchange.com/questions/19696/verifying-that-i-have-fully-removed-a-wordpress-hack&#34;&gt;http://wordpress.stackexchange.com/questions/19696/verifying-that-i-have-fully-removed-a-wordpress-hack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wordpress.org/plugins/sucuri-scanner/&#34;&gt;https://wordpress.org/plugins/sucuri-scanner/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wordpress.org/plugins/exploit-scanner/&#34;&gt;https://wordpress.org/plugins/exploit-scanner/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codex.wordpress.org/FAQ_My_site_was_hacked&#34;&gt;https://codex.wordpress.org/FAQ_My_site_was_hacked&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://smackdown.blogsblogsblogs.com/2008/06/24/how-to-completely-clean-your-hacked-wordpress-installation/&#34;&gt;http://smackdown.blogsblogsblogs.com/2008/06/24/how-to-completely-clean-your-hacked-wordpress-installation/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://z9.io/2008/06/08/did-your-wordpress-site-get-hacked/&#34;&gt;http://z9.io/2008/06/08/did-your-wordpress-site-get-hacked/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>GitHub</title>
      <link>http://sa.muel.be/github/</link>
      <pubDate>Sun, 05 Jul 2015 16:08:03 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/github/</guid>
      <description>You will be redirected to my GitHub page in a second... &lt;a rel=&#34;me&#34; href=&#34;https://github.com/samueldebruyn&#34;&gt;Click here if that doesn&#39;t happen.&lt;/a&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
window.location = &#34;https://github.com/samueldebruyn&#34;;
&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>LinkedIn</title>
      <link>http://sa.muel.be/linkedin-nl/</link>
      <pubDate>Sun, 05 Jul 2015 16:08:03 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/linkedin-nl/</guid>
      <description>Je wordt doorgestuurd naar mijn LinkedIn-pagina... &lt;a rel=&#34;me&#34; href=&#34;https://be.linkedin.com/in/samueldebruyn/nl&#34;&gt;Klik hier als dat niet zou gebeuren.&lt;/a&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
window.location = &#34;https://be.linkedin.com/in/samueldebruyn/nl&#34;;
&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>LinkedIn</title>
      <link>http://sa.muel.be/linkedin/</link>
      <pubDate>Sun, 05 Jul 2015 16:08:03 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/linkedin/</guid>
      <description>You will be redirected to my LinkedIn page in a second... &lt;a rel=&#34;me&#34; href=&#34;https://be.linkedin.com/in/samueldebruyn&#34;&gt;Click here if that doesn&#39;t happen.&lt;/a&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
window.location = &#34;https://be.linkedin.com/in/samueldebruyn&#34;;
&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Twitter</title>
      <link>http://sa.muel.be/twitter/</link>
      <pubDate>Sun, 05 Jul 2015 16:08:03 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/twitter/</guid>
      <description>You will be redirected to my Twitter page in a second... &lt;a rel=&#34;me&#34; href=&#34;https://twitter.com/samueldebruyn&#34;&gt;Click here if that doesn&#39;t happen.&lt;/a&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
window.location = &#34;https://twitter.com/samueldebruyn&#34;;
&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Deobfuscated code from the WordPress hack</title>
      <link>http://sa.muel.be/addendum/2015/deobfuscated-code-from-the-wordpress-hack/</link>
      <pubDate>Sat, 27 Jun 2015 18:13:15 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/addendum/2015/deobfuscated-code-from-the-wordpress-hack/</guid>
      <description>&lt;p&gt;This page is part of the blogpost &lt;a href=&#34;http://sa.muel.be/2015/about-that-time-i-dealt-with-a-bunch-of-hackers-on-a-wordpress/&#34;&gt;About that time I dealt with a bunch of hackers on a WordPress&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following is the deobfuscated version of &lt;a href=&#34;http://sa.muel.be/addendum/2015/obfuscated-code-from-the-wordpress-hack/&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://gist.github.com/SamuelDebruyn/529d1c5252c990b4367a.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Obfuscated code from the WordPress hack</title>
      <link>http://sa.muel.be/addendum/2015/obfuscated-code-from-the-wordpress-hack/</link>
      <pubDate>Sat, 27 Jun 2015 18:13:06 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/addendum/2015/obfuscated-code-from-the-wordpress-hack/</guid>
      <description>&lt;p&gt;This page is part of the blogpost &lt;a href=&#34;http://sa.muel.be/2015/about-that-time-i-dealt-with-a-bunch-of-hackers-on-a-wordpress/&#34;&gt;About that time I dealt with a bunch of hackers on a WordPress&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following is an example of the code I found when one of the WordPress installations I managed was hacked. You can find the &lt;a href=&#34;http://sa.muel.be/addendum/2015/deobfuscated-code-from-the-wordpress-hack/&#34;&gt;deobfuscated version right over here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://gist.github.com/SamuelDebruyn/337140a35994618033ee.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About that time I dealt with a bunch of hackers on a WordPress</title>
      <link>http://sa.muel.be/2015/about-that-time-i-dealt-with-a-bunch-of-hackers-on-a-wordpress/</link>
      <pubDate>Sat, 27 Jun 2015 17:55:40 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/about-that-time-i-dealt-with-a-bunch-of-hackers-on-a-wordpress/</guid>
      <description>&lt;p&gt;So yeah, that happened. I recently took over 2 WordPress installations hosted on a &lt;a href=&#34;http://www.versio.uk/&#34;&gt;Versio&lt;/a&gt; shared hosting account. Versio suspended the account because it kept sending thousands of (spam) emails a day.&lt;/p&gt;

&lt;p&gt;You guessed it right, one of the WordPress installations was hacked. The previous administrator tried to delete the infected files and changed his passwords. It took them a week to regain full control of both the WordPress installations. Once they got into one of the WordPress setups, it was just a matter of navigating through the filesystem to find and infect the other WordPress installation.&lt;/p&gt;

&lt;p&gt;The intruders were very interested in this particular website because of the domain (TLD): &lt;a href=&#34;http://asr.ac&#34;&gt;asr.ac&lt;/a&gt;. An academic domain has a high standing, isn&amp;rsquo;t very cheap and a very rare treat for spammers. They were proud of their hack and left code injections in files called &lt;em&gt;indonesia.php&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Then I took over. I managed tens of WordPress websites before and I had a lot more time to spare than the previous IT guy. I found out that the contact address for Versio and a bunch of other services was one of the .ac addresses, which was suspended. So we didn&amp;rsquo;t even receive any warnings from Versio about abuse, the hackers had free play.&lt;/p&gt;

&lt;p&gt;Once I regained access to &lt;a href=&#34;http://www.directadmin.com/&#34;&gt;DirectAdmin&lt;/a&gt; and Versio&amp;rsquo;s customer panel, I immediately backed up both installations, including the databases. Exporting the content and importing it into a fresh WordPress installation was a no go since the &lt;em&gt;wp-content&lt;/em&gt; directory was infected. The only option seemed to desinfect both WordPress installation and secure them.&lt;/p&gt;

&lt;p&gt;Versio sent some notices with the files the hackers used to send out spam. They were all PHP files with obfuscated code injections in them.&lt;/p&gt;

&lt;p&gt;Great, so I knew how they did it and what I had to look for. I simply deleted everything except for the &lt;em&gt;wp-content&lt;/em&gt; directory and searched the &lt;em&gt;uploads&lt;/em&gt; folder for code containing &lt;em&gt;eval(&lt;/em&gt; or &lt;em&gt;decode(&lt;/em&gt;. I then uploaded the default WordPress files and made sure everything worked again.&lt;/p&gt;

&lt;p&gt;The theme we used was an outdated premium theme so I replaced that with a more popular similar looking theme which was kept up to date.&lt;/p&gt;

&lt;p&gt;Finally I setup &lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;CloudFlare&lt;/a&gt; with secure settings and let them challenge visitors from Indonesia. I also installed the &lt;a href=&#34;https://wordpress.org/plugins/sucuri-scanner/&#34;&gt;Sucuri Security plugin&lt;/a&gt; and let it scan all files twice a day for infections.&lt;/p&gt;

&lt;p&gt;So that was all, right? Nope, a few days later they were back. This time they named their files something like &lt;em&gt;diff52.php&lt;/em&gt; as this wouldn&amp;rsquo;t look as suspicious as &lt;em&gt;indonesia.php&lt;/em&gt;. CloudFlare also showed some blocked threats from Russia and Ukraine.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://sa.muel.be/addendum/2015/obfuscated-code-from-the-wordpress-hack/&#34;&gt;This is an example of the code I found&lt;/a&gt; and &lt;a href=&#34;http://sa.muel.be/addendum/2015/deobfuscated-code-from-the-wordpress-hack/&#34;&gt;this is the deobfuscated version of it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I repeated the whole process but I kept wondering how they could get in. The only thing I didn&amp;rsquo;t check were the plugins. A few days before I reinstalled them all using Sucuri Security so they didn&amp;rsquo;t contain any infections. But they had to be the cause, right? I simply deactivated and removed all of them except for the ones I installed to secure the website. That did it. It&amp;rsquo;s been a week and the hackers haven&amp;rsquo;t been back since.&lt;/p&gt;

&lt;p&gt;What did I learn from all of this? When you&amp;rsquo;re dealing with a hacked WordPress, &lt;strong&gt;always&lt;/strong&gt; delete every plugin and non-default theme. The team behind WordPress releases security updates in a few hours after they find a leak. &lt;a href=&#34;https://ma.ttias.be/in-defence-of-wordpress/&#34;&gt;WordPress is quite secure&lt;/a&gt;, it&amp;rsquo;s the plugins and the themes that aren&amp;rsquo;t. Themes and plugins used by a lot of people will probably get more security fixes than others. The more plugins or themes you have installed, the bigger the risk.&lt;/p&gt;

&lt;p&gt;PS: I repeated every step on the second WordPress installation since that one was infected too.&lt;/p&gt;

&lt;p&gt;PPS: I&amp;rsquo;ll post a comprehensive guide to securing/hardening WordPress in a few weeks. A good starting point is &lt;a href=&#34;https://codex.wordpress.org/FAQ_My_site_was_hacked&#34;&gt;this guide&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Geocoding addresses in Talend Open Studio for Data Integration</title>
      <link>http://sa.muel.be/2015/geocoding-addresses-in-talend-open-studio-for-data-integration/</link>
      <pubDate>Sat, 18 Apr 2015 00:00:00 +0000</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/geocoding-addresses-in-talend-open-studio-for-data-integration/</guid>
      <description>&lt;p&gt;Last week I had to geocode the addresses in a dataset using Talend. Geocoding is adding coordinates to addresses. This way you can easily visualize your data on a map.&lt;/p&gt;

&lt;p&gt;I experienced problems when I tried to download some plugins from Talend Exchange but I found &lt;a href=&#34;http://datacatalyst.blogspot.be/2011/01/custom-google-geocoder-using-talend.html&#34;&gt;this blog post&lt;/a&gt; about geocoding without the use of a plugin. The blogpost wasn&amp;rsquo;t very clear so I decided to write a step-by-step explanation which you can find below. In this guide, we will be using the &lt;a href=&#34;https://developers.google.com/maps/documentation/geocoding/&#34;&gt;Google Geocoding API&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Map your location dataset (with a &lt;em&gt;tMap&lt;/em&gt;) to 2 columns: an unique ID of your location and a concatenated string containing the location address. I used one of Talend&amp;rsquo;s built-in &lt;em&gt;StringHandling&lt;/em&gt;-functions.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  StringHandling.CHANGE(LOCATIONS.STREET_ADDRESS + LOCATIONS.POSTAL_CODE + LOCATIONS.CITY,&amp;quot; &amp;quot;,&amp;quot;+&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My first column was called &lt;em&gt;LOCATION_ID&lt;/em&gt; and my second column was called &lt;em&gt;LOCATION_CONCAT_ADDRESS&lt;/em&gt;. Make sure to remember the name of your output. I named mine &lt;em&gt;LocConcatOut&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Next, connect your output from the &lt;em&gt;tMap&lt;/em&gt; to a &lt;em&gt;tFlowToIterate&lt;/em&gt; component to start processing all records one by one.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The output from the &lt;em&gt;tFlowToIterate&lt;/em&gt; has to be connected to a new &lt;em&gt;tFileInputJson&lt;/em&gt; component. You can change the number of parallel iterations to speed up the geocoding. In the &lt;em&gt;tFileInputJson&lt;/em&gt; component, check the &lt;em&gt;Use Url&lt;/em&gt; option and enter the following URL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    https://maps.googleapis.com/maps/api/geocode/json?address= + ((String)globalMap.get(&amp;quot;LocConcatOut.LOCATION_CONCAT_ADDRESS&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add &lt;code&gt;+ &amp;quot;&amp;amp;key=YourAPIkey&amp;quot;&lt;/code&gt; if you would like to use your own API key for the &lt;a href=&#34;https://developers.google.com/maps/documentation/geocoding/&#34;&gt;Google Geocoding API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Edit the schema for this component and make sure it contains 2 columns: &lt;em&gt;LATITUDE&lt;/em&gt; and &lt;em&gt;LONGITUDE&lt;/em&gt;. Their type should be float, nullable.&lt;/p&gt;

&lt;p&gt;In the mapping, &lt;em&gt;LATITUDE&lt;/em&gt; should be set to &lt;code&gt;&amp;quot;$.results[0].geometry.location.lat&amp;quot;&lt;/code&gt; and &lt;em&gt;LONGITUDE&lt;/em&gt; should be set to &lt;code&gt;&amp;quot;$.results[0].geometry.location.lng&amp;quot;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now we&amp;rsquo;re going to map the coordinates back to the UIDs. Add another &lt;em&gt;tMap&lt;/em&gt; component at the end. Create a new output, map the 2 coordinates from the &lt;em&gt;tFileInputJson&lt;/em&gt; to identical columns in the new &lt;em&gt;tMap&lt;/em&gt; and create a new column with a primary key. Enter the following for the value of this key (my keys are integers):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ((Integer)globalMap.get(&amp;quot;LocConcatOut.LOCATION_ID&amp;quot;)).intValue()
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Finally connect the output from the &lt;em&gt;tMap&lt;/em&gt; component to a &lt;em&gt;tBufferOutput&lt;/em&gt;. That ends the loop started with the &lt;em&gt;tFlowToIterate&lt;/em&gt; component.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The previously mentioned components should all be put in the same subjob. Use a trigger like &lt;em&gt;OnSubjobOk&lt;/em&gt; to start your next job after this one is completed. You can find all the location identifiers with their coordinates in the &lt;em&gt;tBufferInput&lt;/em&gt; component. This is easily mapped (joined) to the original locations dataset using a &lt;em&gt;tMap&lt;/em&gt;. Make sure to set the correct data types in the mapping (1 integer and 2 floats) for the &lt;em&gt;tBufferInput&lt;/em&gt; component.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I hope my guide is clear, but you can always &lt;a href=&#34;https://twitter.com/intent/tweet?text=@SamuelDebruyn%20&#34;&gt;tweet me&lt;/a&gt; with any further questions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How Google cripples outdated Android devices</title>
      <link>http://sa.muel.be/2015/how-google-cripples-outdated-android-devices/</link>
      <pubDate>Mon, 23 Mar 2015 00:00:00 +0000</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/how-google-cripples-outdated-android-devices/</guid>
      <description>

&lt;h2 id=&#34;why-i-downgraded-my-nexus-5:6c02c6a4dd61b566c2327f4a8035a1d9&#34;&gt;Why I downgraded my Nexus 5&lt;/h2&gt;

&lt;p&gt;About a year ago Google released &lt;a href=&#34;http://developer.android.com/preview/index.html&#34;&gt;Android L Developer Preview&lt;/a&gt;. This preview of the upcoming Android Lollipop (5.0) release contained a lot of bugs and was definitely not &lt;em&gt;daily driver&lt;/em&gt; material.&lt;/p&gt;

&lt;p&gt;When Google started updating Nexus devices to the &lt;a href=&#34;http://officialandroid.blogspot.be/2014/10/android-be-together-not-same.html&#34;&gt;final version of Android Lollipop&lt;/a&gt; last autumn, it was clear that not all bugs were gone. Users noticed several bugs of which the &lt;a href=&#34;https://code.google.com/p/android/issues/detail?id=79729&#34;&gt;memory leak on the Nexus 5&lt;/a&gt; was the worst. Power users had to reboot their device every 2 days and other users could go half a week without rebooting. Without a reboot, apps closed automatically a few seconds after opening and background services like Spotify shut down the moment you opened a memory intensive app.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.androidpolice.com/2014/12/15/nexus-5-receive-android-5-0-1-today-according-sprint-t-mobile/&#34;&gt;Android 5.0.1 update&lt;/a&gt; came and went while fixing a few bugs, but the memory leak was still there. Apparently it had something to do with the fade out animation when you turned off your screen.&lt;/p&gt;

&lt;p&gt;Then, a few weeks back, Google released Android 5.1. It contained some UI and functional improvements and the memory leak was gone, at last! But don’t start cheering too soon. &lt;a href=&#34;http://www.androidpolice.com/2015/03/15/google-android-5-1-memory-leak-has-been-fixed-internally-no-timeline-for-release-yet/&#34;&gt;Android 5.1 contained another memory leak&lt;/a&gt;. The Android developers already fixed it, but at the time of writing, they still don’t have a timeframe for a release of this fix. The rebooting went on, every other day.&lt;/p&gt;

&lt;p&gt;What if you have a car accident and you need to call emergency services?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Oh no, wait, I have to reboot my phone first.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This drives me nuts. This seems a critical bug to me. A (smart)phone mustto be able to perform its most basic function all the time: calling.&lt;/p&gt;

&lt;p&gt;I considered downgrading while I was on Android 5.0.1, but I quickly delayed this decision when I heard about the upcoming 5.1 update that would fix this memory leak. However, when I started noticing the second memory leak, I had it. Time to go back to the latest stable version: Android 4.4.4 KitKat.&lt;/p&gt;

&lt;h2 id=&#34;how-i-downgraded:6c02c6a4dd61b566c2327f4a8035a1d9&#34;&gt;How I downgraded&lt;/h2&gt;

&lt;p&gt;The downgrade was quite simple: I unlocked my phone and flashed the 4.4.4 &lt;a href=&#34;https://developers.google.com/android/nexus/images&#34;&gt;factory image&lt;/a&gt;. The next thing I did was rooting my phone, which later turned out to be necessary.&lt;/p&gt;

&lt;h2 id=&#34;and-then-it-all-started:6c02c6a4dd61b566c2327f4a8035a1d9&#34;&gt;And then it all started&lt;/h2&gt;

&lt;p&gt;One of the reasons why I downgraded, was that Android 4.4.4 has remarkably better battery life than Android Lollipop. So when my battery started draining at more than 20% an hour, I knew that something was wrong. Also, the notification about the system update was impossible to remove.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Yes, Google, I know. Now let me go on with my life, I don’t want your update.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;digging-a-little-deeper:6c02c6a4dd61b566c2327f4a8035a1d9&#34;&gt;Digging a little deeper&lt;/h2&gt;

&lt;p&gt;Android used to have a service called SystemUpdateService in the Google Services Framework (preinstalled system app) that would handle OS updates. It seems like this was replaced by Google Play Services. The &lt;a href=&#34;https://developer.android.com/google/play-services/index.html&#34;&gt;Google Play Services&lt;/a&gt; app is updated automatically via the Google &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.android.gms&#34;&gt;Play Store&lt;/a&gt;. This app contains another SystemUpdateService and disables the SystemUpdateService in the Google Services Framework mentioned earlier.&lt;/p&gt;

&lt;p&gt;This service seems to cause a &lt;a href=&#34;http://developer.android.com/reference/android/os/PowerManager.WakeLock.html&#34;&gt;wakelock&lt;/a&gt;, which makes sure that my Nexus 5 never goes to deep sleep. (Deep sleep is like a standby mode with very low power usage.) So there’s my battery drain. But how to stop it? Disabling this service doesn’t help at all. The notification disappears but the wakelock is still there.&lt;/p&gt;

&lt;p&gt;Next step: Google and &lt;a href=&#34;http://forum.xda-developers.com/google-nexus-5/general/how-to-disable-ota-lollipop-wakelock-t2952845&#34;&gt;XDA&lt;/a&gt;. I found out about the 3 receivers that trigger this service. Disabling these receivers would make sure that SystemUpdateService never runs and the wakelock is gone.&lt;/p&gt;

&lt;p&gt;The receivers are to be found in 3 categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After startup (runs after booting your device, obviously)&lt;/li&gt;
&lt;li&gt;Connectivity changed (runs when the status of your Wi-Fi or cellular data connections change)&lt;/li&gt;
&lt;li&gt;Secret code entered (runs when you enter a secret code into the dialer)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So yeah, it’s quite impossible to escape from this service. The commands I listed below correctly disable these receivers and related activities. It doesn’t disable the SystemUpdateService itself as this would cause wakelocks. Run them in a terminal on your device or on your PC connected with your phone over &lt;a href=&#34;http://developer.android.com/tools/help/adb.html&#34;&gt;ADB&lt;/a&gt;. Did I mention you need to be &lt;em&gt;rooted&lt;/em&gt; to run it?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;adb shell su -c pm disable com.google.android.gms/.update.SystemUpdateActivity
adb shell su -c pm disable com.google.android.gms/.update.SystemUpdateService$ActiveReceiver
adb shell su -c pm disable com.google.android.gms/.update.SystemUpdateService$Receiver
adb shell su -c pm disable com.google.android.gms/.update.SystemUpdateService$SecretCodeReceiver
adb shell su -c pm disable com.google.android.gsf/.update.SystemUpdateActivity
adb shell su -c pm disable com.google.android.gsf/.update.SystemUpdatePanoActivity
adb shell su -c pm disable com.google.android.gsf/.update.SystemUpdateService$Receiver
adb shell su -c pm disable com.google.android.gsf/.update.SystemUpdateService$SecretCodeReceiver
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;wow-that-was-complicated:6c02c6a4dd61b566c2327f4a8035a1d9&#34;&gt;Wow, that was complicated&lt;/h2&gt;

&lt;p&gt;For power users this probably wasn’t a lot of work, but this is a real annoyance for regular users. But regular users don’t buy Nexus devices, don’t they?&lt;/p&gt;

&lt;p&gt;For years, we all &lt;a href=&#34;http://www.google.com/trends/explore#q=android%20fragmentation&amp;amp;cmpt=q&#34;&gt;complained about fragmentation&lt;/a&gt; and a lack of OS updates. Today it has become impossible to ignore an OS update due to the immense battery drain and the frustrating persistent notification.&lt;/p&gt;

&lt;h2 id=&#34;this-post-is-all-about-nexus-devices-what-about-my-device:6c02c6a4dd61b566c2327f4a8035a1d9&#34;&gt;This post is all about Nexus devices, what about my device?&lt;/h2&gt;

&lt;p&gt;Most Android devices come with Google services like the Google Play Store. This means they also come with Google Play Services or the Google Services Framework or both. So, if you ever want to downgrade your Android device to a stock image, be sure to disable those pesky receivers…&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Natively boot Windows 10 Technical Preview with a virtual HDD</title>
      <link>http://sa.muel.be/2015/natively-boot-windows-10-technical-preview-with-a-virtual-hdd/</link>
      <pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/natively-boot-windows-10-technical-preview-with-a-virtual-hdd/</guid>
      <description>&lt;p&gt;A few days ago &lt;a href=&#34;https://insider.windows.com&#34;&gt;Microsoft released a new build for Windows 10&lt;/a&gt; and I wanted to give it a try. However, I didn&amp;rsquo;t want to resize my partitions or overwrite my Windows 8.1 partition.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Well, then install it in a VM!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then I wouldn&amp;rsquo;t have access to all of my RAM and CPU, so that wasn&amp;rsquo;t a solution either. However, I found the ideal solution.&lt;/p&gt;

&lt;p&gt;Apparently you can &lt;strong&gt;install Windows in a virtual hard drive&lt;/strong&gt;. Let me guide you through:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new VHD-file and remember the path to it. You can use &lt;em&gt;Disk Management&lt;/em&gt; (run &lt;code&gt;diskmgmt.msc&lt;/code&gt;) and click &lt;em&gt;Action&lt;/em&gt; and &lt;em&gt;Create VHD&lt;/em&gt;. I made it about 70 GB big with a dynamic size.&lt;/li&gt;
&lt;li&gt;Boot into the Windows installation (use &lt;a href=&#34;https://rufus.akeo.ie/&#34;&gt;Rufus&lt;/a&gt; or something similar to create a bootable USB stick).&lt;/li&gt;
&lt;li&gt;Select &lt;em&gt;Custom: Install Windows only (Advanced)&lt;/em&gt;, not an &lt;em&gt;Upgrade&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Now you have to select the partition on which you want to install Windows. Press &lt;em&gt;SHIFT+F10&lt;/em&gt; to open a command prompt instead.&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;diskpart&lt;/code&gt; to open the DiskPart utility.&lt;/li&gt;
&lt;li&gt;In DiskPart enter &lt;code&gt;select vdisk file=C:\Windows10.vhd&lt;/code&gt; with the correct path to your VHD to select the VHD.&lt;/li&gt;
&lt;li&gt;Now enter &lt;code&gt;attach vdisk&lt;/code&gt; and close the command prompt.&lt;/li&gt;
&lt;li&gt;If you now press &lt;em&gt;Refresh&lt;/em&gt; you will see unallocated space on a newly added disk station, that is your virtual hard drive. Select it.&lt;/li&gt;
&lt;li&gt;You can now continue installing Windows as usual.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I was surprised to find out about this possibility. This way you can try the new Windows &lt;em&gt;in full&lt;/em&gt; without compromising your production environment.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Queue for MessageDialog in Windows RT</title>
      <link>http://sa.muel.be/2014/queue-for-messagedialog-in-windows-rt/</link>
      <pubDate>Wed, 20 Aug 2014 00:00:00 +0000</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2014/queue-for-messagedialog-in-windows-rt/</guid>
      <description>&lt;p&gt;When I write Windows Store applications, I use MessageDialog a lot.
It&amp;rsquo;s the easiest way to show a quick informative pop-up message or a question to the user.
However, when you tend to use this quite often, you&amp;rsquo;ll probably run into a problem.&lt;/p&gt;

&lt;p&gt;The Windows Runtime framework doesn&amp;rsquo;t allow you to stack MessageDialogs, queue them etc.
So if you need to display one, you&amp;rsquo;ll have to make sure that no other MessageDialog is already open.
Checking if there is an open MessageDialog is not that easy unless you keep references to all the MessageDialogs you create.
There are a few cases in which this would be annoying.&lt;/p&gt;

&lt;p&gt;The singleton class below will make sure that you can queue MessageDialogs and that this problem will never occur.&lt;/p&gt;

&lt;p&gt;Instead of using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;myDialog.ShowAsync()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;use&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MessageDialogQueue.PushMessageDialog(myDialog)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The dialog will be displayed after all previous MessageDialogs are closed. Do this for all your MessageDialogs or you&amp;rsquo;ll still run into the problem I mentioned.&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://gist.github.com/SamuelDebruyn/efaf5ae8e0af3ac2e0d9.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workaround for password confirmation with Laravel &amp; Ardent</title>
      <link>http://sa.muel.be/2014/workaround-for-password-confirmation-with-laravel--ardent/</link>
      <pubDate>Sat, 14 Jun 2014 00:00:00 +0000</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2014/workaround-for-password-confirmation-with-laravel--ardent/</guid>
      <description>&lt;p&gt;While I was working on a website made with Laravel and Ardent I had to validate a password confirmation field for a user registration. This will not work if you follow the standard documentation.&lt;/p&gt;

&lt;p&gt;This is how your &lt;a href=&#34;http://laravel.com/docs/validation&#34;&gt;validation rules&lt;/a&gt; in your &lt;a href=&#34;https://github.com/laravelbook/ardent&#34;&gt;Ardent&lt;/a&gt; model should look like (users only have an email address and a password):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public static $rules = array(
  &#39;email&#39; =&amp;gt; &#39;required|email|max:100|unique:users&#39;,
  &#39;password&#39; =&amp;gt; &#39;required|min:6|confirmed&#39;,
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your model should also have the following line somewhere:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public $autoPurgeRedundantAttributes = true;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, if you follow the documentation and include every database field in the &lt;em&gt;fillable&lt;/em&gt; array, validation will always fail on the password confirmation.&lt;/p&gt;

&lt;p&gt;The workaround is to include the password confirmation field in the fillable array, even if it isn&amp;rsquo;t a column in your database.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;protected $fillable = array(&#39;email&#39;, &#39;password&#39;, &#39;activation_code&#39;, &#39;confirmed&#39;, &#39;reset_password&#39;, &#39;password_confirmation&#39;);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>