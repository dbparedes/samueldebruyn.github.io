<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Samuel Debruyn</title>
    <link>http://sa.muel.be/</link>
    <description>Recent content on Samuel Debruyn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>s@muel.be (Samuel Debruyn)</managingEditor>
    <webMaster>s@muel.be (Samuel Debruyn)</webMaster>
    <lastBuildDate>Sun, 23 Aug 2015 22:30:51 +0200</lastBuildDate>
    <atom:link href="http://sa.muel.be/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hardening your WordPress security</title>
      <link>http://sa.muel.be/2015/hardening-your-wordpress-security/</link>
      <pubDate>Sun, 23 Aug 2015 22:30:51 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/hardening-your-wordpress-security/</guid>
      <description>

&lt;h2 id=&#34;introduction:270325a472963f8dbe8695a68f29ae37&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This is the second part of a guide about &lt;a href=&#34;http://sa.muel.be/2015/recovering-a-hacked-wordpress/&#34;&gt;recovering a hacked WordPress&lt;/a&gt; and hardening your WordPress security.&lt;/p&gt;

&lt;p&gt;In the previous part, I showed you how to get back up and running after your website has been hacked. In this part I&amp;rsquo;ll demonstrate how you can avoid being hacked by making your WordPress more secure. I always try to be exhaustive, but if you have any suggestions, corrections or feel like anything is missing, I would like you to &lt;a href=&#34;mailto:s@muel.be?subject=Suggestions%20for%20the%20post%20about%20securing%20Wordpress&#34;&gt;let me know&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Even if you&amp;rsquo;re not hacked, I still advice you to read the first part too. It contains some information about how attackers work, what they try to achieve and how you can make sure they lose access to your website.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;I planned on writing this guide a lot earlier and it&amp;rsquo;s been a while since I&amp;rsquo;ve looked at my WordPress websites (which is not a good practice&amp;hellip;) I&amp;rsquo;ll update this guide in about a month.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;While this guide focusses on security, some measures could impact the performance of your website negatively while others should impact your performance positively. It&amp;rsquo;s up to you to consider which measures tips you should implement and which you shouldn&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;Now, let&amp;rsquo;s get started, shall we?&lt;/p&gt;

&lt;h2 id=&#34;consider-to-use-a-cloud-proxy:270325a472963f8dbe8695a68f29ae37&#34;&gt;Consider to use a cloud proxy&lt;/h2&gt;

&lt;p&gt;Without a good CDN and caching strategy, it&amp;rsquo;s impossible to survive a DDoS attack. The easiest solution is a reverse cloud proxy like &lt;a href=&#34;http://www.cloudflare.com&#34;&gt;CloudFlare&lt;/a&gt;. CloudFlare caches your content and allows for very precise configuration. They will also keep your static files online if your server went offline. CloudFlare offers very good protection against malicious visitors and is awesome at detecting and mitigating DDoS attacks.&lt;/p&gt;

&lt;p&gt;They offer &lt;a href=&#34;https://wordpress.org/plugins/cloudflare/&#34;&gt;a WordPress plugin&lt;/a&gt; that helps with the reverse proxying.&lt;/p&gt;

&lt;h3 id=&#34;encryption:270325a472963f8dbe8695a68f29ae37&#34;&gt;Encryption&lt;/h3&gt;

&lt;p&gt;CloudFlare, the tool I mentioned above, offers free server-client SSL. It isn&amp;rsquo;t as secure as full SSL (SSL from your server to Cloudflare&amp;rsquo;s servers and from CloudFlare&amp;rsquo;s servers to your visitor&amp;rsquo;s browsers), but it&amp;rsquo;s a lot safer than plain HTTP.&lt;/p&gt;

&lt;h2 id=&#34;make-sure-the-web-servers-are-secure:270325a472963f8dbe8695a68f29ae37&#34;&gt;Make sure the web servers are secure&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;re on shared hosting, you don&amp;rsquo;t have much to say about this, but you can still take measures to ensure your management portal access is safe. Use very strong passwords to manage your web server, make sure everything (PHP, MySQL, Apache&amp;hellip;) is up to date, only allow database access from your web server (usually localhost)&amp;hellip;&lt;/p&gt;

&lt;p&gt;Another perspective to look at this is securing access to your files. Store your backups in a safe location, make sure that the WordPress folders and files have the right permissions (this changes sometimes, take a look at the &lt;a href=&#34;https://codex.wordpress.org/Changing_File_Permissions&#34;&gt;official website&lt;/a&gt; to find out which permissions you should use).&lt;/p&gt;

&lt;h2 id=&#34;use-strong-authentication-and-authorisation:270325a472963f8dbe8695a68f29ae37&#34;&gt;Use strong authentication and authorisation&lt;/h2&gt;

&lt;p&gt;Use strong passwords, make sure your wp-config.php is only stored on the webserver itself, consider using &lt;a href=&#34;https://wordpress.org/plugins/wordpress-2-step-verification/&#34;&gt;MFA&lt;/a&gt;&amp;hellip; There are a lot of ways to make sure that it isn&amp;rsquo;t too easy to get in.&lt;/p&gt;

&lt;h2 id=&#34;consider-using-a-3rd-party-email-provider:270325a472963f8dbe8695a68f29ae37&#34;&gt;Consider using a 3rd party email provider&lt;/h2&gt;

&lt;p&gt;Most hackers don&amp;rsquo;t even want to hack your website itself. Usually they&amp;rsquo;ll want to use your mail server (which is usually running on the same server) and domain to sell them to spammers. A third party email service like &lt;a href=&#34;http://mandrillapp.com/&#34;&gt;Mandrill&lt;/a&gt; or &lt;a href=&#34;https://sendgrid.com/&#34;&gt;SendGrid&lt;/a&gt; could come in handy to avoid such attacks. I recommend disabling the local mail server and creating SPF and DKIM records that only emails from your email provider. It&amp;rsquo;s quite easy to setup Mandrill with WordPress with &lt;a href=&#34;https://wordpress.org/plugins/wpmandrill/&#34;&gt;this Mandrill plugin&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;always-use-the-latest-versions:270325a472963f8dbe8695a68f29ae37&#34;&gt;Always use the latest versions&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/&#34;&gt;PHP is a terrible programming language.&lt;/a&gt; It&amp;rsquo;s incredibly easy to write a lot of bugs and never notice them. If a plugin or theme is updated, install the update. Every possible fix for security issues is welcome.&lt;/p&gt;

&lt;h2 id=&#34;uninstall-plugins-and-themes-you-don-t-need:270325a472963f8dbe8695a68f29ae37&#34;&gt;Uninstall plugins and themes you don&amp;rsquo;t need&lt;/h2&gt;

&lt;p&gt;If you don&amp;rsquo;t necessarily need a plugin or theme, uninstall it completely. Don&amp;rsquo;t even leave it deactivated. Hackers can run code in deactivated plugins without any hassle.&lt;/p&gt;

&lt;h2 id=&#34;schedule-security-scans:270325a472963f8dbe8695a68f29ae37&#34;&gt;Schedule security scans&lt;/h2&gt;

&lt;p&gt;While &lt;a href=&#34;https://wordpress.org/plugins/exploit-scanner/&#34;&gt;Exploit Scanner&lt;/a&gt; is perfectly capable of scanning a WordPress installation for (possible) exploits, you can&amp;rsquo;t use it to schedule automatic scans. &lt;a href=&#34;https://wordpress.org/plugins/sucuri-scanner/&#34;&gt;Sucuri Security&lt;/a&gt; is definitely a must-have for every WordPress website. You can schedule automatic scans for modified files, notifications for about everything that happens on your website, thorough measures to further harden your website&amp;rsquo;s security&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;log-bad-behaviour:270325a472963f8dbe8695a68f29ae37&#34;&gt;Log bad behaviour&lt;/h2&gt;

&lt;p&gt;There&amp;rsquo;s an awesome plugin called &lt;a href=&#34;https://wordpress.org/plugins/bad-behavior/&#34;&gt;Bad Behavior&lt;/a&gt; which logs malicious looking behaviour and notifies you if you want to. If you suspect a hacker is trying to get in, install this plugin. You can then use to automatically block some of his attempts.&lt;/p&gt;

&lt;p&gt;If you notice some brute force attacks on your &lt;em&gt;wp-login.php&lt;/em&gt; page, consider installing &lt;a href=&#34;https://wordpress.org/plugins/limit-login-attempts/&#34;&gt;Limit Login Attempts&lt;/a&gt;. You can fine-tune its settings so that it&amp;rsquo;s not too hard on your users.&lt;/p&gt;

&lt;h2 id=&#34;change-the-defaults:270325a472963f8dbe8695a68f29ae37&#34;&gt;Change the defaults&lt;/h2&gt;

&lt;p&gt;WordPress allows you to change a lot of the default settings, here are a few things you could change to improve security by obscurity:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Store the &lt;em&gt;wp-config.php&lt;/em&gt; file a level higher than the root of your WordPress installation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codex.wordpress.org/Editing_wp-config.php#Moving_wp-content_folder&#34;&gt;Move the &lt;em&gt;wp-content&lt;/em&gt; folder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t use the &lt;code&gt;wp_&lt;/code&gt; table prefix&lt;/li&gt;
&lt;li&gt;Use a different &lt;a href=&#34;https://wordpress.org/plugins/sf-move-login/&#34;&gt;login url&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Delete the user that was created during the initial setup and create a new one&lt;/li&gt;
&lt;li&gt;Never use the username &lt;em&gt;admin&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Big Bad Wolf</title>
      <link>http://sa.muel.be/portfolio/big-bad-wolf/</link>
      <pubDate>Sun, 26 Jul 2015 22:23:17 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/big-bad-wolf/</guid>
      <description>&lt;p&gt;This is simple social media client written in C#. It was a school project we made in a team of 4 students. This was our first project in C# and the goal was to learn about&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Multi Document Interfaces (MDI) with Windows Forms&lt;/li&gt;
&lt;li&gt;using &lt;a href=&#34;http://visualstudio.com&#34;&gt;Visual Studio Online&lt;/a&gt; (Team Foundation Services) to work with scrum, sprints&amp;hellip; The burndown chart was more important than the code or the finished application.&lt;/li&gt;
&lt;li&gt;usage of APIs / working with SDKs&lt;/li&gt;
&lt;li&gt;(an introduction to) async code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this social media client, you could connect your Facebook, Twitter and Instagram accounts and view all the posts in your timeline/activity feed in a single window. Every post had a background color matching the &lt;em&gt;theme&lt;/em&gt; of the social network it was published on.&lt;/p&gt;

&lt;p&gt;I agree, the GUI was terrible and the code wasn&amp;rsquo;t much better. But we had to start &lt;em&gt;somewhere&lt;/em&gt;, right? I&amp;rsquo;ve made the source available on &lt;a href=&#34;https://github.com/SamuelDebruyn/BigBadWolf&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Penguin Planner</title>
      <link>http://sa.muel.be/portfolio/penguin-planner/</link>
      <pubDate>Sun, 26 Jul 2015 22:23:08 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/penguin-planner/</guid>
      <description>&lt;p&gt;Penguin Planner is a school project we made in team of 4 students. The goal of the project was to learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;layered applications (seperating data, business/domain, presentation&amp;hellip;)&lt;/li&gt;
&lt;li&gt;connecting an application to a database without using plain (T-)SQL&lt;/li&gt;
&lt;li&gt;multilingual applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The idea of Penguin Planner was a replacement for a tool like &lt;a href=&#34;http://blackboard.com&#34;&gt;BlackBoard&lt;/a&gt;. It was a tool made for students and teachers. They had to be able to manage their courses, tasks, tests&amp;hellip;&lt;/p&gt;

&lt;p&gt;We used &lt;a href=&#34;https://github.com/viperneo/winforms-modernui&#34;&gt;MetroFramework&lt;/a&gt; to bring the &lt;em&gt;Modern UI&lt;/em&gt; design to a Windows Forms application.&lt;/p&gt;

&lt;p&gt;The application is written in C# and the complete source code is &lt;a href=&#34;https://github.com/SamuelDebruyn/PenguinPlanner&#34;&gt;available on GitHub&lt;/a&gt;. You should be able to build the application after downloading the referenced nuget packages. However, you&amp;rsquo;d need to recreate the database and change the connection string to be able to run it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wercker step to minify static resources</title>
      <link>http://sa.muel.be/2015/wercker-step-to-minify-static-resources/</link>
      <pubDate>Sat, 25 Jul 2015 17:01:17 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/wercker-step-to-minify-static-resources/</guid>
      <description>&lt;p&gt;I recently blogged a lot about &lt;a href=&#34;http://sa.muel.be/2015/an-introduction-to-hugo-a-static-site-generator/&#34;&gt;static websites&lt;/a&gt; and &lt;a href=&#34;http://sa.muel.be/2015/continuous-integration-with-hugo-and-wercker/&#34;&gt;continuous integration&lt;/a&gt;. There was still one step missing in my continuous integration cycle: &lt;strong&gt;minification&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wercker.com/&#34;&gt;Wercker&lt;/a&gt; is a great CI tool and it allows you to create custom build steps that can be reused in several projects. So I created a build step to minify HTML, CSS and JS files.&lt;/p&gt;

&lt;p&gt;The build step is available at &lt;a href=&#34;https://github.com/SamuelDebruyn/wercker-step-minify&#34;&gt;https://github.com/SamuelDebruyn/wercker-step-minify&lt;/a&gt; and all you have to do is include &lt;code&gt;samueldebruyn/minify&lt;/code&gt; as a step in your &lt;em&gt;wercker.yml&lt;/em&gt; file.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RoboRally</title>
      <link>http://sa.muel.be/portfolio/roborally/</link>
      <pubDate>Thu, 23 Jul 2015 17:02:18 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/roborally/</guid>
      <description>&lt;p&gt;RoboRally is a simple game written in Java, based on the board game &lt;a href=&#34;https://en.wikipedia.org/wiki/RoboRally&#34;&gt;RoboRally&lt;/a&gt; by &lt;a href=&#34;http://company.wizards.com/&#34;&gt;Wizards of the Coast&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This game was a semester project in which a pair of students had to learn the basics of object oriented programming, source code control and extreme programming. The project was part of the course &lt;a href=&#34;https://onderwijsaanbod.kuleuven.be/syllabi/n/H01P1AN.htm#activetab=doelstellingen_idp2111760&#34;&gt;Object Oriented Programming&lt;/a&gt; by &lt;a href=&#34;https://distrinet.cs.kuleuven.be/people/eric&#34;&gt;Prof. E. Steegmans&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The code contains a lot of documentation; this project is really about the code and not about the game itself. Our final version is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/OGProborally&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ASR.ac</title>
      <link>http://sa.muel.be/portfolio/asr-ac/</link>
      <pubDate>Tue, 21 Jul 2015 21:17:21 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/asr-ac/</guid>
      <description>&lt;p&gt;In 2015 the General Student Council (ASR) Odisee elected me to be their IT manager. I become responsible for several services, one of which was their website.&lt;/p&gt;

&lt;p&gt;The website is built with &lt;a href=&#34;http://wordpress.org&#34;&gt;WordPress&lt;/a&gt; and stored on a shared hosting account. I customized the theme and setup &lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;CloudFlare&lt;/a&gt;. As the website was hacked in the months before I became the administrator, I had to &lt;a href=&#34;http://sa.muel.be/2015/recovering-a-hacked-wordpress/&#34;&gt;restore&lt;/a&gt; and &lt;a href=&#34;http://sa.muel.be/2015/hardening-your-wordpress-security/&#34;&gt;secure&lt;/a&gt; it.&lt;/p&gt;

&lt;p&gt;I managed this website from June 2015 until July 2016.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Material Design Lite theme for hugo</title>
      <link>http://sa.muel.be/portfolio/material-design-theme-for-hugo/</link>
      <pubDate>Tue, 21 Jul 2015 13:43:35 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/material-design-theme-for-hugo/</guid>
      <description>&lt;p&gt;As I wanted to learn more about &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt; while developing &lt;a href=&#34;http://sa.muel.be/portfolio/this-blog/&#34;&gt;this blog&lt;/a&gt;, I &lt;a href=&#34;http://sa.muel.be/2015/material-lite-theme-for-hugo/&#34;&gt;created&lt;/a&gt; a new theme for hugo. It is mostly plain HTML, CSS and JavaScript, but it also contains some &lt;a href=&#34;http://golang.org/pkg/html/template/&#34;&gt;Go Templating&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The theme is based on the &lt;a href=&#34;http://www.getmdl.io/templates/index.html&#34;&gt;blog template&lt;/a&gt; from Google&amp;rsquo;s &lt;a href=&#34;http://www.getmdl.io/&#34;&gt;Material Design Lite&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The source code is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/hugo-material-lite&#34;&gt;GitHub&lt;/a&gt; and I host &lt;a href=&#34;http://materialexample.sa.muel.be/&#34;&gt;a demo&lt;/a&gt; on GitHub Pages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SamShack</title>
      <link>http://sa.muel.be/portfolio/samshack/</link>
      <pubDate>Tue, 21 Jul 2015 13:26:51 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/samshack/</guid>
      <description>

&lt;p&gt;In January 2014 I had to develop a webshop in PHP for a school project. At the time we just learnt about MVC and the best framework for the job seemed &lt;a href=&#34;http://www.cakephp.org&#34;&gt;CakePHP&lt;/a&gt;. My webshop had responsive design and was very fast (high scores on PageSpeed and Yahoo YSlow).&lt;/p&gt;

&lt;p&gt;The webshop itself is no longer available online, but the source code is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/MI4webshop&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;functional-requirements:8f252d2e6836bd8c7f9c98107e37888e&#34;&gt;Functional requirements&lt;/h2&gt;

&lt;h3 id=&#34;configuration-panel:8f252d2e6836bd8c7f9c98107e37888e&#34;&gt;Configuration panel&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;CRUD actions for every kind of data&lt;/li&gt;
&lt;li&gt;The administrator has to log in to be able to do anything&lt;/li&gt;
&lt;li&gt;The administrator must be able to create other administrative user accounts&lt;/li&gt;
&lt;li&gt;The administrator can view the ERD of the webshop&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;client-site:8f252d2e6836bd8c7f9c98107e37888e&#34;&gt;Client site&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Products have categories and can be sorted and filtered by category&lt;/li&gt;
&lt;li&gt;Shopping cart which can be modified at any time&lt;/li&gt;
&lt;li&gt;Shoppers have to create user accounts to buy anything&lt;/li&gt;
&lt;li&gt;Only registered users can view the stock&lt;/li&gt;
&lt;li&gt;The stock needs to automatically updated after a sale&lt;/li&gt;
&lt;li&gt;Confirmation emails for all kinds of actions&lt;/li&gt;
&lt;li&gt;Password reset mails&lt;/li&gt;
&lt;li&gt;History of purchases&lt;/li&gt;
&lt;li&gt;Personalized recommendations&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>B&amp;B Go Eun API</title>
      <link>http://sa.muel.be/portfolio/bb-go-eun-api/</link>
      <pubDate>Mon, 20 Jul 2015 13:45:55 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/bb-go-eun-api/</guid>
      <description>&lt;p&gt;This API was made for the &lt;a href=&#34;http://sa.muel.be/portfolio/bb-go-eun/&#34;&gt;Android app B&amp;amp;B Go Eun&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is written in PHP and built on top of &lt;a href=&#34;http://cakephp.org/&#34;&gt;CakePHP&lt;/a&gt;. The API returns all results in JSON and is follows most the RESTful API design principles. It relies on a MySQL database for all of its data.&lt;/p&gt;

&lt;p&gt;Since the assignment was graded in June 2014, it&amp;rsquo;s possible that the API is no longer available. The source code is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/MI4API&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>this blog</title>
      <link>http://sa.muel.be/portfolio/this-blog/</link>
      <pubDate>Mon, 20 Jul 2015 12:03:38 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/this-blog/</guid>
      <description>&lt;p&gt;This blog is made with &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt;. I wrote a &lt;a href=&#34;http://sa.muel.be/2015/an-introduction-to-hugo-a-static-site-generator/&#34;&gt;blog post&lt;/a&gt; about it when I switched from &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The source code is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/sa.muel.be-hugo&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>B&amp;B Go Eun app</title>
      <link>http://sa.muel.be/portfolio/bb-go-eun/</link>
      <pubDate>Mon, 20 Jul 2015 12:03:24 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/bb-go-eun/</guid>
      <description>

&lt;p&gt;This Android app was a school project I made with &lt;a href=&#34;https://github.com/talipovdaniyar&#34;&gt;another student&lt;/a&gt;. We established several goals:&lt;/p&gt;

&lt;h2 id=&#34;technical-requirements:fc46f81bf6fdf8b7e4084cd9b0161e8c&#34;&gt;Technical requirements:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We had to learn a lot about PHP and Android development.&lt;/li&gt;
&lt;li&gt;The app had to connect with &lt;a href=&#34;http://sa.muel.be/portfolio/bb-go-eun-api/&#34;&gt;a (RESTful) API&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The API had to connect with a database.&lt;/li&gt;
&lt;li&gt;The app had to be very simple so we could demonstrate the main goals (connection with API).&lt;/li&gt;
&lt;li&gt;We had to made sure that everything worked fine and all known bugs were fixed.&lt;/li&gt;
&lt;li&gt;We had to write a few pages of documentation for our lecturer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;functional-requirements:fc46f81bf6fdf8b7e4084cd9b0161e8c&#34;&gt;Functional requirements:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Show information about available rooms&lt;/li&gt;
&lt;li&gt;Show contact information with links that open the diailer app, the email app, Google Maps&amp;hellip;&lt;/li&gt;
&lt;li&gt;Show promotions coupled to rooms&lt;/li&gt;
&lt;li&gt;Show the breakfast menu&lt;/li&gt;
&lt;li&gt;Show nearby points of interest in a predefined range, sorted by distance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The assignment included finding a real client and the client we chose was a friend who owns a B&amp;amp;B on AirBnB.&lt;/p&gt;

&lt;p&gt;Since the assignment was graded in June 2014, it&amp;rsquo;s possible that the app is no longer available. The source code is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/MI4App&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go for Change</title>
      <link>http://sa.muel.be/portfolio/go-for-change/</link>
      <pubDate>Mon, 20 Jul 2015 12:03:00 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/go-for-change/</guid>
      <description>&lt;p&gt;Go For Change is an Android app I wrote for a school project. It was actually part of another student&amp;rsquo;s internship, but since that student quit his internship, the client asked my lecturers if they knew another student who could finish the job. All I had was 2 weeks so I didn&amp;rsquo;t write any documentation and the code is quite messy.&lt;/p&gt;

&lt;p&gt;The application contains a questionnaire targeted to small business owners. The difficult part was the order of the questions. Some questions only had to be answered depending on the answers of previous questions and the client had to be able to change the questions, the possible answers and the order of the questions. I created a small SQLite database and a method to export the answered questions to a CSV file.&lt;/p&gt;

&lt;p&gt;This application is only visible in the Play Store for test users. The source is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/WePgoforchange&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since the assignment was graded in June 2014, it&amp;rsquo;s possible that the app is no longer available.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rood Fluweel Bali</title>
      <link>http://sa.muel.be/portfolio/rood-fluweel/</link>
      <pubDate>Sat, 18 Jul 2015 16:06:12 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/rood-fluweel/</guid>
      <description>&lt;p&gt;Rood Fluweel Bali is a Windows Store app, designed for Windows 8.1 desktops and tablets. I made this app for &lt;a href=&#34;http://www.comm-it.be&#34;&gt;Comm-IT&lt;/a&gt; as part of a summer job.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.roodfluweel.be&#34;&gt;Rood Fluweel&lt;/a&gt; is a SaaS made on top of ASP.NET. It can manage ticketing, reservations, payments etc.&lt;/p&gt;

&lt;p&gt;The goal of the Windows Store app is to make it easier to print and create tickets when a lot of people are coming through the entrance at once.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wercker step to validate hugo themes</title>
      <link>http://sa.muel.be/2015/wercker-step-to-validate-hugo-themes/</link>
      <pubDate>Wed, 15 Jul 2015 13:21:45 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/wercker-step-to-validate-hugo-themes/</guid>
      <description>&lt;p&gt;So last week, I created &lt;a href=&#34;http://sa.muel.be/2015/material-lite-theme-for-hugo/&#34;&gt;a material design theme&lt;/a&gt; for &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt;, a static site generator which I&amp;rsquo;m &lt;a href=&#34;http://sa.muel.be/search/?q=hugo&#34;&gt;quite fond of&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As I &lt;a href=&#34;http://sa.muel.be/2015/continuous-integration-with-hugo-and-wercker/&#34;&gt;discovered Wercker&lt;/a&gt;, an awesome CI tool, I went looking for a way to automatically validate themes.&lt;/p&gt;

&lt;p&gt;There wasn&amp;rsquo;t any, so I simply wrote a build step for &lt;a href=&#34;http://wercker.com&#34;&gt;Wercker&lt;/a&gt;. The build step validates a hugo theme using &lt;a href=&#34;https://github.com/spf13/HugoBasicExample&#34;&gt;an example site&lt;/a&gt;. It also checks if you included some files required for a future hugo themes site.&lt;/p&gt;

&lt;p&gt;The code for the build step is available at &lt;a href=&#34;https://github.com/SamuelDebruyn/wercker-step-hugo-theme-check&#34;&gt;https://github.com/SamuelDebruyn/wercker-step-hugo-theme-check&lt;/a&gt; and an example &lt;em&gt;wercker.yml&lt;/em&gt; configuration is included below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;box: debian
build:
  steps:
    - samueldebruyn/hugo-theme-check:
        version: &amp;quot;0.14&amp;quot;
        theme: material-lite
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Continuous integration with hugo and Wercker</title>
      <link>http://sa.muel.be/2015/continuous-integration-with-hugo-and-wercker/</link>
      <pubDate>Tue, 14 Jul 2015 12:45:28 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/continuous-integration-with-hugo-and-wercker/</guid>
      <description>

&lt;h2 id=&#34;why:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;Why?&lt;/h2&gt;

&lt;p&gt;Who doesn&amp;rsquo;t love &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;? It&amp;rsquo;s the easiest way to create a simple website about a repository and you can even use &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; to start blogging.&lt;/p&gt;

&lt;p&gt;As I recently switched from Jekyll to &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt;, I needed a new way to enable continuous integration for my blog.&lt;/p&gt;

&lt;h2 id=&#34;new-to-ci:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;New to CI?&lt;/h2&gt;

&lt;p&gt;Continuous integration, or CI, means that your code is automatically built, tested and/or deployed after each push. Every time you push some commits to a remote repository, the code in that repository is being built.&lt;/p&gt;

&lt;p&gt;I usually have a branch called &lt;em&gt;develop&lt;/em&gt; to which I push fresh code. Then a CI tool checks if that code builds properly and if it does, I merge it to my &lt;em&gt;master&lt;/em&gt; branch. It&amp;rsquo;s a lot like &lt;a href=&#34;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&#34;&gt;Git Flow&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;what-about-hugo-and-github-pages:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;What about hugo and GitHub Pages?&lt;/h2&gt;

&lt;p&gt;You could setup a CI tool to build your code after every push on every branch and deploy it to GitHub Pages after a successful build on your stable/&lt;em&gt;master&lt;/em&gt; branch.&lt;/p&gt;

&lt;h2 id=&#34;in-comes-wercker:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;In comes Wercker&lt;/h2&gt;

&lt;p&gt;I used to use &lt;a href=&#34;http://travis-ci.org&#34;&gt;Travis&lt;/a&gt; for all my CI needs, but then I came across &lt;a href=&#34;http://wercker.com&#34;&gt;Wercker&lt;/a&gt; in the &lt;a href=&#34;http://gohugo.io/tutorials/automated-deployments/&#34;&gt;hugo docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Wercker simplifies CI a lot and relies on &lt;a href=&#34;http://docker.com&#34;&gt;Docker&lt;/a&gt; for its build environments. It also allows you to deploy your builds to different environments (e.g. production, staging, testing&amp;hellip;) Hugo has a guide about how to set it up, but it&amp;rsquo;s a little bit outdated. I might just send a pull request with an update in a few days. Wercker also has a lot of documentation. So with the examples below, you should be able to easily walk through the setup.&lt;/p&gt;

&lt;h3 id=&#34;setting-it-up:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;Setting it up&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Create a new Wercker app based on the repository containing your hugo source code and give Wercker access rights. You can leave everything else on the default settings. If you&amp;rsquo;d like a badge showing your build status, make sure your app is public.&lt;/li&gt;
&lt;li&gt;Next, edit your app settings and create a custom deploy target including a protected environment variable called &lt;code&gt;GIT_TOKEN&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Finally, add a file called &lt;em&gt;wercker.yml&lt;/em&gt; to your repository with the code below. Change it to fit your needs.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;box: debian
build:
  steps:
    - script:
        name: install git
        code: |
          apt-get update &amp;amp;&amp;amp; apt-get install git -y
    - script:
        name: initialize git submodules
        code: |
            git submodule update --init --recursive
    - arjen/hugo-build:
        version: &amp;quot;0.14&amp;quot;
        theme: crisp
deploy:
  steps:
    - script:
        name: install git
        code: |
          apt-get update &amp;amp;&amp;amp; apt-get install git -y
    - leipert/git-push:
        gh_oauth: $GIT_TOKEN
        basedir: public
        clean_removed_files: true
        branch: master
        repo: SamuelDebruyn/samueldebruyn.github.io
        gh_pages_domain: sa.muel.be
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obviously, you have to change the following variables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt;: the hugo version you use&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: the theme you use&lt;/li&gt;
&lt;li&gt;&lt;code&gt;branch&lt;/code&gt;: the branch on GitHub Pages you wish to publish on (should be &lt;code&gt;master&lt;/code&gt; for personal/organization pages and &lt;code&gt;gh-pages&lt;/code&gt; for project pages)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: the repository you wish to publish your pages in (should be &lt;code&gt;username/username.github.io&lt;/code&gt; for personal/organization pages and &lt;code&gt;username/project-repo&lt;/code&gt; for project pages)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gh_pages_domain&lt;/code&gt;: a custom CNAME (optional, &lt;a href=&#34;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/&#34;&gt;read more&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Push a commit with that file and Wercker should happily start building and deploying your code!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;a-few-examples:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;A few examples&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;the hugo source code for this blog: &lt;a href=&#34;https://github.com/SamuelDebruyn/sa.muel.be-hugo&#34;&gt;https://github.com/SamuelDebruyn/sa.muel.be-hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the wercker app for this blog: &lt;a href=&#34;https://app.wercker.com/#applications/5586dcbdaf7de9c51b02b0d5&#34;&gt;https://app.wercker.com/#applications/5586dcbdaf7de9c51b02b0d5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the generated source code for this blog: &lt;a href=&#34;https://github.com/SamuelDebruyn/samueldebruyn.github.io&#34;&gt;https://github.com/SamuelDebruyn/samueldebruyn.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>