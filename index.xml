<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Samuel Debruyn</title>
    <link>http://sa.muel.be/</link>
    <description>Recent content on Samuel Debruyn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>s@muel.be (Samuel Debruyn)</managingEditor>
    <webMaster>s@muel.be (Samuel Debruyn)</webMaster>
    <lastBuildDate>Mon, 20 Jul 2015 13:45:55 +0200</lastBuildDate>
    <atom:link href="http://sa.muel.be/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>B&amp;B Go Eun API</title>
      <link>http://sa.muel.be/portfolio/bb-go-eun-api/</link>
      <pubDate>Mon, 20 Jul 2015 13:45:55 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/bb-go-eun-api/</guid>
      <description>&lt;p&gt;This API was made for the &lt;a href=&#34;http://sa.muel.be/portfolio/bb-go-eun/&#34;&gt;Android app B&amp;amp;B Go Eun&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is written in PHP and built on top of &lt;a href=&#34;http://cakephp.org/&#34;&gt;CakePHP&lt;/a&gt;. The API returns all results in JSON and is follows most the RESTful API design principles. It relies on a MySQL database for all of its data.&lt;/p&gt;

&lt;p&gt;Since the assignment was graded in June 2014, it&amp;rsquo;s possible that the API is no longer available. The source code is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/MI4API&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>this blog</title>
      <link>http://sa.muel.be/portfolio/this-blog/</link>
      <pubDate>Mon, 20 Jul 2015 12:03:38 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/this-blog/</guid>
      <description>&lt;p&gt;This blog is made with &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt;. I wrote a &lt;a href=&#34;http://sa.muel.be/2015/an-introduction-to-hugo-a-static-site-generator/&#34;&gt;blog post&lt;/a&gt; about it when I switched from &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The source code is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/sa.muel.be-hugo&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>B&amp;B Go Eun app</title>
      <link>http://sa.muel.be/portfolio/bb-go-eun/</link>
      <pubDate>Mon, 20 Jul 2015 12:03:24 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/bb-go-eun/</guid>
      <description>

&lt;p&gt;This Android app was a school project I made with &lt;a href=&#34;https://github.com/talipovdaniyar&#34;&gt;another student&lt;/a&gt;. We established several goals:&lt;/p&gt;

&lt;h2 id=&#34;technical-requirements:fc46f81bf6fdf8b7e4084cd9b0161e8c&#34;&gt;Technical requirements:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We had to learn a lot about PHP and Android development.&lt;/li&gt;
&lt;li&gt;The app had to connect with &lt;a href=&#34;http://sa.muel.be/portfolio/bb-go-eun-api/&#34;&gt;a (RESTful) API&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The API had to connect with a database.&lt;/li&gt;
&lt;li&gt;The app had to be very simple so we could demonstrate the main goals (connection with API).&lt;/li&gt;
&lt;li&gt;We had to made sure that everything worked fine and all known bugs were fixed.&lt;/li&gt;
&lt;li&gt;We had to write a few pages of documentation for our lecturer.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;functional-requirements:fc46f81bf6fdf8b7e4084cd9b0161e8c&#34;&gt;Functional requirements:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Show information about available rooms&lt;/li&gt;
&lt;li&gt;Show contact information with links that open the diailer app, the email app, Google Maps&amp;hellip;&lt;/li&gt;
&lt;li&gt;Show promotions coupled to rooms&lt;/li&gt;
&lt;li&gt;Show the breakfast menu&lt;/li&gt;
&lt;li&gt;Show nearby points of interest in a predefined range, sorted by distance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The assignment included finding a real client and the client we chose was a friend who owns a B&amp;amp;B on AirBnB.&lt;/p&gt;

&lt;p&gt;Since the assignment was graded in June 2014, it&amp;rsquo;s possible that the app is no longer available. The source code is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/MI4App&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go for Change</title>
      <link>http://sa.muel.be/portfolio/go-for-change/</link>
      <pubDate>Mon, 20 Jul 2015 12:03:00 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/go-for-change/</guid>
      <description>&lt;p&gt;Go For Change is an Android app I wrote for a school project. It was actually part of another student&amp;rsquo;s internship, but since that student quit his internship, the client asked my lecturers if they knew another student who could finish the job. All I had was 2 weeks so I didn&amp;rsquo;t write any documentation and the code is quite messy.&lt;/p&gt;

&lt;p&gt;The application contains a questionnaire targeted to small business owners. The difficult part was the order of the questions. Some questions only had to be answered depending on the answers of previous questions and the client had to be able to change the questions, the possible answers and the order of the questions. I created a small SQLite database and a method to export the answered questions to a CSV file.&lt;/p&gt;

&lt;p&gt;This application is only visible in the Play Store for test users. The source is available on &lt;a href=&#34;https://github.com/SamuelDebruyn/WePgoforchange&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since the assignment was graded in June 2014, it&amp;rsquo;s possible that the app is no longer available.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rood Fluweel Bali</title>
      <link>http://sa.muel.be/portfolio/rood-fluweel/</link>
      <pubDate>Sat, 18 Jul 2015 16:06:12 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/portfolio/rood-fluweel/</guid>
      <description>&lt;p&gt;Rood Fluweel Bali is a Windows Store app, designed for Windows 8.1 desktops and tablets. I made this app for &lt;a href=&#34;http://www.comm-it.be&#34;&gt;Comm-IT&lt;/a&gt; as part of a summer job.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.roodfluweel.be&#34;&gt;Rood Fluweel&lt;/a&gt; is a SaaS made on top of ASP.NET. It can manage ticketing, reservations, payments etc.&lt;/p&gt;

&lt;p&gt;The goal of the Windows Store app is to make it easier to print and create tickets when a lot of people are coming through the entrance at once.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wercker step to validate hugo themes</title>
      <link>http://sa.muel.be/2015/wercker-step-to-validate-hugo-themes/</link>
      <pubDate>Wed, 15 Jul 2015 13:21:45 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/wercker-step-to-validate-hugo-themes/</guid>
      <description>&lt;p&gt;So last week, I created &lt;a href=&#34;2015/material-lite-theme-for-hugo/&#34;&gt;a material design theme&lt;/a&gt; for &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt;, a static site generator which I&amp;rsquo;m &lt;a href=&#34;search/?q=hugo&#34;&gt;quite fond of&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As I &lt;a href=&#34;2015/continuous-integration-with-hugo-and-wercker/&#34;&gt;discovered Wercker&lt;/a&gt;, an awesome CI tool, I went looking for a way to automatically validate themes.&lt;/p&gt;

&lt;p&gt;There wasn&amp;rsquo;t any, so I simply wrote a build step for &lt;a href=&#34;http://wercker.com&#34;&gt;Wercker&lt;/a&gt;. The build step validates a hugo theme using &lt;a href=&#34;https://github.com/spf13/HugoBasicExample&#34;&gt;an example site&lt;/a&gt;. It also checks if you included some files required for a future hugo themes site.&lt;/p&gt;

&lt;p&gt;The code for the build step is available at &lt;a href=&#34;https://github.com/SamuelDebruyn/wercker-step-hugo-theme-check&#34;&gt;https://github.com/SamuelDebruyn/wercker-step-hugo-theme-check&lt;/a&gt; and an example &lt;em&gt;wercker.yml&lt;/em&gt; configuration is included below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;box: debian
build:
  steps:
    - samueldebruyn/hugo-theme-check:
        version: &amp;quot;0.14&amp;quot;
        theme: material-lite
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Continuous integration with hugo and Wercker</title>
      <link>http://sa.muel.be/2015/continuous-integration-with-hugo-and-wercker/</link>
      <pubDate>Tue, 14 Jul 2015 12:45:28 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/continuous-integration-with-hugo-and-wercker/</guid>
      <description>

&lt;h2 id=&#34;why:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;Why?&lt;/h2&gt;

&lt;p&gt;Who doesn&amp;rsquo;t love &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;? It&amp;rsquo;s the easiest way to create a simple website about a repository and you can even use &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; to start blogging.&lt;/p&gt;

&lt;p&gt;As I recently switched from Jekyll to &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt;, I needed a new way to enable continuous integration for my blog.&lt;/p&gt;

&lt;h2 id=&#34;new-to-ci:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;New to CI?&lt;/h2&gt;

&lt;p&gt;Continuous integration, or CI, means that your code is automatically built, tested and/or deployed after each push. Every time you push some commits to a remote repository, the code in that repository is being built.&lt;/p&gt;

&lt;p&gt;I usually have a branch called &lt;em&gt;develop&lt;/em&gt; to which I push fresh code. Then a CI tool checks if that code builds properly and if it does, I merge it to my &lt;em&gt;master&lt;/em&gt; branch. It&amp;rsquo;s a lot like &lt;a href=&#34;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&#34;&gt;Git Flow&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;what-about-hugo-and-github-pages:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;What about hugo and GitHub Pages?&lt;/h2&gt;

&lt;p&gt;You could setup a CI tool to build your code after every push on every branch and deploy it to GitHub Pages after a successful build on your stable/&lt;em&gt;master&lt;/em&gt; branch.&lt;/p&gt;

&lt;h2 id=&#34;in-comes-wercker:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;In comes Wercker&lt;/h2&gt;

&lt;p&gt;I used to use &lt;a href=&#34;http://travis-ci.org&#34;&gt;Travis&lt;/a&gt; for all my CI needs, but then I came across &lt;a href=&#34;http://wercker.com&#34;&gt;Wercker&lt;/a&gt; in the &lt;a href=&#34;http://gohugo.io/tutorials/automated-deployments/&#34;&gt;hugo docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Wercker simplifies CI a lot and relies on &lt;a href=&#34;http://docker.com&#34;&gt;Docker&lt;/a&gt; for its build environments. It also allows you to deploy your builds to different environments (e.g. production, staging, testing&amp;hellip;) Hugo has a guide about how to set it up, but it&amp;rsquo;s a little bit outdated. I might just send a pull request with an update in a few days. Wercker also has a lot of documentation. So with the examples below, you should be able to easily walk through the setup.&lt;/p&gt;

&lt;h3 id=&#34;setting-it-up:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;Setting it up&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Create a new Wercker app based on the repository containing your hugo source code and give Wercker access rights. You can leave everything else on the default settings. If you&amp;rsquo;d like a badge showing your build status, make sure your app is public.&lt;/li&gt;
&lt;li&gt;Next, edit your app settings and create a custom deploy target including a protected environment variable called &lt;code&gt;GIT_TOKEN&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Finally, add a file called &lt;em&gt;wercker.yml&lt;/em&gt; to your repository with the code below. Change it to fit your needs.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;box: debian
build:
  steps:
    - script:
        name: install git
        code: |
          apt-get update &amp;amp;&amp;amp; apt-get install git -y
    - script:
        name: initialize git submodules
        code: |
            git submodule update --init --recursive
    - arjen/hugo-build:
        version: &amp;quot;0.14&amp;quot;
        theme: crisp
deploy:
  steps:
    - script:
        name: install git
        code: |
          apt-get update &amp;amp;&amp;amp; apt-get install git -y
    - leipert/git-push:
        gh_oauth: $GIT_TOKEN
        basedir: public
        clean_removed_files: true
        branch: master
        repo: SamuelDebruyn/samueldebruyn.github.io
        gh_pages_domain: sa.muel.be
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Obviously, you have to change the following variables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;version&lt;/code&gt;: the hugo version you use&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt;: the theme you use&lt;/li&gt;
&lt;li&gt;&lt;code&gt;branch&lt;/code&gt;: the branch on GitHub Pages you wish to publish on (should be &lt;code&gt;master&lt;/code&gt; for personal/organization pages and &lt;code&gt;gh-pages&lt;/code&gt; for project pages)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: the repository you wish to publish your pages in (should be &lt;code&gt;username/username.github.io&lt;/code&gt; for personal/organization pages and &lt;code&gt;username/project-repo&lt;/code&gt; for project pages)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gh_pages_domain&lt;/code&gt;: a custom CNAME (optional, &lt;a href=&#34;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/&#34;&gt;read more&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Push a commit with that file and Wercker should happily start building and deploying your code!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;a-few-examples:bd381cc8b449e1516244ba8b37d0246b&#34;&gt;A few examples&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;the hugo source code for this blog: &lt;a href=&#34;https://github.com/SamuelDebruyn/sa.muel.be-hugo&#34;&gt;https://github.com/SamuelDebruyn/sa.muel.be-hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the wercker app for this blog: &lt;a href=&#34;https://app.wercker.com/#applications/5586dcbdaf7de9c51b02b0d5&#34;&gt;https://app.wercker.com/#applications/5586dcbdaf7de9c51b02b0d5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the generated source code for this blog: &lt;a href=&#34;https://github.com/SamuelDebruyn/samueldebruyn.github.io&#34;&gt;https://github.com/SamuelDebruyn/samueldebruyn.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Material-lite theme for hugo</title>
      <link>http://sa.muel.be/2015/material-lite-theme-for-hugo/</link>
      <pubDate>Mon, 13 Jul 2015 08:00:00 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/material-lite-theme-for-hugo/</guid>
      <description>&lt;p&gt;Last week, &lt;a href=&#34;http://sa.muel.be/2015/an-introduction-to-hugo-a-static-site-generator/&#34;&gt;I wrote a post&lt;/a&gt; about how awesome &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt; is and why I switched from Jekyll to hugo.&lt;/p&gt;

&lt;p&gt;Then, a few days later, Google released an awesome template called &lt;a href=&#34;http://getmdl.io&#34;&gt;Material Design Lite&lt;/a&gt;. It&amp;rsquo;s basically Google&amp;rsquo;s famous &lt;a href=&#34;https://www.google.com/design/spec/material-design/introduction.html&#34;&gt;Material Design&lt;/a&gt; in HTML, CSS and JavaScript instead of in &lt;a href=&#34;https://www.polymer-project.org&#34;&gt;Polymer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was thinking about setting up another website for some side project and wanted to use material design. So I decided to write a material design theme for a simple hugo blog.&lt;/p&gt;

&lt;p&gt;You can check it out at &lt;a href=&#34;https://github.com/SamuelDebruyn/hugo-material-lite&#34;&gt;https://github.com/SamuelDebruyn/hugo-material-lite&lt;/a&gt; (&lt;a href=&#34;http://materialexample.sa.muel.be&#34;&gt;demo&lt;/a&gt;) Enjoy!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An introduction to hugo, a static site generator</title>
      <link>http://sa.muel.be/2015/an-introduction-to-hugo-a-static-site-generator/</link>
      <pubDate>Wed, 08 Jul 2015 14:50:29 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/an-introduction-to-hugo-a-static-site-generator/</guid>
      <description>

&lt;h2 id=&#34;a-good-blogging-platform:a34406b09f2f50ebfd1f011b1ed64076&#34;&gt;A good blogging platform&lt;/h2&gt;

&lt;p&gt;What makes a good blogging platform really good? Well, that depends on the blogger. Programmers would need different features than make-up bloggers. As a programmer, I need to be able to easily integrate pieces of code with syntax highlighting in my posts and I&amp;rsquo;d prefer writing them in my favourite text/code editor instead of in a WYSIWYG editor.&lt;/p&gt;

&lt;h2 id=&#34;jekyll:a34406b09f2f50ebfd1f011b1ed64076&#34;&gt;Jekyll&lt;/h2&gt;

&lt;p&gt;A static site generator like &lt;a href=&#34;http://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; fulfils (almost) all my needs as a programmer/blogger:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;posts are written in &lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt;, Textile, HTML&amp;hellip;&lt;/li&gt;
&lt;li&gt;you don&amp;rsquo;t need to setup a database and any simple web server will do the job since all you have to host is a simple, static website&lt;/li&gt;
&lt;li&gt;once setup, you don&amp;rsquo;t need to think about updates etc.&lt;/li&gt;
&lt;li&gt;extremely developer friendly (e.g. publish a post using the command line) and open source&lt;/li&gt;
&lt;li&gt;works great with source code control&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, after a while, you start to notice the little things that make Jekyll a lot less simple than it looks like.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it&amp;rsquo;s written in Ruby and some of its dependencies aren&amp;rsquo;t (bug free) available on &lt;del&gt;all platforms&lt;/del&gt; Windows&lt;/li&gt;
&lt;li&gt;setting it up can be quite bothersome, again, especially on Windows&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;hugo:a34406b09f2f50ebfd1f011b1ed64076&#34;&gt;Hugo&lt;/h2&gt;

&lt;p&gt;A few other static site generators &lt;a href=&#34;https://www.staticgen.com&#34;&gt;have sprung up&lt;/a&gt; since Jekyll&amp;rsquo;s success.&lt;/p&gt;

&lt;p&gt;The one that caught my attention was &lt;a href=&#34;http://gohugo.io&#34;&gt;hugo&lt;/a&gt;. It has all the goodness from Jekyll, but it&amp;rsquo;s way easier to setup. Hugo itself is written in &lt;a href=&#34;http://golang.org&#34;&gt;Go&lt;/a&gt;, but they build &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;executable binaries&lt;/a&gt; for a lot of platforms and architectures. So you don&amp;rsquo;t need to install anything else. Even compiling it yourself isn&amp;rsquo;t that hard.&lt;/p&gt;

&lt;p&gt;The process of creating a new website is very similar to Jekyll. The &lt;code&gt;hugo&lt;/code&gt; command literally explains itself (&lt;code&gt;hugo help&lt;/code&gt;) and the &lt;a href=&#34;http://gohugo.io/overview/introduction/&#34;&gt;documentation&lt;/a&gt; on its website should suffice for most users.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve successfully migrated my &lt;a href=&#34;https://github.com/SamuelDebruyn/samueldebruyn.github.io/tree/5f5719a9d4519f8fbd4cdfffa2a10b3f066401ef&#34;&gt;Jekyll blog&lt;/a&gt; to &lt;a href=&#34;https://github.com/SamuelDebruyn/sa.muel.be-hugo&#34;&gt;hugo&lt;/a&gt; and haven&amp;rsquo;t regretted it ever since.&lt;/p&gt;

&lt;h2 id=&#34;disadvantages:a34406b09f2f50ebfd1f011b1ed64076&#34;&gt;Disadvantages&lt;/h2&gt;

&lt;p&gt;One of the major disadvantages of hugo, or any static site generator for that matter, is integrating &lt;strong&gt;search&lt;/strong&gt;. You need some &lt;a href=&#34;http://discuss.gohugo.io/t/how-are-you-implementing-site-search/986/14&#34;&gt;JavaScript magic&lt;/a&gt; or a 3rd party search provider like &lt;a href=&#34;https://cse.google.com&#34;&gt;Google Custom Search Engine&lt;/a&gt; (which I went for).&lt;/p&gt;

&lt;p&gt;The other dynamic part of an ordinary blog is &lt;strong&gt;the comment section&lt;/strong&gt;. Again, the easiest way to &lt;em&gt;fix&lt;/em&gt; this is relying on a 3rd party comments plugin like &lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Still, these two disadvantages are easily outweighed by the advantages of a static website. Your website will survive &lt;a href=&#34;https://en.wikipedia.org/wiki/Slashdot_effect&#34;&gt;slashdotting&lt;/a&gt; and the only required maintenance is literally making sure your web server stays online.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Recovering a hacked WordPress</title>
      <link>http://sa.muel.be/2015/recovering-a-hacked-wordpress/</link>
      <pubDate>Mon, 06 Jul 2015 14:14:32 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/2015/recovering-a-hacked-wordpress/</guid>
      <description>

&lt;h2 id=&#34;introduction:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;A few weeks ago, I had to &lt;a href=&#34;http://sa.muel.be/2015/about-that-time-i-dealt-with-a-bunch-of-hackers-on-a-wordpress/&#34;&gt;repair a hacked WordPress&lt;/a&gt; installation.&lt;/p&gt;

&lt;p&gt;A lot of the information I needed to successfully clean the WordPress completely of infected files was not centralized in a single guide. So I decided to write one and you are now reading it.&lt;/p&gt;

&lt;p&gt;So, your website is hacked, what now? Let&amp;rsquo;s go through the process of making sure that every infection is removed and it never happens again.&lt;/p&gt;

&lt;p&gt;In this first part you&amp;rsquo;ll recover from a hack. In a second part you&amp;rsquo;ll learn how to harden the security. I&amp;rsquo;ll publish &lt;a href=&#34;http://sa.muel.be/2015/hardening-your-wordpress-security/&#34;&gt;the second part&lt;/a&gt; a few weeks after the first part.&lt;/p&gt;

&lt;p&gt;This post is meant to be exhaustive and clear. If you have any suggestions or feel like something is missing or unclear, &lt;a href=&#34;mailto:s@muel.be?subject=Suggestions%20for%20the%20post%20about%20recovering%20a%20Wordpress%20hack&#34;&gt;&lt;em&gt;please&lt;/em&gt; let me know&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The WordPress version I used to write this post is 4.2.2.&lt;/p&gt;

&lt;h2 id=&#34;disabling-all-plugins-going-into-maintenance-mode:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Disabling all plugins / going into maintenance mode&lt;/h2&gt;

&lt;p&gt;The first thing you should do is avoiding further infections. &lt;strong&gt;Disable EVERY plugin&lt;/strong&gt;. We&amp;rsquo;ll reactivate them later on.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d also put the website in maintenance mode. This requires, ironically, a plugin called &lt;a href=&#34;https://wordpress.org/plugins/wp-maintenance-mode/&#34;&gt;WP Maintenance Mode&lt;/a&gt;. Install it, write a quick message for your visitors and enable it.&lt;/p&gt;

&lt;h2 id=&#34;take-a-backup:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Take a backup&lt;/h2&gt;

&lt;p&gt;Backup your complete WordPress folder and database. You can download all the files using FTP or SSH and export the database to SQL statements using something like &lt;a href=&#34;http://www.phpmyadmin.net/home_page/index.php&#34;&gt;phpMyAdmin&lt;/a&gt; or the customer panel of your host (CPanel, DirectAdmin&amp;hellip;). Don&amp;rsquo;t store the backup on your webserver as the hackers could also infect this backup.&lt;/p&gt;

&lt;h2 id=&#34;restore-the-original-wordpress-files:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Restore the original WordPress files&lt;/h2&gt;

&lt;p&gt;Download &lt;a href=&#34;https://wordpress.org/download/release-archive/&#34;&gt;a fresh copy of the version of WordPress&lt;/a&gt; you were using (which should always be the latest one). Unpack it and replace the directories &lt;em&gt;wp-admin&lt;/em&gt; and &lt;em&gt;wp-includes&lt;/em&gt; completely with the copy you just downloaded. Do the same with every file in the root folder and remove every file in your root that is not in the downloaded copy except for &lt;em&gt;wp-config.php&lt;/em&gt;. The &lt;strong&gt;only folder left untouched should be &lt;em&gt;wp-content&lt;/em&gt;&lt;/strong&gt;. WordPress also doesn&amp;rsquo;t include the &lt;em&gt;wp-config.php&lt;/em&gt; file so that should also be preserved (we&amp;rsquo;ll inspect this file later on in this guide).&lt;/p&gt;

&lt;h2 id=&#34;clearing-the-cache:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Clearing the cache&lt;/h2&gt;

&lt;p&gt;Delete the folders &lt;em&gt;wp-content/cache&lt;/em&gt; and &lt;em&gt;wp-content/plugins/widgets&lt;/em&gt;. They will be automatically recreated.&lt;/p&gt;

&lt;h2 id=&#34;regenerate-salts-and-hashes:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Regenerate salts and hashes&lt;/h2&gt;

&lt;p&gt;The &lt;em&gt;wp-config.php&lt;/em&gt; file contains a few hashes and salts to make sure that your cookies and sessions are unique and secure. As these could have been compromised, it&amp;rsquo;s &lt;strong&gt;absolutely necessary&lt;/strong&gt; to regenerate them. Open your &lt;em&gt;wp-config.php&lt;/em&gt; file in a text editor and overwrite your new hashes with new ones. WordPress offers &lt;a href=&#34;https://api.wordpress.org/secret-key/1.1/salt/&#34;&gt;an online generator&lt;/a&gt; so you can easily copy and paste them.&lt;/p&gt;

&lt;h2 id=&#34;upgrade-to-the-latest-version:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Upgrade to the latest version&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;re not on the latest version of WordPress, then update ASAP. I&amp;rsquo;d recommend using &lt;a href=&#34;https://codex.wordpress.org/Upgrading_WordPress_-_Extended_Instructions&#34;&gt;these extended instructions&lt;/a&gt; instead of the built-in updater, but the built-in updater should be fine for most infected websites.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Upgrade all your themes and plugins&lt;/strong&gt; while you&amp;rsquo;re at it.&lt;/p&gt;

&lt;h2 id=&#34;restore-the-original-themes-and-plugins:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Restore the original themes and plugins&lt;/h2&gt;

&lt;p&gt;In this step we&amp;rsquo;re going to restore the original theme and plugin files like we did with the original WordPress files. Download the &lt;a href=&#34;https://wordpress.org/themes/&#34;&gt;themes&lt;/a&gt; and &lt;a href=&#34;https://wordpress.org/plugins/&#34;&gt;plugins&lt;/a&gt; from wordpress.org or from the website of the publisher of the plugin or theme (for premium/payed versions). All you need to do is unpack the files into their respective directories in &lt;em&gt;wp-content/themes&lt;/em&gt; and &lt;em&gt;wp-content/plugins&lt;/em&gt;. Make sure there are no other files than the ones you just replaced in both of these folders.&lt;/p&gt;

&lt;p&gt;NB: some plugins (e.g. plugins containing &lt;a href=&#34;http://wpengineer.com/2500/wordpress-dropins/&#34;&gt;drop-ins&lt;/a&gt;) like &lt;a href=&#34;https://wordpress.org/plugins/wp-super-cache/&#34;&gt;WP Super Cache&lt;/a&gt; also put PHP files in your &lt;em&gt;wp-content&lt;/em&gt; directory.&lt;/p&gt;

&lt;h2 id=&#34;search-and-delete-infections-in-your-files:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Search and delete infections in your files&lt;/h2&gt;

&lt;p&gt;The only infected files left could be stored in the subfolders of &lt;em&gt;wp-content&lt;/em&gt; that we haven&amp;rsquo;t looked into yet.&lt;/p&gt;

&lt;h3 id=&#34;languages:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;languages&lt;/h3&gt;

&lt;p&gt;If your WordPress is in English, you can safely delete the contents of the &lt;em&gt;languages&lt;/em&gt; folder, otherwise you should download the translation in your language and put in the &lt;em&gt;wp-content/languages&lt;/em&gt; while deleting everything else in it.&lt;/p&gt;

&lt;h3 id=&#34;upgrade:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;upgrade&lt;/h3&gt;

&lt;p&gt;The folder &lt;em&gt;upgrade&lt;/em&gt; in &lt;em&gt;wp-content&lt;/em&gt; is used by WordPress&amp;rsquo; built-in updater and should always be empty except for when you&amp;rsquo;re updating of course.&lt;/p&gt;

&lt;h3 id=&#34;uploads-and-other-folders:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;uploads and other folders&lt;/h3&gt;

&lt;p&gt;Next up: search every other folder in &lt;em&gt;wp-content&lt;/em&gt; for PHP and server configuration files and delete files if you think they shouldn&amp;rsquo;t be there. I suggest doing a case insensitive search for &lt;em&gt;*.php&lt;/em&gt; and &lt;em&gt;.htaccess&lt;/em&gt; and carefully inspecting the results.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;find /path/to/wordpress/wp-content/uploads/ -iname &amp;quot;*.php&amp;quot; -or -iname &amp;quot;.htaccess&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You probably shouldn&amp;rsquo;t have any PHP or .htaccess files in &lt;em&gt;wp-content/uploads/someyear/&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Finally search all the remaining files for typical code injections. PHP injections usually contain the functions &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;base64_decode&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;egrep &#39;eval(|decode(&#39; -r -H /path/to/wordpress/wp-content/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;search-and-delete-infections-in-your-database:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Search and delete infections in your database&lt;/h2&gt;

&lt;p&gt;While most infections are usually to be found in the files, hackers could also insert executable and obfuscated code into your database. Most often these are XSS injections and WordPress should protect you against them. Still, it wouldn&amp;rsquo;t hurt to scan your posts and comments for injected code.&lt;/p&gt;

&lt;p&gt;The easiest way is to connect to your database right away using something like the previously mentioned &lt;em&gt;phpMyAdmin&lt;/em&gt; tool. Login, open the database and go to the SQL page so you can run some SQL commands. The select statements below will show you the posts and comments containing common injections. Use a &lt;code&gt;DELETE&lt;/code&gt; query (be careful) or the &lt;em&gt;phpMyAdmin&lt;/em&gt; GUI to completely delete the found posts and comments. Don&amp;rsquo;t forget to change &lt;code&gt;wp_&lt;/code&gt; to the prefix you use.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SELECT * FROM wp_posts WHERE post_content LIKE &#39;%&amp;lt;iframe%&#39;
UNION
SELECT * FROM wp_posts WHERE post_content LIKE &#39;%&amp;lt;noscript%&#39;
UNION
SELECT * FROM wp_posts WHERE post_content LIKE &#39;%display:%&#39;
UNION
SELECT * FROM wp_posts WHERE post_content LIKE &#39;%&amp;lt;?%&#39;
UNION
SELECT * FROM wp_posts WHERE post_content LIKE &#39;%&amp;lt;?php%&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;SELECT * FROM wp_comments WHERE comment_content LIKE &#39;%&amp;lt;iframe%&#39;
UNION
SELECT * FROM wp_comments WHERE comment_content LIKE &#39;%&amp;lt;noscript%&#39;
UNION
SELECT * FROM wp_comments WHERE comment_content LIKE &#39;%display:%&#39;
UNION
SELECT * FROM wp_comments WHERE comment_content LIKE &#39;%&amp;lt;?%&#39;
UNION
SELECT * FROM wp_comments WHERE comment_content LIKE &#39;%&amp;lt;?php%&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;using-exploit-scanner-and-sucuri-security-to-detect-further-infections:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Using &lt;em&gt;Exploit Scanner&lt;/em&gt; and &lt;em&gt;Sucuri Security&lt;/em&gt; to detect further infections&lt;/h2&gt;

&lt;p&gt;Most code injections should be gone by now, but there are a few WordPress plugins available to detect everything that&amp;rsquo;s left.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wordpress.org/plugins/exploit-scanner/&#34;&gt;Exploit Scanner&lt;/a&gt; scans your files for possible hidden infections. Its options allow you to also scan for iframes etc., but they cause a lot of false negatives.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wordpress.org/plugins/sucuri-scanner/&#34;&gt;Sucuri Security&lt;/a&gt; is a plugin I&amp;rsquo;d really recommend for any WordPress installation, whether you were hacked or not. The plugin allows you to automatically scan for changed files, notify you about any administrative action, easily reinstall every plugin and theme after a hack&amp;hellip;&lt;/p&gt;

&lt;p&gt;Take advantage of all possibilities of the free versions of both of them. They will make sure that your WordPress is clean and stays clean.&lt;/p&gt;

&lt;h2 id=&#34;check-users-and-passwords:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Check users and passwords&lt;/h2&gt;

&lt;p&gt;One of the last steps is to check if the hacker didn&amp;rsquo;t create any new users. While you&amp;rsquo;re at it, change the passwords of every user with more rights than a regular subscriber.&lt;/p&gt;

&lt;h2 id=&#34;restoring-your-website-and-keeping-it-safe:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Restoring your website and keeping it safe&lt;/h2&gt;

&lt;p&gt;Your WordPress should now be clean of infections and you can start restoring your website. Turn maintenance mode off and deactivate the &lt;em&gt;WP Maintenance Mode&lt;/em&gt; plugin. Now activate all the other plugins you used one by one. Make sure to &lt;strong&gt;delete any plugin you don&amp;rsquo;t really need&lt;/strong&gt; and check if they are still being maintained/updated. I&amp;rsquo;d also delete every inactive theme. This part of the guide is crucial since it was probably one of the plugins that was used to accomplish the hack.&lt;/p&gt;

&lt;h2 id=&#34;harden-your-wordpress-security:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Harden your WordPress Security&lt;/h2&gt;

&lt;p&gt;A few weeks after this post, I&amp;rsquo;ll publish &lt;a href=&#34;http://sa.muel.be/2015/hardening-your-wordpress-security/&#34;&gt;a follow-up guide&lt;/a&gt; on improving the security on your WordPress website.&lt;/p&gt;

&lt;h2 id=&#34;sources:b271d4e596dc01ff609a631b1dcbeb8c&#34;&gt;Sources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wordpress.stackexchange.com/questions/19696/verifying-that-i-have-fully-removed-a-wordpress-hack&#34;&gt;http://wordpress.stackexchange.com/questions/19696/verifying-that-i-have-fully-removed-a-wordpress-hack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wordpress.org/plugins/sucuri-scanner/&#34;&gt;https://wordpress.org/plugins/sucuri-scanner/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wordpress.org/plugins/exploit-scanner/&#34;&gt;https://wordpress.org/plugins/exploit-scanner/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codex.wordpress.org/FAQ_My_site_was_hacked&#34;&gt;https://codex.wordpress.org/FAQ_My_site_was_hacked&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://smackdown.blogsblogsblogs.com/2008/06/24/how-to-completely-clean-your-hacked-wordpress-installation/&#34;&gt;http://smackdown.blogsblogsblogs.com/2008/06/24/how-to-completely-clean-your-hacked-wordpress-installation/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://z9.io/2008/06/08/did-your-wordpress-site-get-hacked/&#34;&gt;http://z9.io/2008/06/08/did-your-wordpress-site-get-hacked/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>LinkedIn</title>
      <link>http://sa.muel.be/linkedin-nl/</link>
      <pubDate>Sun, 05 Jul 2015 16:08:03 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/linkedin-nl/</guid>
      <description>Je wordt doorgestuurd naar mijn LinkedIn-pagina... &lt;a rel=&#34;me&#34; href=&#34;https://be.linkedin.com/in/samueldebruyn/nl&#34;&gt;Klik hier als dat niet zou gebeuren.&lt;/a&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
window.location = &#34;https://be.linkedin.com/in/samueldebruyn/nl&#34;;
&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>GitHub</title>
      <link>http://sa.muel.be/github/</link>
      <pubDate>Sun, 05 Jul 2015 16:08:03 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/github/</guid>
      <description>You will be redirected to my GitHub page in a second... &lt;a rel=&#34;me&#34; href=&#34;https://github.com/samueldebruyn&#34;&gt;Click here if that doesn&#39;t happen.&lt;/a&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
window.location = &#34;https://github.com/samueldebruyn&#34;;
&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>LinkedIn</title>
      <link>http://sa.muel.be/linkedin/</link>
      <pubDate>Sun, 05 Jul 2015 16:08:03 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/linkedin/</guid>
      <description>You will be redirected to my LinkedIn page in a second... &lt;a rel=&#34;me&#34; href=&#34;https://be.linkedin.com/in/samueldebruyn&#34;&gt;Click here if that doesn&#39;t happen.&lt;/a&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
window.location = &#34;https://be.linkedin.com/in/samueldebruyn&#34;;
&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Twitter</title>
      <link>http://sa.muel.be/twitter/</link>
      <pubDate>Sun, 05 Jul 2015 16:08:03 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/twitter/</guid>
      <description>You will be redirected to my Twitter page in a second... &lt;a rel=&#34;me&#34; href=&#34;https://twitter.com/samueldebruyn&#34;&gt;Click here if that doesn&#39;t happen.&lt;/a&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
window.location = &#34;https://twitter.com/samueldebruyn&#34;;
&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Deobfuscated code from the WordPress hack</title>
      <link>http://sa.muel.be/addendum/2015/deobfuscated-code-from-the-wordpress-hack/</link>
      <pubDate>Sat, 27 Jun 2015 18:13:15 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>http://sa.muel.be/addendum/2015/deobfuscated-code-from-the-wordpress-hack/</guid>
      <description>&lt;p&gt;This page is part of the blogpost &lt;a href=&#34;http://sa.muel.be/2015/about-that-time-i-dealt-with-a-bunch-of-hackers-on-a-wordpress/&#34;&gt;About that time I dealt with a bunch of hackers on a WordPress&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following is the deobfuscated version of &lt;a href=&#34;http://sa.muel.be/addendum/2015/obfuscated-code-from-the-wordpress-hack/&#34;&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;script src=&#34;https://gist.github.com/SamuelDebruyn/529d1c5252c990b4367a.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>