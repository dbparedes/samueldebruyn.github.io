<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Samuel Debruyn</title>
    <link>https://chipsncookies.com/post/</link>
    <description>Recent content in Posts on Samuel Debruyn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>s@muel.be (Samuel Debruyn)</managingEditor>
    <webMaster>s@muel.be (Samuel Debruyn)</webMaster>
    <lastBuildDate>Mon, 29 Aug 2016 11:10:40 +0200</lastBuildDate>
    <atom:link href="https://chipsncookies.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Creating a Xamarin.iOS binding project for dummies</title>
      <link>https://chipsncookies.com/2016/creating-a-xamarin.ios-binding-project-for-dummies/</link>
      <pubDate>Mon, 29 Aug 2016 11:10:40 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2016/creating-a-xamarin.ios-binding-project-for-dummies/</guid>
      <description>

&lt;h2 id=&#34;what-you-need&#34;&gt;What you need&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Experience with Xamarin.iOS&lt;/li&gt;
&lt;li&gt;Xamarin Studio for Mac&lt;/li&gt;
&lt;li&gt;An empty binding project (just create a new project in Xamarin Studio)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;a-very-short-intro-to-objective-c-for-c-developers&#34;&gt;A very short intro to Objective-C for C# developers&lt;/h2&gt;

&lt;p&gt;Oh god, Obj-C, the most incomprehensible programming language in the app dev world. You simply can&amp;rsquo;t create an iOS binding project without some very basic knowledge of Obj-C. So here goes, an intro to Obj-C for C# developers.&lt;/p&gt;

&lt;p&gt;When you&amp;rsquo;re developing a bindings library, you&amp;rsquo;ll get the iOS project in one of the following forms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a .a file (static library) - basically like a .DLL&lt;/li&gt;
&lt;li&gt;a .framework file (Cocoa Touch framework) - basically like a .DLL with some resources&lt;/li&gt;
&lt;li&gt;a CocoaPod - just like NuGet&lt;/li&gt;
&lt;li&gt;source code with project file (containing a .xcodeproj file) - like source code including .csproj and .sln files&lt;/li&gt;
&lt;li&gt;source code without project file - just like a bunch of .cs files&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obj-C projects have .h files and .m files. The headers (.h files) describe something like a class. You could think of them like interfaces. The models (.m files) are the implementations. Each .h file has one .m file. Except for those files, every project usually has an &lt;em&gt;info.plist&lt;/em&gt; file describing project settings (names, supported architectures&amp;hellip;) and a &lt;em&gt;MyProject.xcodeproj&lt;/em&gt; file (this is actually a directory containing multiple configuration files) describing the build settings etc.&lt;/p&gt;

&lt;p&gt;Now, there are a few concepts in the programming language itself which you should be familiar with:&lt;/p&gt;

&lt;h3 id=&#34;protocols&#34;&gt;Protocols&lt;/h3&gt;

&lt;p&gt;Protocols are like interfaces or abstract classes. The main difference between C# interfaces and protocols are the optional methods. The protocol defines optional methods that the models may or may not implement. Each class in Obj-C can implement multiple protocols just like a C# class can implement multiple interfaces. Protocols are usually translated in C# as abstract classes. Note that when you&amp;rsquo;re overriding from a protocol, the base method could have no implementation if the original Obj-C method was optional. This means that you generally should avoid calling the base methods. When in doubt, consult &lt;a href=&#34;https://developer.apple.com/reference/&#34;&gt;the Apple developer documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;umbrella-headers&#34;&gt;Umbrella headers&lt;/h3&gt;

&lt;p&gt;Each iOS framework or library has one header that is the umbrella header for that project. It contains references to all the other headers in that project and defines the base functionality for that library. The umbrella header should have the same name as the project itself. This header is essential for our binding project. Sometimes, you&amp;rsquo;ll have to modify this header to include references to other relevant headers in the project for the bindings to work properly. When that&amp;rsquo;s the case, you just have to add &lt;code&gt;#import &amp;quot;AnotherHeader.h&amp;quot;&lt;/code&gt; statements at the top of the file, just like the &lt;code&gt;using&lt;/code&gt; statement in C#.&lt;/p&gt;

&lt;p&gt;It may be useful to browse through &lt;a href=&#34;https://developer.xamarin.com/guides/ios/application_fundamentals/delegates,_protocols,_and_events/&#34;&gt;this documentation page&lt;/a&gt; at Xamarin.com.&lt;/p&gt;

&lt;h3 id=&#34;static-libraries-and-frameworks&#34;&gt;Static libraries and frameworks&lt;/h3&gt;

&lt;p&gt;When you want to distribute something in the .NET world, you usually just create a class library and distribute its source code or the compiled version (DLL). There are two types of libraries in the iOS world.&lt;/p&gt;

&lt;p&gt;Cocoa Touch Static Libraries are just like the class libraries you know in .NET. The other kind, frameworks, are about the same but they also contain the headers (most of the time just the umbrella header) and media resources (like a NuGet package).&lt;/p&gt;

&lt;h2 id=&#34;getting-started-with-your-binding-project&#34;&gt;Getting started with your binding project&lt;/h2&gt;

&lt;p&gt;To create a binding project for iOS, you&amp;rsquo;ll need the Objective Sharpie tool. The latest version is available at &lt;a href=&#34;https://developer.xamarin.com/guides/cross-platform/macios/binding/objective-sharpie/getting-started/&#34;&gt;Xamarin&amp;rsquo;s website&lt;/a&gt; and if you already have the tool installed, you can use the &lt;code&gt;sharpie update&lt;/code&gt; command to make sure you have the latest version.&lt;/p&gt;

&lt;p&gt;A binding project consist of three parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A native reference (either an .a file or a .framework file)&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;StructsAndEnums.cs&lt;/em&gt; file containing all the used enums&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;ApiDefinitions.cs&lt;/em&gt; file containing all the definitions of the classes used in the iOS framework/library&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The API definitions are a list of interfaces with methods decorated with attributes. The attributes tell Xamarin how it should generate the C# API that is bound to the native code. There should be at least one interface with the name of the project itself (or the name of the umbrella header).&lt;/p&gt;

&lt;p&gt;The following sections describe how to generate both files using Objective Sharpie from easiest to most difficult approach. In most cases, you can try multiple approaches. So if one of them doesn&amp;rsquo;t properly generate the API definitions for you, just move on and try another one. You&amp;rsquo;d be surprised how much of a difference they can make, even if the framework and the CocoaPod contain the same files. I strongly recommmend to read through every approach.&lt;/p&gt;

&lt;h3 id=&#34;when-the-project-is-available-as-cocoapod-https-cocoapods-org-recommended-approach&#34;&gt;When the project is available as &lt;a href=&#34;https://cocoapods.org&#34;&gt;CocoaPod&lt;/a&gt; (recommended approach)&lt;/h3&gt;

&lt;p&gt;.NET developers are usually familiar with NuGet packages. They always contain a bunch of .dll files and define dependencies and compatible project types. CocoaPods consist of either compiled code, either source code. To generate the API definitions from a CocoaPod, use the following commands in an empty directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sharpie pod init ios MyCocoaPod
sharpie pod bind -n MyNamespace
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The CocoaPod is downloaded to the &lt;em&gt;Pods&lt;/em&gt; directory. When you browse through its files, you&amp;rsquo;ll quickly notice if it contains just the source code or also a binary file (without extension), a framework or a static library (.a file).&lt;/p&gt;

&lt;h3 id=&#34;when-the-project-is-available-as-a-framework-file&#34;&gt;When the project is available as a .framework file&lt;/h3&gt;

&lt;p&gt;When your project is supplied as a framework, simply open the framework and verify if it has a compiled binary file inside. If it has one, read the part above about the binary file below. Otherwise, use the source code to create the binary yourself as documented below.&lt;/p&gt;

&lt;p&gt;Alternatively, the following command may also do the job, this doesn&amp;rsquo;t always work though.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sharpie bind -o OutputDirectory -sdk iphoneos9.3 -n MyNamespace MyFramework.framework
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;inspecting-the-binary-file-without-extension-or-a-file-and-generating-api-definitions&#34;&gt;Inspecting the binary file (without extension or .a file) and generating api definitions&lt;/h2&gt;

&lt;p&gt;What you have to verify is the architecture. The iOS simulator has the &lt;code&gt;i386 x86_64&lt;/code&gt; architectures and iPhones and iPads have the &lt;code&gt;armv7 arm64&lt;/code&gt; and possibly &lt;code&gt;armv7s&lt;/code&gt; (only useful on iPhone 5/5c) architectures. You can use the &lt;code&gt;lipo&lt;/code&gt; command to verify the architectures of a binary like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lipo -info MyFramework.framework/MyFramework
lipo -info Pods/MySDK/MySDK.framework/MySDK
lipo -info JustABinary.a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to debug your app in the iOS simulator, you &lt;em&gt;need&lt;/em&gt;  the simulator architectures. But make sure to remove these architectures &lt;strong&gt;when you submit your app to the App Store&lt;/strong&gt; as Apple could deny your app if it includes simulator bytecode. The command to remove these architectures is the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lipo -remove i386 x86_64 -output Path/To/Binary/File Path/To/Binary/File
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that you can&amp;rsquo;t access the binary file after you&amp;rsquo;ve created the bindings. This means that you possibly could have to create two versions of the binding project. One with the simulator architectures and one without them. The only difference would be the referenced file in the native references. This can easily be fully automated with MSBuild targets or in your continuous integration process.&lt;/p&gt;

&lt;p&gt;If the binary file doesn&amp;rsquo;t include the architectures you require, try to build it yourself as documented below.&lt;/p&gt;

&lt;p&gt;Now, if you have a binary, regardless of its architectures, you can use it to generate the necessary API definitions. This is what the Xamarin tooling uses to build the bindings itself.&lt;/p&gt;

&lt;h2 id=&#34;building-the-binary-file-yourself&#34;&gt;Building the binary file yourself&lt;/h2&gt;

&lt;p&gt;If you don&amp;rsquo;t have a binary file or if your binary file doesn&amp;rsquo;t support all the architectures you need, you end up building one yourself. This is the hardest part of the binding process but it&amp;rsquo;s well documented on &lt;a href=&#34;https://developer.xamarin.com/guides/ios/advanced_topics/binding_objective-c/walkthrough/#Creating_A_Static_Library&#34;&gt;Xamarin&amp;rsquo;s website&lt;/a&gt;. The Xamarin guide describes how to create a static library, but I found it easier to create a framework instead. I used Xcode 7 for this part, but the minimum is Xcode 6.&lt;/p&gt;

&lt;p&gt;If the source code already contains an Xcode project, you&amp;rsquo;re golden. Just open the Xcode project and try to build it. If not, continue&amp;hellip;&lt;/p&gt;

&lt;p&gt;Create a new Xcode project and choose &lt;em&gt;iOS &amp;gt; Framework &amp;amp; Library &amp;gt; Cocoa Touch Framework&lt;/em&gt;. Now you basically have to put all the files from the source code in this project. You can&amp;rsquo;t replace the header that Xcode created by default, so just copy paste the code from the header in the sources into the one that Xcode created. Try to build the project. Sometimes the linking goes wrong and you have to fix the links between the .h and the .m files yourself.&lt;/p&gt;

&lt;h3 id=&#34;creating-the-binary-for-multiple-architectures&#34;&gt;Creating the binary for multiple architectures&lt;/h3&gt;

&lt;p&gt;As mentioned before, you&amp;rsquo;ll probably need a binary that contains the following architectures: &lt;code&gt;i386 x86_64 armv7 arvmv64&lt;/code&gt; and you can use the &lt;code&gt;lipo -info mybinary&lt;/code&gt; command to inspect the supported architectures. Your binary probably won&amp;rsquo;t contain all of them, so you can use the commands below to combine build and combine multiple binaries:&lt;/p&gt;

&lt;h4 id=&#34;build-for-arm-devices&#34;&gt;Build for ARM devices&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;/Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild ONLY_ACTIVE_ARCH=NO -project XcodeProject.xproj -target NameOfTheProject -sdk iphoneos -configuration Release clean build
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;build-for-simulator&#34;&gt;Build for simulator&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;/Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild ONLY_ACTIVE_ARCH=NO -project XcodeProject.xproj -target NameOfTheProject -sdk iphonesimulator -configuration Release clean build
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;combine-both-binaries-into-one&#34;&gt;Combine both binaries into one&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;lipo -create -output PathToCombinedFile PathToARMBinary PathToSimulatorBinary
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;makefile-which-does-everything-for-you&#34;&gt;Makefile which does everything for you&lt;/h4&gt;

&lt;p&gt;This Makefile also generates the binding definitions (described below) and is used for Cocoa Touch Frameworks.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;XBUILD=/Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild
PROJECT_ROOT=PathToProject
PROJECT=$(PROJECT_ROOT)/NameOfXcodeProject.xcodeproj
TARGET=NameOfTheProject
BINDING_PROJECT=NamespaceOfTheBindings

all: $(TARGET).framework

$(TARGET)-simulator.framework:
	$(XBUILD) ONLY_ACTIVE_ARCH=NO -project $(PROJECT) -target $(TARGET) -sdk iphonesimulator -configuration Release clean build
	mv $(PROJECT_ROOT)/build/Release-iphonesimulator/$(TARGET).framework $(TARGET)-simulator.framework

$(TARGET)-iphone.framework:
	$(XBUILD) ONLY_ACTIVE_ARCH=NO -project $(PROJECT) -target $(TARGET) -sdk iphoneos -configuration Release clean build
	mv $(PROJECT_ROOT)/build/Release-iphoneos/$(TARGET).framework $(TARGET)-iphone.framework

$(TARGET).framework: $(TARGET)-simulator.framework $(TARGET)-iphone.framework $(BINDING_PROJECT)/Generated_ApiDefinitions.cs
	cp -R $(TARGET)-iphone.framework ./$(TARGET).framework
	rm ./$(TARGET).framework/$(TARGET)
	lipo -create -output $(TARGET).framework/$(TARGET) $(TARGET)-iphone.framework/$(TARGET) $(TARGET)-simulator.framework/$(TARGET)

$(BINDING_PROJECT)/Generated_ApiDefinitions.cs:
	 sharpie bind -p Generated_ -n $(BINDING_PROJECT) -o $(BINDING_PROJECT) $(PROJECT)

clean:
	rm -rf *.framework
	rm $(BINDING_PROJECT)/Generated_ApiDefinitions.cs
	rm $(BINDING_PROJECT)/Generated_StructsAndEnums.cs
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;generating-the-bindings-from-the-binary-file&#34;&gt;Generating the bindings from the binary file&lt;/h2&gt;

&lt;p&gt;Generating the API definitions from a binary is as simply as running a single command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sharpie bind -o OutputDirectory -sdk iphoneos9.3 -n MyNamespace MyBinaryFile.a
sharpie bind -o OutputDirectory -sdk iphoneos9.3 -n MyNamespace MyBinaryFile
sharpie bind -o OutputDirectory -sdk iphoneos9.3 -n MyNamespace MyXcodeProject.xcodeproj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There will probably be a few warnings in the output, but if you got some errors, you need to choose a different approach or take a look at the Objective-C source code.&lt;/p&gt;

&lt;h2 id=&#34;fixing-the-generated-definitions&#34;&gt;Fixing the generated definitions&lt;/h2&gt;

&lt;p&gt;I haven&amp;rsquo;t done a binding project where the definitions Objective Sharpie generated were perfect. Most of the binding definition syntax is documented on &lt;a href=&#34;https://developer.xamarin.com/guides/cross-platform/macios/binding/binding-types-reference/&#34;&gt;Xamarin&amp;rsquo;s website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, let&amp;rsquo;s make sure you get the point of these files. The &lt;em&gt;StructsAndEnums.cs&lt;/em&gt; file is just a collection of enums used in the project. The &lt;em&gt;ApiDefinitions.cs&lt;/em&gt; file is the keystone. This file contains a list of interfaces which are used by the Xamarin tooling to create implementations that call the native binary/framework. All we have to do is define the C# interface which is going to be available in our binding and which native method should be used for each C# method/property. A binding project generates a DLL just like any other .NET library.&lt;/p&gt;

&lt;h3 id=&#34;fixing-the-enums&#34;&gt;Fixing the enums&lt;/h3&gt;

&lt;p&gt;You may find the enumerations to be decorated with the &lt;code&gt;[Native]&lt;/code&gt; attribute. This means that it refers to an enum used in the native code. Just make sure that the underlying type of this enum is &lt;code&gt;long&lt;/code&gt;. You&amp;rsquo;ll also notice that Objective Sharpie generates enums where the underlying type is &lt;code&gt;uint&lt;/code&gt; which is technically impossible. I usually make the underlying type &lt;code&gt;byte&lt;/code&gt; unless it has some values defined which don&amp;rsquo;t fit in a byte (0-255).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Native]
public enum ExampleEnum: long
{
    Value1,
    Value2
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;enums-or-interfaces-decorated-with-the-verify-inferredfrommemberprefix-attribute&#34;&gt;Enums or interfaces decorated with the &lt;code&gt;[Verify(InferredFromMemberPrefix)]&lt;/code&gt; attribute&lt;/h3&gt;

&lt;p&gt;Remove the attribute and verify the name of the interfaces or enum. The name could not be determined by Objective Sharpie and you&amp;rsquo;re probably better of naming it yourself.&lt;/p&gt;

&lt;h3 id=&#34;interfaces-decorated-with-category&#34;&gt;Interfaces decorated with &lt;code&gt;[Category]&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;This is a list of extension methods. Make sure the class only contains methods (no properties) as they will all be made static. You can easily replace a property by a method by writing the method yourself and decorating it with the &lt;code&gt;[Export(&amp;quot;nameOfNativeMethod:&amp;quot;)]&lt;/code&gt; attribute.&lt;/p&gt;

&lt;h3 id=&#34;the-partial-constants-interface&#34;&gt;The partial constants interface&lt;/h3&gt;

&lt;p&gt;Usually you&amp;rsquo;ll find a couple of these in the definitions and they&amp;rsquo;re all marked by the &lt;code&gt;[ConstantsInterfaceAssociation]&lt;/code&gt; attribute. Remove the attribute and put all the constants in a single interface decorated with &lt;code&gt;[Static]&lt;/code&gt;. The constants themselves have the &lt;code&gt;[Field]&lt;/code&gt; attribute.&lt;/p&gt;

&lt;h3 id=&#34;interfaces-with-protocol-model&#34;&gt;Interfaces with &lt;code&gt;[Protocol, Model]&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;This generates an implementation and an interface. However, you have to declare the interface yourself. So if the native protocol would be called &lt;code&gt;AmazingService&lt;/code&gt;, you&amp;rsquo;d have to add an interface called &lt;code&gt;IAmazingService&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;before&#34;&gt;Before&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;[Protocol, Model]
[BaseType(typeof(NSObject))]
interface AmazingService
{
    a few methods...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;after&#34;&gt;After&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;public interface IAmazingService {}

[Protocol, Model]
[BaseType(typeof(NSObject))]
interface AmazingService: IAmazingService
{
    some methods...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;interfaces-decorated-with-verify-methodtoproperty&#34;&gt;Interfaces decorated with &lt;code&gt;[Verify(MethodToProperty)]&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s up to you to decide if the bindings should contain properties or methods. Often, you can replace a method with a getter and or you can combine two methods and replace them with a getter and setter. Objective Sharpie also tries to do this for you and marks them with the aforementioned attribute. You can safely remove the attribute and ignore it unless they&amp;rsquo;re part of an interface which is marked with the &lt;code&gt;[Category]&lt;/code&gt; attribute.&lt;/p&gt;

&lt;h3 id=&#34;methods-marked-with-verify-stronglytypednsarray&#34;&gt;Methods marked with &lt;code&gt;[Verify(StronglyTypedNSArray)]&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Objective Sharpie couldn&amp;rsquo;t determine the type of the array passed in/out this method/property and used &lt;code&gt;NSObject&lt;/code&gt; as the type. Replace it with a more specific type or let it be and remove the attribute.&lt;/p&gt;

&lt;h3 id=&#34;other-verify-attributes&#34;&gt;Other &lt;code&gt;[Verify]&lt;/code&gt; attributes&lt;/h3&gt;

&lt;p&gt;Run the command &lt;code&gt;sharpie verify-docs&lt;/code&gt; for the latest docs on the &lt;code&gt;[Verify]&lt;/code&gt; attributes you&amp;rsquo;ll find. You have to remove all these attributes before you can compile your binding project.&lt;/p&gt;

&lt;h2 id=&#34;congrats&#34;&gt;Congrats&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;re no longer a dummy and I hope you have a working binding project. If you&amp;rsquo;re having trouble generating the required binary file, I suggest you contact an iOS developer. If you have some issues with your binding project, send me &lt;a href=&#34;https://twitter.com/SamuelDebruyn&#34;&gt;a tweet&lt;/a&gt; and I&amp;rsquo;ll get in touch ;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A new chapter</title>
      <link>https://chipsncookies.com/2016/a-new-chapter/</link>
      <pubDate>Tue, 26 Apr 2016 20:56:39 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2016/a-new-chapter/</guid>
      <description>

&lt;p&gt;Monday was the last day of my internship at &lt;a href=&#34;http://realdolmen.com&#34;&gt;RealDolmen&lt;/a&gt;. For the past 12 weeks, I was a Xamarin developer creating an Android, iOS and a Windows Phone app for &lt;a href=&#34;http://education.realdolmen.com&#34;&gt;RealDolmen Education&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On June 9th, I&amp;rsquo;ll be giving a presentation to my mentors and a few other lecturers about my internship and if all goes well, I&amp;rsquo;ll then graduate.&lt;/p&gt;

&lt;p&gt;I really would like to thank the awesome people at RealDolmen for guiding and supporting me: Nico, Wesley, Jonathan, Daniyar, James, Alexander, Hannes, Tom, Danny, Fred, Erik and everyone else I forgot&amp;hellip;! I learned a lot from them and it&amp;rsquo;s a great working environment.&lt;/p&gt;

&lt;p&gt;In the next few weeks, I&amp;rsquo;ll be working on the second part of my dissertation which mostly consists of documentation about my internship. In the meantime, you can already &lt;a href=&#34;https://chipsncookies.com/portfolio/realdolmen-education/&#34;&gt;browse through the code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This would probably also be a good time to thank all the people at &lt;a href=&#34;http://odisee.be&#34;&gt;Odisee&lt;/a&gt;. My fellow students, the lecturers, the staff, everybody at the ASR (student council)&amp;hellip; The past three years have been a great adventure with lots of interesting and great experiences. On my first day, I didn&amp;rsquo;t know anyone and while I had some knowledge about software development (doesn&amp;rsquo;t seem much compared with where I am today), I didn&amp;rsquo;t have any real experience. That isn&amp;rsquo;t the case anymore today. I&amp;rsquo;ve learned so much on a lot of different levels. My work at the student council also contributed to this. There are too many people I&amp;rsquo;d like to thank, so I&amp;rsquo;m not even going to try to list them all. Thank you, to all of you.&lt;/p&gt;

&lt;h3 id=&#34;so-what-s-next&#34;&gt;So&amp;hellip; what&amp;rsquo;s next?&lt;/h3&gt;

&lt;p&gt;On May 9th, I&amp;rsquo;m starting as a Xamarin developer at &lt;a href=&#34;http://cozmos.be/&#34;&gt;Cozmos&lt;/a&gt;. They&amp;rsquo;re an awesome company with awesome people and they make awesome mobile apps. Awesome, right? They have the best Xamarin developers in Belgium, so I&amp;rsquo;m really looking forward to learning from and working with them.&lt;/p&gt;

&lt;p&gt;Be sure to check out &lt;a href=&#34;http://cozmos.be/&#34;&gt;Cozmos&amp;rsquo; website&lt;/a&gt; and if you ever are in need of a mobile app, or you have an app and you want to make it more awesome, you know where to find us.&lt;/p&gt;

&lt;p&gt;PS: also check out &lt;a href=&#34;http://www.polariz.be/&#34;&gt;Polariz&lt;/a&gt;, Cozmos&amp;rsquo; sister company specialized in automated testing of mobile apps.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android update distribution is getting worse</title>
      <link>https://chipsncookies.com/2016/android-update-distribution-is-getting-worse/</link>
      <pubDate>Tue, 29 Mar 2016 08:25:38 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2016/android-update-distribution-is-getting-worse/</guid>
      <description>

&lt;h2 id=&#34;why-it-matters&#34;&gt;Why it matters&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Click on the images in this post to view a larger, more detailed version.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A few days ago, when Google released the &lt;a href=&#34;https://developer.android.com/preview/index.html&#34;&gt;Android N Developer Preview&lt;/a&gt;, I was reading some articles about the famous &lt;em&gt;Android fragmentation problem&lt;/em&gt;. By now, we all know why it matters and why it doesn&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;In my opinion, it&amp;rsquo;s quite overrated. Developers are used to programming against the support libraries instead of the &lt;em&gt;true&lt;/em&gt; Android API. It would be nice if Google could &lt;em&gt;fix&lt;/em&gt; this annoyance, but it&amp;rsquo;s clearly not limiting developers.&lt;/p&gt;

&lt;p&gt;So why does it still matter? It matters to the end users. If you buy an expensive flagship phone, you expect it to receive new features through updates just like your PC does. It doesn&amp;rsquo;t make sense to provide updates for devices with outdated hardware, but most recent phones can last a few years before their hardware becomes outdated. However, their software can&amp;rsquo;t. Most phones are updated for a year or two and are then ignored as its manufacturers want you to buy its newest product.&lt;/p&gt;

&lt;h2 id=&#34;how-bad-is-it&#34;&gt;How bad is it?&lt;/h2&gt;

&lt;p&gt;The Android version with slowest adoption ever is still Android Honeycomb. That&amp;rsquo;s quite normal. Android Honeycomb only ever rolled out to the tablet market which was very young at the time. However, the version with the second to worst adoption rate is Android Marshmallow, Google&amp;rsquo;s latest release. The versions before it didn&amp;rsquo;t do much better. The situation seems to be getting worse and worse.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://chipsncookies.com/img/post/2016-android/adoption_rate_by_time_large.png&#34;&gt;&lt;img src=&#34;https://chipsncookies.com/img/post/2016-android/adoption_rate_by_time_small.png&#34; alt=&#34;Version adoption rate&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This brings the Android version landscape today to this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://chipsncookies.com/img/post/2016-android/version_distribution_large.png&#34;&gt;&lt;img src=&#34;https://chipsncookies.com/img/post/2016-android/version_distribution_small.png&#34; alt=&#34;Android version distribution&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One thing that I personally find interesting is the highest adoption rate an Android version ever reached. Both Android Froyo and Android Gingerbread each once were on more than 60% of the active Android devices, but recent versions never reached such a high penetration into the ecosystem. Okay, there were less Android devices at the time so it was easier to get them updated. But regardless of the highest adoption a version ever reached, it&amp;rsquo;s still important to look at time it took the version to reach that adoption rate. Likewise, it has its ups and downs, but it seems to be getting worse overall.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://chipsncookies.com/img/post/2016-android/highest_adoption_by_version_large.png&#34;&gt;&lt;img src=&#34;https://chipsncookies.com/img/post/2016-android/highest_adoption_by_version_small.png&#34; alt=&#34;Android version distribution&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is something Google has to fix. Microsoft &lt;a href=&#34;http://www.neowin.net/news/there-will-be-no-second-wave-of-windows-10-mobile-upgrades-for-lumia-devices&#34;&gt;made&lt;/a&gt; the same mistake &lt;a href=&#34;http://www.neowin.net/news/there-will-be-no-second-wave-of-windows-10-mobile-upgrades-for-lumia-devices&#34;&gt;a couple of times&lt;/a&gt; and is now &lt;a href=&#34;http://360.here.com/2016/03/15/important-information-about-here-apps-on-windows-phone/&#34;&gt;paying the price&lt;/a&gt; for it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fix common binding errors with MVVM Light on Xamarin</title>
      <link>https://chipsncookies.com/2016/fix-common-binding-errors-with-mvvm-light-on-xamarin/</link>
      <pubDate>Tue, 22 Mar 2016 20:02:53 +0100</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2016/fix-common-binding-errors-with-mvvm-light-on-xamarin/</guid>
      <description>

&lt;p&gt;There isn&amp;rsquo;t much documentation available for &lt;a href=&#34;http://www.mvvmlight.net/&#34;&gt;MVVM Light&lt;/a&gt; when it comes to Xamarin.Android and Xamarin.iOS. There are several overloads for the &lt;code&gt;SetBinding&lt;/code&gt; method and using the wrong overload causes &lt;code&gt;TargetInvocationException&lt;/code&gt; or &lt;code&gt;TargetException&lt;/code&gt; like &lt;a href=&#34;http://stackoverflow.com/q/35197870/1592358&#34;&gt;this one&lt;/a&gt;. It&amp;rsquo;s also possible that your bindings don&amp;rsquo;t update anymore after you set one binding using an incorrect syntax.&lt;/p&gt;

&lt;h2 id=&#34;correct-binding&#34;&gt;Correct binding&lt;/h2&gt;

&lt;p&gt;You can only bind on properties, not on fields. You can use the new C# 6 syntax if you like (&lt;code&gt;public TextView TextView =&amp;gt; ...&lt;/code&gt;). They don&amp;rsquo;t always have to be &lt;code&gt;public&lt;/code&gt; but it sure helps making them &lt;code&gt;public&lt;/code&gt; either way. The easiest way to create a new view property on Android is with the &lt;code&gt;mvvmdroidelement&lt;/code&gt; snippet provided by &lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/ee36692d-ed3f-4888-b904-281aaaeac529&#34;&gt;this extension&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You should put your bindings in your views and make sure to respect the lifecycle of the platform you&amp;rsquo;re using. Also, always keep a reference to your binding so it doesn&amp;rsquo;t get garbage collected. I usually Store a list with all my bindings in my view.&lt;/p&gt;

&lt;h3 id=&#34;android-activities&#34;&gt;Android activities&lt;/h3&gt;

&lt;p&gt;First create your layout in the &lt;code&gt;OnCreate&lt;/code&gt; method, create and store the bindings and activate/update the view model if necessary. Call &lt;code&gt;Detach()&lt;/code&gt; on every binding in the &lt;code&gt;OnDestroy&lt;/code&gt; method.&lt;/p&gt;

&lt;h3 id=&#34;android-fragments&#34;&gt;Android fragments&lt;/h3&gt;

&lt;p&gt;The layout can be set up in &lt;code&gt;OnCreateView&lt;/code&gt;. Use the &lt;code&gt;OnViewCreated&lt;/code&gt; method to set and store the bindings and activate/update the view model if necessary. Call &lt;code&gt;Detach()&lt;/code&gt; on every binding in the &lt;code&gt;OnDestroy&lt;/code&gt; method.&lt;/p&gt;

&lt;h3 id=&#34;ios-viewcontrollers&#34;&gt;iOS ViewControllers&lt;/h3&gt;

&lt;p&gt;Initialize everything in the &lt;code&gt;ViewDidLoad&lt;/code&gt; method. Then use the &lt;code&gt;ViewWillAppear&lt;/code&gt; method to set and store the bindings. In some rare cases it helps calling &lt;code&gt;ForceUpdateValueFromSourceToTarget&lt;/code&gt; in &lt;code&gt;ViewDidAppear&lt;/code&gt;. Bindings should be detached using &lt;code&gt;Detach()&lt;/code&gt; on the binding in &lt;code&gt;ViewWillDisappear&lt;/code&gt;. You can use &lt;code&gt;DidReceiveMemoryWarning&lt;/code&gt; to clean up or dispose some references.&lt;/p&gt;

&lt;h3 id=&#34;static-view-models&#34;&gt;Static view models&lt;/h3&gt;

&lt;p&gt;To avoid the mentioned &lt;code&gt;TargetException&lt;/code&gt;, I&amp;rsquo;d recommend setting up a static view model locator as &lt;a href=&#34;http://blog.galasoft.ch/posts/2014/10/my-xamarinevolve-talk-is-online-for-your-viewing-pleasure/&#34;&gt;Laurent Bugnion explained&lt;/a&gt; and using the view models on that locator. Injecting a view model in your view to bind on, usually causes the &lt;code&gt;TargetException&lt;/code&gt;, so try to use the view models defined in the locator.&lt;/p&gt;

&lt;h3 id=&#34;is-the-source-of-your-binding-a-property-in-your-view&#34;&gt;Is the source of your binding a property in your view?&lt;/h3&gt;

&lt;p&gt;Then use this one:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this.SetBinding(() =&amp;gt; Path.To.Property.On.Your.View, App.Locator.MyViewModel, () =&amp;gt; App.Locator.MyViewModel.Path.To.Property.On.Your.ViewModel, BindingMode.OneWay)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;is-the-source-of-your-binding-a-property-in-your-view-model&#34;&gt;Is the source of your binding a property in your view model?&lt;/h3&gt;

&lt;p&gt;Then use the following overload:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;App.Locator.MyViewModel.SetBinding(() =&amp;gt; App.Locator.MyViewModel.Path.To.Property.On.Your.ViewModel, this, () =&amp;gt; Path.To.Property.On.Your.View, BindingMode.OneWay)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;two-way-binding&#34;&gt;Two-way binding&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;this.SetBinding(() =&amp;gt; Path.To.Property.On.Your.View, App.Locator.MyViewModel, () =&amp;gt; App.Locator.MyViewModel.Path.To.Property.On.Your.ViewModel, BindingMode.TwoWay)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;binding-to-a-target-type-different-from-the-source-type&#34;&gt;Binding to a target type different from the source type&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;App.Locator.MyViewModel.SetBinding(() =&amp;gt; App.Locator.MyViewModel.Path.To.Property.On.Your.ViewModel, this, () =&amp;gt; Path.To.Property.On.Your.View, BindingMode.OneWay).ConvertSourceToTarget(ConversionMethod)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also use a lambda, but that&amp;rsquo;s harder to debug.&lt;/p&gt;

&lt;h3 id=&#34;just-binding-to-a-source-and-updating-the-view-yourself&#34;&gt;Just binding to a source and updating the view yourself&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;App.Locator.MyViewModel.SetBinding(() =&amp;gt; App.Locator.MyViewModel.Path.To.Property.On.Your.ViewModel).WhenSourceChanges(MyUpdateMethod)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I guess this should cover all cases. I wrote this post using MVVM Light v5.2, but v5.3 or v6 is in the works (probably to be released at Xamarin Evolve 2016), so your mileage may vary with these newer versions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Kafkaesque experience you get when buying a Windows Phone flagship</title>
      <link>https://chipsncookies.com/2016/the-kafkaesque-experience-you-get-when-buying-a-windows-phone-flagship/</link>
      <pubDate>Sun, 13 Mar 2016 12:28:43 +0100</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2016/the-kafkaesque-experience-you-get-when-buying-a-windows-phone-flagship/</guid>
      <description>&lt;p&gt;Last summer my LG Nexus 5 had become unusable. The power buttons showed serious signs of wear and sometimes put my phone in a reboot loop. The battery didn’t last longer than a few hours and the phone usually died on me with more than 30% battery remaining. &lt;a href=&#34;https://www.reddit.com/r/Nexus5/comments/2rpfuj/nexus_5_broken_power_button_keeps_rebooting/&#34;&gt;Apparently&lt;/a&gt;, these are normal problems for a one year old Nexus 5&amp;hellip;&lt;/p&gt;

&lt;p&gt;I was growing tired of the energy draining and inconsistent Android platform, so I decided to get a Windows Phone. But which one? At the time Windows 10 Mobile &lt;a href=&#34;http://www.reuters.com/article/us-microsoft-windows-idUSKBN0JO2FY20141210&#34;&gt;should have been less than a month away&lt;/a&gt; so I limited my choice to &lt;a href=&#34;http://www.engadget.com/2015/08/03/lumia-windows-10-upgrade-list/&#34;&gt;the models&lt;/a&gt; that were going to get the upgrade at launch.&lt;/p&gt;

&lt;p&gt;The x30 series were already about a year old, but Microsoft decided to not launch a flagship phone on the x40 series. The ‘best’ new phone was a Lumia 640 XL but that phone wasn’t meant to be a flagship so I figured the Lumia 930 was my best choice and went for it.&lt;/p&gt;

&lt;p&gt;I was well aware of Windows Phone’s famous app gap. A lot of Android &amp;amp; iOS apps don’t have Windows Phone counterparts but nonetheless I found everything I needed in the Windows Store. However, as Windows Phone’s market share further declined, &lt;a href=&#34;http://www.theverge.com/2015/10/23/9602350/microsoft-windows-phone-app-removal-windows-store&#34;&gt;so did the apps&lt;/a&gt;. A lot of companies stopped updating their apps or simply removed them from the store. Some of them even replaced their native apps with crappy hybrid apps.&lt;/p&gt;

&lt;p&gt;But hey, Windows 10 Mobile was coming. At least, that’s what most of us thought before Microsoft pushed the launch back &lt;a href=&#34;http://www.winbeta.org/news/windows-10-mobile-release-delayed-february-says-internal-microsoft-email&#34;&gt;a couple of times&lt;/a&gt;. I didn’t want a less-than-optimal experience so I didn’t become a Windows insider. Today, the latest Windows 10 Mobile Insider Preview still isn’t where it should be in terms of quality as quite some Lumia 930 users &lt;a href=&#34;http://www.neowin.net/news/hands-on-with-windows-10-mobile-insider-preview-build-10586122&#34;&gt;are reporting&lt;/a&gt; that video recording is still broken in the latest build on the slow and release preview rings. They can only record video without audio. That&amp;rsquo;s just one of the &lt;a href=&#34;https://www.reddit.com/r/windowsphone/comments/49qx7e/w10m_build_10586164_indepth_look_at_problems/&#34;&gt;numerous issues&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most app developers did become Windows Mobile insider and started developing Universal Windows Platform apps. That’s great and all but you can’t install those on Windows Phone 8.1.&lt;/p&gt;

&lt;p&gt;So while the app gap is increasing due to companies discontinuing their apps, new apps aren’t even available because Microsoft still hasn’t released Windows 10 Mobile. Going to the Insider previews also doesn’t seem to be a viable option for me as I’d like my videos to have audio. I bought a flagship phone because I wanted a flagship experience, not a buggy one.&lt;/p&gt;

&lt;p&gt;Microsoft’s latest flagships, the Lumia 950 and 950 XL, are chock-full of bugs, random reboots and dropped calls (usually if you connect the device to a Bluetooth headset or car). I don’t have to give you all the details as &lt;a href=&#34;http://herebedragons.io/re-windows-phone-is-dead/&#34;&gt;Jan already did&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Don’t come telling me Windows Phone isn’t dead. It’s been &lt;a href=&#34;https://www.thurrott.com/mobile/64327/dead-whats-next-for-the-windows-phone-fan&#34;&gt;kind of dead&lt;/a&gt; for a while now. Microsoft kept it alive (and kept &lt;a href=&#34;http://www.theverge.com/2015/4/27/8503353/microsoft-nokia-acquisition-troubles&#34;&gt;losing money&lt;/a&gt; on it) and that was fine. You could still get a flagship phone and Microsoft made sure you’d get a flagship experience. The app gap has always been there, but it wasn’t that big of a deal. That isn’t the case anymore today. You can’t get a decent Windows Phone/Mobile device today. You’d have to live with the bugs, apps becoming unsupported or unusable…&lt;/p&gt;

&lt;p&gt;I’m not moving to another platform today. But I can assure you I’ll never buy a Windows phone again. I’ll keep using my trusty Lumia 930 until it’s falling apart. And until that time comes, I’ll keep enjoying Windows Phone 8’s clean interface, the amazing battery life and camera quality, the outstanding stability of the OS (huge contrast compared to Windows 10 Mobile) and the beautiful display.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting up a Raspberry Pi as a git server for Windows clients</title>
      <link>https://chipsncookies.com/2016/setting-up-a-raspberry-pi-as-a-git-server-for-windows-clients/</link>
      <pubDate>Wed, 02 Mar 2016 14:40:08 +0100</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2016/setting-up-a-raspberry-pi-as-a-git-server-for-windows-clients/</guid>
      <description>

&lt;p&gt;Sometimes you&amp;rsquo;re not allowed or you don&amp;rsquo;t want to publish source code on GitHub, Bitbucket etc. In this post, I&amp;rsquo;ll explain how you can set up a Raspberry Pi (or any other Linux server) as a git repository server and how you can configure Windows clients for that server. We&amp;rsquo;ll automate everything from authentication to creating and deleting repositories.&lt;/p&gt;

&lt;h2 id=&#34;installation-of-the-prerequisites&#34;&gt;Installation of the prerequisites&lt;/h2&gt;

&lt;h3 id=&#34;on-the-windows-clients&#34;&gt;On the Windows clients&lt;/h3&gt;

&lt;p&gt;On your Windows clients, you&amp;rsquo;ll need PuTTY, Pageant, Plink, PuTTYgen and Git Bash. The installers are very straightforward.&lt;/p&gt;

&lt;p&gt;First install &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html&#34;&gt;PuTTY and its related tools&lt;/a&gt;. After the installation, add the installation directory to your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Windows 10:
System properties &amp;gt; Advanced system settings &amp;gt; Environment variables &amp;gt; System variables &amp;gt; Path &amp;gt; Add new &amp;gt;
C:\Program Files (x86)\PuTTY

Windows 8.1 or earlier: the directories in the Path variable are separated with a ;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When that&amp;rsquo;s done, install &lt;a href=&#34;https://git-for-windows.github.io/&#34;&gt;Git and its utilities&lt;/a&gt;. During the installation, select the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use Git and optional Unix tools from the Windows Command Prompt&lt;/li&gt;
&lt;li&gt;Use (Tortoise)Plink: &lt;code&gt;C:\Program Files (x86)\PuTTY\plink.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Checkout Windows-style, commit Unix-style line endings&lt;/li&gt;
&lt;li&gt;Use Windows&amp;rsquo; default console window&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;on-the-raspberry-pi-linux-server&#34;&gt;On the Raspberry Pi / Linux server&lt;/h3&gt;

&lt;p&gt;You&amp;rsquo;ll need ssh and git. On Debian-based systems, you can install them with the command below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo apt-get update &amp;amp;&amp;amp; apt-get install -y openssh-server git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;d recommend to &lt;a href=&#34;http://www.cyberciti.biz/faq/debian-linux-install-openssh-sshd-server/&#34;&gt;setup SSH&lt;/a&gt; and PuTTY for your personal user account and use that to perform the tasks in this guide.&lt;/p&gt;

&lt;h2 id=&#34;setting-up-the-linux-server&#34;&gt;Setting up the Linux server&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;re using a Raspberry Pi, I&amp;rsquo;d suggest not using your SD card to store your git repositories. Instead, use an external hard drive or a USB drive. I&amp;rsquo;m not going to explain how to mount a USB drive, as there are already &lt;a href=&#34;http://www.raspberrypi-spy.co.uk/2014/05/how-to-mount-a-usb-flash-disk-on-the-raspberry-pi/&#34;&gt;a lot of guides&lt;/a&gt; explaining this.&lt;/p&gt;

&lt;p&gt;First, we&amp;rsquo;ll have to create a new user and use its home directory as the root of our git repositories.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;sudo adduser --home /path/to/where/you/want/to/store/your/repos --disabled-password gituser
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The command will ask you a few details about the user which you can safely ignore by pressing &lt;em&gt;Enter&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Next up, we&amp;rsquo;ll be configuring the SSH daemon. Use &lt;code&gt;sudo nano /etc/ssh/sshd_config&lt;/code&gt; to open up a text editor with the configuration file. Make sure it contains the lines below, so paste them in (&lt;em&gt;right click&lt;/em&gt;) or modify the existing configuration options.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PubkeyAuthentication yes # enable key-based authentication
AuthorizedKeysFile %h/.ssh/authorized_keys # where the authorized keys are stored
PermitRootLogin no # security measure: do not allow root to sign in using ssh
AllowUsers gituser # make sure our user is allowed to connect using SSH, add other users here separated with spaces if you want to allow them to use SSH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save with &lt;em&gt;CTRL+S&lt;/em&gt; and exit with &lt;em&gt;CTRL+X&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When that&amp;rsquo;s done, it&amp;rsquo;s time to log in as the newly created user with &lt;code&gt;sudo su gituser&lt;/code&gt; and go to its home directory using &lt;code&gt;cd&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Create a file to store the SSH authentication key with the right permissions:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Bash&#34;&gt;mkdir .ssh
chdmod 700 .ssh
cd .ssh
touch authorized_keys
chmod 600 authorized_keys
nano authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will open up a text editor.&lt;/p&gt;

&lt;p&gt;Now, back to our Windows machine. Let&amp;rsquo;s generate a new key using PuTTYgen. I usually create a SSH-2 RSA key consisting of 4096 bits. Save the private key somewhere on your machine and copy the generated public key and paste it in the text editor on the Linux machine.&lt;/p&gt;

&lt;p&gt;On the Linux machine, save the file and exit the text editor. To make sure the new configuration is active, restart the SSH server using &lt;code&gt;sudo service ssh restart&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Because we want to automate the creation and deletion of git repositories, we&amp;rsquo;ll need two scripts. I&amp;rsquo;ve provided them below.&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/SamuelDebruyn/5c7004e92b9c293acc5a.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Use the following steps to put them on your system and make them runnable:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nano delrepo.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Paste script 1 using &lt;em&gt;right click&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Save and exit the text editor (&lt;em&gt;CTRL+S&lt;/em&gt;, &lt;em&gt;CTLRL+X&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nano initrepo.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Paste script 2 using &lt;em&gt;right click&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Save and exit the text editor (&lt;em&gt;CTRL+S&lt;/em&gt;, &lt;em&gt;CTLRL+X&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chmod +x ./*repo.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This concludes the setup on our Linux box.&lt;/p&gt;

&lt;h2 id=&#34;configuring-the-windows-clients&#34;&gt;Configuring the Windows clients&lt;/h2&gt;

&lt;p&gt;Time to fire up Pageant and add the private key we created before. Afterwards, fire up PuTTY and configure it to connect to the Linux machine.&lt;/p&gt;

&lt;p&gt;You need to supply the following configuration options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Session &amp;gt; Host name / IP address: address of the Linux machine&lt;/li&gt;
&lt;li&gt;Session &amp;gt; Port: default is 22 (can be set in &lt;em&gt;sshd_config&lt;/em&gt; with &lt;code&gt;Port 12345&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Connection &amp;gt; Data &amp;gt; Auto-login username: username of the user you created (I used &lt;em&gt;gituser&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Connection &amp;gt; SSH &amp;gt; Auth &amp;gt; Authentication methods &amp;gt; Attempt authentication using Pageant: must be checked&lt;/li&gt;
&lt;li&gt;Connection &amp;gt; SSH &amp;gt; Auth &amp;gt; Authentication methods &amp;gt; Attempt &amp;ldquo;keyboard-interactive&amp;rdquo; auth: should not be checked&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to save the session (Session &amp;gt; Saved sessions - I saved it as &lt;em&gt;gituser&lt;/em&gt;). Then open the connection. PuTTY will warn you about the new host, so type &lt;code&gt;yes&lt;/code&gt; and press &lt;em&gt;Enter&lt;/em&gt; to confirm. You should now be successfully connected to the Linux box using SSH. You can close the session if that&amp;rsquo;s the case, otherwise verify if you&amp;rsquo;ve followed every step in this guide correctly and if you can ping the Linux machine.&lt;/p&gt;

&lt;p&gt;To complete our setup, we need to make Plink the SSH agent for git. All you need to do is create a new environment variable called &lt;code&gt;GIT_SSH&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;System properties &amp;gt; Advanced system settings &amp;gt; Environment variables &amp;gt; System variables &amp;gt; New &amp;gt;
Name: GIT_SSH
Value: C:\Program Files (x86)\PuTTY\plink.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To create a new repository to use as a remote, open a Windows Command Prompt and type &lt;code&gt;plink name-of-the-saved-session ./initrepo.sh name-of-the-new-repo&lt;/code&gt;. To delete an existing repository, you can use &lt;code&gt;plink name-of-the-saved-session ./delrepo.sh name-of-the-existing-repo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To add the repository you created as a remote to a git repository, use &lt;code&gt;git remote add how-you-want-to-name-the-remote ssh://address-of-the-linux-machine/~/name-of-the-repository.git&lt;/code&gt;. If you&amp;rsquo;re not using port 22 for SSH, put the port after the address, separated with colon.&lt;/p&gt;

&lt;p&gt;Because we use Pageant for authentication, we need to load Pageant with the private key every time we boot up our Windows machine. This is the last part of the process we have to automate. Create a new shortcut to Pageant in the folder &lt;code&gt;%appdata%\Microsoft\Windows\Start Menu\Programs\Startup&lt;/code&gt;. Now add the keys to that shortcut as explained in &lt;a href=&#34;http://blog.shvetsov.com/2010/03/making-pageant-automatically-load-keys.html&#34;&gt;this guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So this was my guide to setting up a Linux machine as a git repository server for Windows clients. You can now start committing and pushing away! &lt;a href=&#34;https://twitter.com/SamuelDebruyn&#34;&gt;Let me know&lt;/a&gt; if you need help or if you&amp;rsquo;re stuck somewhere.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dependency injection with Autofac and MVVM Light in Xamarin</title>
      <link>https://chipsncookies.com/2016/dependency-injection-with-autofac-and-mvvm-light-in-xamarin/</link>
      <pubDate>Mon, 22 Feb 2016 18:59:37 +0100</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2016/dependency-injection-with-autofac-and-mvvm-light-in-xamarin/</guid>
      <description>

&lt;h2 id=&#34;you-gotta-have-mvvm&#34;&gt;You gotta have MVVM&lt;/h2&gt;

&lt;p&gt;A developer and his tools are inseparable. We all like &lt;a href=&#34;https://sites.google.com/site/unclebobconsultingllc/getting-a-solid-start&#34;&gt;SOLID&lt;/a&gt; and every (.NET) developer has his or her favourite dependency injection tool. There is &lt;a href=&#34;http://www.hanselman.com/blog/ListOfNETDependencyInjectionContainersIOC.aspx&#34;&gt;a lot&lt;/a&gt; to choose from. I like Autofac because of the way it handles modules, the lifetime of a type and how it registers types.&lt;/p&gt;

&lt;p&gt;At the moment I am working on an app for Android, iOS and Windows Phone with Xamarin and when you’re developing an app in C#, you’ll really want to use MVVM. You can either go the hard way and use the built-in classes, you can go the easy way and use a framework like &lt;a href=&#34;http://caliburnmicro.com/&#34;&gt;Caliburn Micro&lt;/a&gt; or you can go the comfortable way and use &lt;a href=&#34;http://mvvmlight.net&#34;&gt;MVVM Light&lt;/a&gt;. MVVM Light is a toolkit. It comes with everything you need and nothing more. It doesn’t force a pattern upon you, you can use the parts you like and safely ignore everything else. Want to get started with MVVM Light? Make sure to read &lt;a href=&#34;http://www.spikie.be/blog/category/MVVM-Light.aspx&#34;&gt;Nico’s practical guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;MVVM Light comes with an IoC container called SimpleIoC. And that’s what it is: a dead-simple IoC container. As I said: you don’t have to use the parts you don’t like. So let me replace SimpleIoC with my dependency injector of choice: Autofac.&lt;/p&gt;

&lt;h2 id=&#34;architecture&#34;&gt;Architecture&lt;/h2&gt;

&lt;p&gt;This is an overview of how I usually structure my solution:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Legend:
* project
  - namespace
    + class/interface


* MyApp (PCL)
  - MyApp.Utilities
    + MyApp.Utilities.ViewModelLocator
    + MyApp.Utilities.CrossPlatformModule
  - MyApp.ViewModels
  - MyApp.Services
    + MyApp.Services.ICrossPlatformService
    + MyApp.Services.IPlatformSpecificService
    + MyApp.Services.MyCrossPlatformServiceImplementation
    + ...
  - ...
* MyApp.Android
  - MyApp.Android.Utilities
    + MyApp.Android.Utilities.PlatformModule
  - MyApp.Android.Services
    + MyApp.Android.Services.MyPlatformSpecificServiceImplementation
    + ...
  - ...
  + App
* MyApp.iOS
  - MyApp.iOS.Utilities
    + MyApp.iOS.Utilities.PlatformModule
  - MyApp.iOS.Services
    + MyApp.iOS.Services.MyPlatformSpecificServiceImplementation
    + ...
  - ...
  + Main
* MyApp.WindowsPhone
  - MyApp.WindowsPhone.Utilities
    + MyApp.WindowsPhone.Utilities.PlatformModule
  - MyApp.WindowsPhone.Services
    + MyApp.WindowsPhone.Services.MyPlatformSpecificServiceImplementation
    + ...
  - ...
  + App
* MyApp.UnitTests
  - ...
    + ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;where-to-put-what&#34;&gt;Where to put what?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Registrations of viewmodels and cross-platform service implementations: MyApp.Utilities.CrossPlatformModule&lt;/li&gt;
&lt;li&gt;Registrations of platform-specific services: MyApp.Platform.Utilities.PlatformModule&lt;/li&gt;
&lt;li&gt;Static properties referring to viewmodels: MyApp.Utilities.ViewModelLocator&lt;/li&gt;
&lt;li&gt;Autofac initialization: MyApp.Utilities.ViewModelLocator&lt;/li&gt;
&lt;li&gt;ViewModelLocator initialization: App/Main&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;how-it-all-ties-together&#34;&gt;How it all ties together&lt;/h2&gt;

&lt;p&gt;First off, you start by creating interfaces for all the services you need. Next up, you can start defining implementations for the services and put them in the correct namespaces.&lt;/p&gt;

&lt;p&gt;When that&amp;rsquo;s done, it&amp;rsquo;s time to create our modules. Now, assembly scanning sometimes causes exceptions on certain platforms. Also, PCL&amp;rsquo;s don&amp;rsquo;t have the methods you&amp;rsquo;re used to from ASP.NET or other types of projects for assembly scanning. I know it makes things incredibly easy, but I&amp;rsquo;d advise against it for Xamarin projects. You&amp;rsquo;ll have to register type by type in the modules. Usually I create an array of types and throw them in &lt;code&gt;builder.RegisterTypes(types)&lt;/code&gt;. The platform-specific modules should contain registrations for the platform-specific services. Don&amp;rsquo;t forget the ones that come with Autofac by default.&lt;/p&gt;

&lt;h3 id=&#34;example-of-a-platform-specific-service&#34;&gt;Example of a platform-specific service&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-CSharp&#34;&gt;using System;
using Autofac;
using MyApp.Android.Services;
using GalaSoft.MvvmLight.Views;

namespace MyApp.Android.Utilities
{
    public class PlatformModule : Module
    {
        protected override void Load(ContainerBuilder builder)
        {
            var navigationService = new NavigationService();
            // navigationService setup...
            builder.RegisterInstance(navigationService).AsImplementedInterfaces();
            
            Type[] types =
            {
                typeof (DialogService),
                typeof (MyPlatformSpecificServiceImplementation)
            };
            builder.RegisterTypes(types).AsImplementedInterfaces();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I think you get my point. The module in your PCL should contain all the cross-platform services and the ViewModels. Don&amp;rsquo;t forget to use &lt;code&gt;.SingleInstance()&lt;/code&gt; where you think it&amp;rsquo;s applicable (e.g. where you use &lt;code&gt;HttpClient&lt;/code&gt; or with some ViewModels).&lt;/p&gt;

&lt;p&gt;When that&amp;rsquo;s done, it&amp;rsquo;s time to use a little bit of magic to make sure the right implementations are registered in the right platform. This can be a little bit tricky and it isn&amp;rsquo;t a very clean solution, but It Does The Job &amp;trade;.&lt;/p&gt;

&lt;p&gt;Laurent, the creator of MVVM Light, gave &lt;a href=&#34;http://blog.galasoft.ch/posts/2014/10/my-xamarinevolve-talk-is-online-for-your-viewing-pleasure/&#34;&gt;a talk at Xamarin Evolve&lt;/a&gt; explaining how he makes it work on Android, iOS and Windows Phone. On Android, you make a singleton class called &lt;code&gt;App&lt;/code&gt; while you use the &lt;code&gt;Application&lt;/code&gt; and &lt;code&gt;App&lt;/code&gt; classes on Windows Phone and iOS.&lt;/p&gt;

&lt;p&gt;But first, we need to create our &lt;code&gt;ViewModelLocator&lt;/code&gt;. Microsoft&amp;rsquo;s ServiceLocator and Autofac&amp;rsquo;s extra&amp;rsquo;s make things easier so all you need is &lt;code&gt;nuget Install-Package Autofac.Extras.CommonServiceLocator&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-CSharp&#34;&gt;public class ViewModelLocator
{
    // you only need this if you&#39;d like to use design-time data which is only supported on XAML-based platforms
    static ViewModelLocator()
    {
        if (!ServiceLocator.IsLocationProviderSet)
        {
            RegisterServices(registerFakes: true);
        }
    }

    public MyViewModel MyViewModel =&amp;gt; ServiceLocator.Current.GetInstance&amp;lt;MyViewModel&amp;gt;();

    public static void RegisterServices(ContainerBuilder registrations = null, bool registerFakes = false)
    {
        var builder = new ContainerBuilder();

        // you only need this if-clause if you&#39;d like to use design-time data which is only supported on XAML-based platforms
        if (ViewModelBase.IsInDesignModeStatic || registerFakes)
        {
            builder.RegisterModule&amp;lt;FakeServiceModule&amp;gt;();
        }
        else
        {
            // just use this one if you don&#39;t use design-time data
            builder.RegisterModule&amp;lt;CrossPlatformModule&amp;gt;();
        }

        var container = builder.Build();
        registrations?.Update(container);

        ServiceLocator.SetLocatorProvider(() =&amp;gt; new AutofacServiceLocator(container));
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now in all of the mentioned app initializers mentioned above I have a method that looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-CSharp&#34;&gt;private static void RegisterServices()
{
    var builder = new ContainerBuilder();
    builder.RegisterModule&amp;lt;PlatformModule&amp;gt;();
    ViewModelLocator.RegisterServices(builder);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That method is then called at the moment I initialize the &lt;code&gt;ViewModelLocator&lt;/code&gt;. Laurent&amp;rsquo;s talk goes in depth on how to do that so I won&amp;rsquo;t cover that part.&lt;/p&gt;

&lt;h2 id=&#34;servicelocator&#34;&gt;ServiceLocator&lt;/h2&gt;

&lt;p&gt;Whenever you need an instance of a registered type, you can use the &lt;code&gt;ServiceLocator&lt;/code&gt; like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var myService = ServiceLocator.Current.GetInstance&amp;lt;IMyService&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You&amp;rsquo;ll only need this in the (usually empty) code-behind parts like activities (Android), ViewControllers (iOS) or the page classes (Windows Phone).&lt;/p&gt;

&lt;p&gt;You can even use &lt;a href=&#34;http://docs.autofac.org/en/latest/advanced/delegate-factories.html&#34;&gt;factories&lt;/a&gt; as long as you register them.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var myVar = &amp;quot;some required constructor parameter for e.g. a ViewModel&amp;quot;;
var factory = ServiceLocator.Current.GetInstance&amp;lt;MyViewModelRequiringAParameter.Factory&amp;gt;();
var vm = factory(myVar);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;questions&#34;&gt;Questions?&lt;/h2&gt;

&lt;p&gt;Questions? Tips/suggestions? &lt;a href=&#34;https://chipsncookies.com/about/&#34;&gt;Let me know!&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ethics of mobile banking (security)</title>
      <link>https://chipsncookies.com/2016/ethics-of-mobile-banking-security/</link>
      <pubDate>Tue, 16 Feb 2016 23:09:37 +0100</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2016/ethics-of-mobile-banking-security/</guid>
      <description>&lt;p&gt;What comes to mind when you start brainstorming about security on a mobile device? Encryption? SSL? Access tokens? Multi-factor authentication? Those are all technical terms and they sure are important. But often, another important aspect of security is ignored: ethics.&lt;/p&gt;

&lt;p&gt;It’s all about responsibilities. Say you work at one of the biggest banks in your country and you’re the team lead of a mobile app development team. What do you do when you notice that one of your latest mobile app users is an 80-year-old man who decides to pay with it? Do you smile because you’re happy that you’ve reached a wide audience? Or are you alarmed because you didn’t expect that kind of stereotype to use your app?&lt;/p&gt;

&lt;p&gt;Let us be honest here. Yes, there certainly are old people with smartphones doing crazy stuff like mobile payments. But the majority of them don’t even have an internet connection, let alone a smartphone. What if your statistics are lying? What if the old man was sitting at home watching TV while his account was used for a mobile payment? What if someone called him and used a phishing technique to activate the mobile app? These ‘what ifs’ aren’t even that unrealistic. They do happen. Every single day.&lt;/p&gt;

&lt;p&gt;I asked you what the right reaction was when you saw that statistic. I think you’ve should have called that man. He probably would have picked up his Nokia 3310 and told you he doesn’t have a smartphone. But if you’re that same guy from the bank that called him about the numbers on his debit card and you want him to put the card into the little machine with the codes again, he’ll gladly help you out. When the poor guy discovers someone emptied his accounts, you’ll tell him he walked into a phishing trap and there’s nothing you can do and you did everything in your power to make sure his bank account was safe.&lt;/p&gt;

&lt;p&gt;But that’s not really true.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m an avid user of mobile banking and mobile payment solutions and I’ve moved from one bank to another a few times over the past years. When I sign up for a mobile banking/payment app, I always have to use some kind of card reader or digital signature to prove that I am who I say I am.  I then give my app the permission to use my bank account. But there isn’t much more to it. I can start using my app right away. Most banks don’t even offer you the possibility to revoke that permission. When I log in to my online banking account, I can’t see on which smartphones I’m logged in or when I activated them. Can you do that with Facebook? Yes. Twitter? Yes. Any kind-of-important online community? Yes. The most important online system you use, your bank? No.&lt;/p&gt;

&lt;p&gt;Managing activated apps is only one part of the story. Notifications are the other. When someone sets up a new smartphone for my account, I should know that. Someone should call me, mail me or text me. When? Immediately. I think that’s just common sense but it could be me because I have yet to see a bank that does that. I can get a text when I order pizza, but not when someone uses a new device to access my bank account. That’s kind of crazy, isn’t it?&lt;/p&gt;

&lt;p&gt;See, security is more than just making sure your SSL certificates are strong and valid. Security is also about communication. It’s not an amazing feature that you can use to convince potential clients. But it’s way more important than that. And it’s time for some people higher up the ranks in the banking world to realize that.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tracking the trackers</title>
      <link>https://chipsncookies.com/2015/tracking-the-trackers/</link>
      <pubDate>Wed, 18 Nov 2015 21:37:49 +0100</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2015/tracking-the-trackers/</guid>
      <description>&lt;p&gt;Advertisements are the worst. We all hate them. They are a lame excuse for bad content for which their consumers aren&amp;rsquo;t willing to pay. To make them kind of tolerable, the advertisers started tracking us so they could deliver ads based on our interests.&lt;/p&gt;

&lt;p&gt;As far as I&amp;rsquo;m concerned, I never gave my permission to track whatever I do online. I especially do not want the trackers to sell my data to third parties. I have nothing to hide, but they have nothing to know.&lt;/p&gt;

&lt;p&gt;To make the web a little bit nicer, I installed &lt;a href=&#34;https://github.com/gorhill/uBlock&#34;&gt;uBlock Origin&lt;/a&gt; and &lt;a href=&#34;https://www.ghostery.com/&#34;&gt;Ghostery&lt;/a&gt;. My default search engine is &lt;a href=&#34;http://duckduckgo.com&#34;&gt;DuckDuckGo&lt;/a&gt; and I use Firefox with Do-Not-Track enabled without Flash Player. That basically covers the web browsing.&lt;/p&gt;

&lt;p&gt;Now the other part. How do you avoid being tracked by signing up for a service? This week I received a survey from a market research company. I found out they got my data from my employer (I worked as a temporary employee and the HR company sold my data to their partners).&lt;/p&gt;

&lt;p&gt;I use a different password for each service (thanks to &lt;a href=&#34;http://lastpass.com&#34;&gt;LastPass&lt;/a&gt;) and a unique email address thanks to a catch-all address on my domain name. That unique email address is really key here. It allows you to identify the company that sold your data to third parties. As an added bonus you can easily filter all emails to the compromised address so that it never even reaches your inbox.&lt;/p&gt;

&lt;p&gt;Here are a few tips and tricks to start tracking the trackers if you don&amp;rsquo;t have your own domain name:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can put dots in your Gmail account wherever you want: firstnamelastname@gmail.com and f.i.r.s.t.name.last.n.a.me@gmail.com are directed to the same account&lt;/li&gt;
&lt;li&gt;You can add a plus sign in your Gmail address and put whatever you want after that plus sign: firstnamelastname@gmail.com and firstnamelastname+crappyservice@gmail.com are equivalent. This trick also works on Outlook.com.&lt;/li&gt;
&lt;li&gt;Outlook.com allows you to create several alias email addresses.&lt;/li&gt;
&lt;li&gt;Both Outlook.com and Gmail have great filter rules to sort your email address based on the address you received it on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The internet is beautiful. Don&amp;rsquo;t let the trackers ruin it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Run Docker on Hyper-V with Docker Machine</title>
      <link>https://chipsncookies.com/2015/run-docker-on-hyper-v-with-docker-machine/</link>
      <pubDate>Sun, 11 Oct 2015 23:43:40 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2015/run-docker-on-hyper-v-with-docker-machine/</guid>
      <description>

&lt;p&gt;Docker is awesome, right? And thanks to [boot2docker](&lt;a href=&#34;http://boot2docker.io/(http://boot2docker.io/&#34;&gt;http://boot2docker.io/(http://boot2docker.io/&lt;/a&gt;) Windows users were no longer left out of the fun.&lt;/p&gt;

&lt;p&gt;Still, setting everything up could be a PITA and you had to install Oracle VirtualBox to use it as Docker containers were actually run inside of a VM (which was the purpose of boot2docker). If you use Hyper-V regularly, you&amp;rsquo;ll notice that you can&amp;rsquo;t have it both ways. Scott Hanselman &lt;a href=&#34;http://www.hanselman.com/blog/SwitchEasilyBetweenVirtualBoxAndHyperVWithABCDEditBootEntryInWindows81.aspx&#34;&gt;figured out a way&lt;/a&gt; to make switching between the two a little bit less painful, but you still had to reboot your machine if you wanted to use VirtualBox.&lt;/p&gt;

&lt;p&gt;Time to fix that! You can now use Hyper-V to run the boot2docker VM and connect to Docker on Windows. I guess that this has been possible since boot2docker was released, but it wasn&amp;rsquo;t that straightforward to set up at the time. Enter &lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;Docker Machine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;TL;DR: Docker Machine is a cross platform utility to help you set up, manage and connect to Docker. It automagically (well, most of the time) picks the best way to set up Docker in your environment. That&amp;rsquo;s the boot2docker VM on Windows with either VirtualBox either Hyper-V, plain old Docker on Linux etc.&lt;/p&gt;

&lt;p&gt;Docker still recommends using VirtualBox on Windows, but Docker Machine supports &lt;a href=&#34;https://docs.docker.com/machine/drivers/&#34;&gt;tons of other drivers&lt;/a&gt;: AWS, Digital Ocean, Google Compute, Azure, Rackspace, Hyper-V&amp;hellip;&lt;/p&gt;

&lt;p&gt;So how do you install Docker Machine on Windows with Hyper-V? Here we go.&lt;/p&gt;

&lt;h2 id=&#34;setting-up-hyper-v-and-network-connections&#34;&gt;Setting up Hyper-V and network connections&lt;/h2&gt;

&lt;p&gt;Make sure the Hyper-V role is installed on your computer and the &lt;em&gt;Hyper-V Manager&lt;/em&gt; works fine. &lt;a href=&#34;https://chipsncookies.com/2015/how-to-fix-common-hyper-v-errors-on-windows-10/&#34;&gt;I still had to fix a small issue on Windows 10&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next, create a &lt;em&gt;Virtual Network Switch&lt;/em&gt;. Pick &lt;em&gt;internal&lt;/em&gt; as type.&lt;/p&gt;

&lt;p&gt;Then go to your Network Connections, open the properties of your active internet connection and share the connection with the newly created virtual network switch. This will make sure that the IP of the boot2docker VM never changes and it still has internet access.&lt;/p&gt;

&lt;h2 id=&#34;download-and-install-docker-machine&#34;&gt;Download and &lt;em&gt;install&lt;/em&gt; Docker Machine&lt;/h2&gt;

&lt;p&gt;You don&amp;rsquo;t need Docker Toolbox if you&amp;rsquo;re not going to use Oracle VirtualBox. Just download the latest version of Docker Machine from &lt;a href=&#34;https://github.com/docker/machine/releases/&#34;&gt;GitHub&lt;/a&gt;, rename it to &lt;code&gt;docker-machine.exe&lt;/code&gt; and put it in your &lt;em&gt;PATH&lt;/em&gt;. That&amp;rsquo;s all there is to it.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-docker-machine-with-the-hyper-v-driver&#34;&gt;Create a new Docker Machine with the Hyper-V driver&lt;/h2&gt;

&lt;p&gt;Now open an administrative command prompt (you need to be an administrator to create new virtual machines) and execute the following command to create a new Docker Machine named &lt;em&gt;boot2docker&lt;/em&gt;. Make sure to replace &lt;code&gt;My Internal Switch&lt;/code&gt; with the name of the internal switch you created before. You can add &lt;code&gt;--hyper-v-memory xxxx&lt;/code&gt; before the name of the machine to change the default amount of memory (it&amp;rsquo;s dynamic) from 1024 to something else.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine create --driver hyperv --hyperv-virtual-switch &amp;quot;My Internal Switch&amp;quot; boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If all went well, you should get a message saying you still need to set the environment variables to connect to the machine. Running the following command will give you a few more commands to run which set the required variables.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine env --shell cmd boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;connect-to-your-boot2docker-instance&#34;&gt;Connect to your boot2docker instance&lt;/h2&gt;

&lt;p&gt;You can now connect to your newly created boot2docker instance with the following command as it should already be running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine ssh boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A few more helpful commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker-machine --help
docker-machine stop boot2docker
docker-machine start boot2docker
docker-machine restart boot2docker
docker-machine kill boot2docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you need more fine-grained control, you can still use the &lt;em&gt;Hyper-V Manager&lt;/em&gt; to adjust more settings.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to fix common Hyper-V errors on Windows 10</title>
      <link>https://chipsncookies.com/2015/how-to-fix-common-hyper-v-errors-on-windows-10/</link>
      <pubDate>Sun, 11 Oct 2015 22:38:46 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2015/how-to-fix-common-hyper-v-errors-on-windows-10/</guid>
      <description>&lt;p&gt;This short post is more of a note to myself for when I run into the same problem. I just wasted an hour on it so I guess that justifies it.&lt;/p&gt;

&lt;p&gt;So, what happened? I wanted to check out the new &lt;a href=&#34;https://docs.docker.com/machine/&#34;&gt;Docker Machine&lt;/a&gt; with Hyper-V support, but the Hyper-V Manager told me it could not connect to my local computer.&lt;/p&gt;

&lt;p&gt;When I opened Hyper-V Manager all I saw was an introduction. I then clicked &lt;em&gt;Connect to server&lt;/em&gt; and selected my local computer. A confusing error message appeared telling me that an object was not found. It was the &lt;em&gt;Hyper-V Virtual Machine Management service&lt;/em&gt; which seemed to be missing.&lt;/p&gt;

&lt;p&gt;My hypervisor was running, the mentioned service was running, there were no errors in the Event Viewer&amp;hellip; everything seemed to be working fine.&lt;/p&gt;

&lt;p&gt;A lot of Googling led me to &lt;a href=&#34;https://community.spiceworks.com/how_to/122307-fix-error-managing-hyper-v-server-2012-r2-from-windows-10&#34;&gt;a post&lt;/a&gt; mentioning a command that fixed this problem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;MOFCOMP %SYSTEMROOT%\System32\WindowsVirtualization.V2.mof
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command reinitializes Hyper-V management on your computer and fixes this error. It seems to be a frequent cause of headaches on Windows 10 hosts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to get around OnePlus&#39;s horrible invite system</title>
      <link>https://chipsncookies.com/2015/how-to-get-around-onepluss-horrible-invite-system/</link>
      <pubDate>Fri, 02 Oct 2015 15:34:19 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2015/how-to-get-around-onepluss-horrible-invite-system/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://oneplus.net/&#34;&gt;OnePlus&lt;/a&gt;, the company famous for its &lt;a href=&#34;https://www.google.be/search?q=oneplus+service+horror+story&#34;&gt;terrible service&lt;/a&gt; and its &lt;a href=&#34;http://www.androidpolice.com/2015/07/30/editorial-if-oneplus-will-basically-just-lie-with-marketing-slogans-we-have-no-reason-to-respect-them/&#34;&gt;miserable invite system&lt;/a&gt;, failed once again.&lt;/p&gt;

&lt;p&gt;Back in August, when they were about to launch the OnePlus Two, the &lt;em&gt;2016 flagship killer&lt;/em&gt; which turned out be merely be a 2014 kind-of-flagship, they launched &lt;a href=&#34;https://oneplus.net/invites&#34;&gt;a waiting list&lt;/a&gt;. You can subscribe to this list and every time an invite is left unused, it&amp;rsquo;s sent to the next person on the list.&lt;/p&gt;

&lt;p&gt;The list quickly grew to hundreds of thousands of people, but there was one catch: you could get higher on the list if someone else subscribed to the list with a URL you shared. All you needed to subscribe was a unique email address.&lt;/p&gt;

&lt;p&gt;If you own a domain, you can set up a catch all address so that everything @yourdomain.tld arrives in your mailbox. And if you have a Gmail account, everything with yourusername+somethingrandom@gmail.com arrives in your mailbox. So most people actually have an infinite amount of email addresses.&lt;/p&gt;

&lt;p&gt;As I was interested in buying a OnePlus Two at the time, I subscribed with my email address and used about 100 other email addresses to get myself higher on the list. As this &lt;em&gt;trick&lt;/em&gt; was mentioned a lot on Reddit, I figured OnePlus would have &lt;em&gt;fixed&lt;/em&gt; this &lt;em&gt;bug&lt;/em&gt; in their invite system somehow.&lt;/p&gt;

&lt;p&gt;Turns out, they didn&amp;rsquo;t. A few days ago, I started receiving tens of invites for a OnePlus Two. There was another catch: you can only use these invites with the address you used for the waiting list. It&amp;rsquo;s &lt;em&gt;impossible&lt;/em&gt; to share the invites.&lt;/p&gt;

&lt;h2 id=&#34;here-s-the-workaround&#34;&gt;Here&amp;rsquo;s the workaround:&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Register a new OnePlus account with the email address that received the invite.&lt;/li&gt;
&lt;li&gt;Confirm the account with an email you receive shortly after registration.&lt;/li&gt;
&lt;li&gt;Claim the invite using the link in the first email you received.&lt;/li&gt;
&lt;li&gt;Change the email address of the newly registered account to the one of the person that is going to use the invite. Note that is may not be linked to an existing OnePlus account.&lt;/li&gt;
&lt;li&gt;The buyer will receive an email saying he has to confirm his/her account. The confirmation link doesn&amp;rsquo;t work.&lt;/li&gt;
&lt;li&gt;The buyer should use &lt;em&gt;I forgot my password&lt;/em&gt; feature for OnePlus accounts.&lt;/li&gt;
&lt;li&gt;The buyer receives another link to confirm his/her email address. This time the link works and (s)he can choose a new password.&lt;/li&gt;
&lt;li&gt;The buyer can now sign in and use the invite.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I&amp;rsquo;m not buying a OnePlus Two after reading about the OnePlus service horror stories. Also, it really isn&amp;rsquo;t a flagship killer. It&amp;rsquo;s just a mid-budget smartphone like any other. You can get a way better smartphone for your money with the Moto X Play (Europe) or the Nexus 5X (US).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker image for Hugo builds (with Wercker)</title>
      <link>https://chipsncookies.com/2015/docker-image-for-hugo-builds-with-wercker/</link>
      <pubDate>Mon, 31 Aug 2015 18:56:39 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2015/docker-image-for-hugo-builds-with-wercker/</guid>
      <description>

&lt;p&gt;This blog is built with &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, which allows me to use some great CI tools like &lt;a href=&#34;http://wercker.com&#34;&gt;Wercker&lt;/a&gt;. The first part of writing a &lt;em&gt;wercker.yml&lt;/em&gt; is picking a build container.&lt;/p&gt;

&lt;p&gt;A build container on Wercker is the environment in which your build or deploy steps run. Wercker used to build its own containers for that, but they&amp;rsquo;ve moved away from that approach to Docker containers. You can use all kinds of Docker containers, but most people just use one available publicly on &lt;a href=&#34;https://registry.hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To deploy my website to &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub pages&lt;/a&gt;, all I need is Git. So that&amp;rsquo;s why I built &lt;a href=&#34;https://hub.docker.com/r/samueldebruyn/debian-git/&#34;&gt;this simple Docker container&lt;/a&gt; with Debian and Git.&lt;/p&gt;

&lt;p&gt;Building this blog requires some more packages. Wercker doesn&amp;rsquo;t automatically pull in your Git submodules, so Git is also a necessity there. Another one is Hugo, to build the static website itself. Hugo doesn&amp;rsquo;t minimize your files, however. That&amp;rsquo;s why I also include &lt;a href=&#34;https://github.com/yui/yuicompressor&#34;&gt;YUI compressor&lt;/a&gt; (minifies *.js and *.css) and &lt;a href=&#34;https://github.com/kangax/html-minifier&#34;&gt;HTML minifier&lt;/a&gt; (like the name says, minifies HTML files). Finally, I&amp;rsquo;ve been experimenting with &lt;a href=&#34;https://github.com/gjtorikian/html-proofer&#34;&gt;HTML proofer&lt;/a&gt; to validate the generated HTML files and check them for dead links. All of these packages (and their dependencies) are available in my Docker container called &lt;a href=&#34;https://hub.docker.com/r/samueldebruyn/hugo-build/&#34;&gt;hugo-build&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;side-notes&#34;&gt;Side notes&lt;/h2&gt;

&lt;h3 id=&#34;hugo-build&#34;&gt;hugo-build&lt;/h3&gt;

&lt;p&gt;The image is quite big. It needs Java for YUI compressor, Ruby for html-proofer and Node for html-minifier. Setting up the environment and storing the container each take about half a minute. If you have some suggestions on making the image smaller, please &lt;a href=&#34;https://github.com/SamuelDebruyn/docker-hugo-build&#34;&gt;submit an issue or a pull request&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The latest list of included packages is available in the &lt;a href=&#34;https://github.com/SamuelDebruyn/docker-hugo-build&#34;&gt;README file&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The build often fails on a time-out while running &lt;code&gt;apt-get&lt;/code&gt;. It&amp;rsquo;s usually &lt;em&gt;fixed&lt;/em&gt; by running another build.&lt;/p&gt;

&lt;h3 id=&#34;html-proofer&#34;&gt;html-proofer&lt;/h3&gt;

&lt;p&gt;html-proofer will often fail because it scans your website for dead links before your website is even published. I haven&amp;rsquo;t been able to work around this, but &lt;a href=&#34;https://github.com/gjtorikian/html-proofer/pull/178&#34;&gt;here&amp;rsquo;s an issue&lt;/a&gt; that&amp;rsquo;s keeping track of this.&lt;/p&gt;

&lt;h3 id=&#34;example-wercker-yml-using-these-images&#34;&gt;Example &lt;em&gt;wercker.yml&lt;/em&gt; using these images&lt;/h3&gt;

&lt;p&gt;My blog uses these images to build and deploy automatically through Wercker. The source code is &lt;a href=&#34;https://github.com/SamuelDebruyn/chipsncookies-site&#34;&gt;publicly available&lt;/a&gt; on GitHub.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The right way to create Windows installation media</title>
      <link>https://chipsncookies.com/2015/the-right-way-to-create-windows-installation-media/</link>
      <pubDate>Wed, 26 Aug 2015 18:55:47 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2015/the-right-way-to-create-windows-installation-media/</guid>
      <description>

&lt;p&gt;There are several ways to create a USB stick to install Windows. Chances are you end up with an error during the installation or you (unknowingly) use the wrong partition layout for your HDD/SSD.&lt;/p&gt;

&lt;h2 id=&#34;get-an-iso&#34;&gt;Get an ISO&lt;/h2&gt;

&lt;p&gt;Which version of Windows do you want to install? This guide would work fine with Windows Vista or newer, but you can get an ISO for Windows 10 Home/Pro on &lt;a href=&#34;https://www.microsoft.com/en-us/software-download/windows10ISO&#34;&gt;this page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The problem with that page, however, is that it redirects you to a download of a media creation tool if you&amp;rsquo;re opening the page on a Windows PC. The media creation tool allows you to download an ISO image, but it &lt;a href=&#34;http://d.ibtimes.co.uk/en/full/1451630/windows-10-installation-errors.png&#34;&gt;doesn&amp;rsquo;t always work properly&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So fiddle with your user agent settings (the hard way)&amp;hellip;&lt;/p&gt;

&lt;p&gt;or open it up on your smartphone/tablet, select the version of Windows you want to download and send the direct download link to yourself (the easy way).&lt;/p&gt;

&lt;h2 id=&#34;get-rufus&#34;&gt;Get Rufus&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://rufus.akeo.ie/&#34;&gt;Rufus&lt;/a&gt; is a simple tool which lets you easily create bootable USB sticks for any kind of operating system. All you have to do is download it. Rufus doesn&amp;rsquo;t require an installation.&lt;/p&gt;

&lt;h2 id=&#34;creating-the-image&#34;&gt;Creating the image&lt;/h2&gt;

&lt;p&gt;Now plug in your USB stick, fire up Rufus and point it to your USB stick (first dropdown list) and the ISO image (button next to the last dropdown list) you just downloaded. &lt;strong&gt;Pay attention&lt;/strong&gt; to the next steps, because Rufus will delete everything on the USB stick/disk you select.&lt;/p&gt;

&lt;p&gt;Select &lt;em&gt;GPT with UEFI&lt;/em&gt; for the partition layout.&lt;/p&gt;

&lt;p&gt;Pick &lt;em&gt;FAT32&lt;/em&gt; as filesystem (no, NTFS won&amp;rsquo;t work).&lt;/p&gt;

&lt;p&gt;Leave the cluster size at its default setting (&lt;em&gt;4096 bytes&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Make sure the checkmark next to &lt;em&gt;Create bootable disk with ISO image&lt;/em&gt; is checked.&lt;/p&gt;

&lt;p&gt;Now all you have to do is press &lt;em&gt;Start&lt;/em&gt; and wait a few minutes (depends on the speed of your USB device, could take about 15 minutes).&lt;/p&gt;

&lt;h2 id=&#34;booting-the-image&#34;&gt;Booting the image&lt;/h2&gt;

&lt;p&gt;This guide ends here, but if you don&amp;rsquo;t know how to boot your PC from the installation image you just created, consult the manual of your PC, BIOS or motherboard. &lt;em&gt;Usually you need to press one of the F-buttons while the logo of your motherboard&amp;rsquo;s manufacturer is displayed.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While you&amp;rsquo;re in your BIOS, make sure to enable &lt;em&gt;AHCI&lt;/em&gt; in the settings of your SATA ports and &lt;em&gt;UEFI&lt;/em&gt; in your boot settings. Always pick the listed &lt;em&gt;UEFI&lt;/em&gt; device when you select a boot device.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Experiences with Windows 10 on a new Dell XPS 13 (2015)</title>
      <link>https://chipsncookies.com/2015/experiences-with-windows-10-on-a-new-dell-xps-13-2015/</link>
      <pubDate>Wed, 26 Aug 2015 07:51:16 +0200</pubDate>
      <author>s@muel.be (Samuel Debruyn)</author>
      <guid>https://chipsncookies.com/2015/experiences-with-windows-10-on-a-new-dell-xps-13-2015/</guid>
      <description>

&lt;h2 id=&#34;ordering-a-new-workhorse&#34;&gt;Ordering a new workhorse&lt;/h2&gt;

&lt;p&gt;Windows 10 RTM &lt;a href=&#34;https://chipsncookies.com/img/post/dinoclippy.jpg&#34; title=&#34;awesome wallpaper&#34;&gt;has been out&lt;/a&gt; for about a month now after little less than a year of public &lt;a href=&#34;https://insider.windows.com/&#34; title=&#34;Insider program&#34;&gt;Insider preview&lt;/a&gt; builds. The motherboard of my old, trusty, Asus laptop was slowly dying and the Dell XPS 13&amp;rsquo;s thinness and battery life looked very attractive. I decided to go for it and order a &lt;a href=&#34;http://www.dell.com/us/p/xps-13-9343-laptop/&#34; title=&#34;Dell XPS 13&#34;&gt;Dell XPS 13 (2015)&lt;/a&gt;, without the touch screen. I hate dirty fingerprints on a screen and the better battery life of the version without the touch screen seemed like a better deal. I also ordered a &lt;a href=&#34;http://accessories.us.dell.com/sna/productdetail.aspx?c=us&amp;amp;l=en&amp;amp;s=dhs&amp;amp;cs=19&amp;amp;sku=470-abhh&#34; title=&#34;Dell adapter&#34;&gt;USB 3 -&amp;gt; HDMI/VGA/Ethernet/USB 2 adapter&lt;/a&gt; from Dell.&lt;/p&gt;

&lt;p&gt;While Dell&amp;rsquo;s website tells you they will ship it in about 4 business days, it took nearly 3 weeks until UPS rang my bell with a shipment from China. By the way, Dell Belgium&amp;rsquo;s sales support is terrible. They offer support by phone and chat, but they will tell you on both channels that you have to send them an email. The Belgian support department was very abrupt and impolite. They can&amp;rsquo;t tell you why it looks like your laptop is sitting in an UPS storage facility in China without moving for about a week.&lt;/p&gt;

&lt;h2 id=&#34;first-steps&#34;&gt;First steps&lt;/h2&gt;

&lt;p&gt;The first thing I did after unpacking everything, was booting it up and installing &lt;a href=&#34;https://www.runtime.org/driveimage-xml.htm&#34; title=&#34;DriveImage XML&#34;&gt;DriveImage XML&lt;/a&gt; to create a complete image of every partition so it would be easy to restore if something ever went &lt;a href=&#34;http://d.ibtimes.co.uk/en/full/1451630/windows-10-installation-errors.png&#34; title=&#34;Something happened&#34;&gt;terribly wrong&lt;/a&gt;. Windows also comes with &lt;a href=&#34;http://windows.microsoft.com/en-us/windows-8/create-usb-recovery-drive&#34;&gt;a tool&lt;/a&gt; to create system recovery images on USB sticks etc. This tool copies the recovery partition to a USB stick, together with Windows recovery tools.&lt;/p&gt;

&lt;p&gt;On a side note: a lot of programs like DriveImage XML looked very blurry on the XPS 13&amp;rsquo;s 1080p screen.&lt;/p&gt;

&lt;h2 id=&#34;so-many-windows-10s&#34;&gt;So many Windows 10s!&lt;/h2&gt;

&lt;p&gt;If I&amp;rsquo;d &lt;a href=&#34;http://winsupersite.com/windows-10/windows-10-upgrade-paths&#34; title=&#34;Windows 10 upgrade path&#34;&gt;simply upgrade&lt;/a&gt; the Windows 8.1 installation that shipped with the XPS 13, I&amp;rsquo;d get the most basic version of Windows 10. This edition doesn&amp;rsquo;t suffice for most software developers. I signed in to &lt;a href=&#34;https://www.dreamspark.com/&#34; title=&#34;Microsoft Dreamspark&#34;&gt;Microsoft Dreamspark&lt;/a&gt; and got the free Windows 10 Education Edition I&amp;rsquo;m entitled to as an IT student. I had the choice of installing the Enterprise or the Education edition. The Education edition comes with &lt;a href=&#34;http://wincom.blob.core.windows.net/documents/Win10EditionsCompareTable_FINAL.pdf&#34; title=&#34;Feature comparison&#34;&gt;more features&lt;/a&gt; than the Home/Pro Edition and I figured the Enterprise edition wouldn&amp;rsquo;t be as easy to install outside of a domain.&lt;/p&gt;

&lt;p&gt;I rebooted the machine with the Windows 10 installation media and deleted every partition on the SSD. After the installation, Windows 10 guides you through the final steps of setting up your new PC.&lt;/p&gt;

&lt;p&gt;Usually, they ask you to sign in to a Microsoft account and offer you to restore the apps and settings from another machine on which you&amp;rsquo;re signed in. Apparently that&amp;rsquo;s not the case if you picked the Education edition: sign in with a domain account or create a local user account. I could link my local account to a Microsoft account after the initial setup, but my desktop now shows a white watermark in the bottom right corner saying &lt;em&gt;Windows 10 Education&lt;/em&gt; (which is impossible to remove &lt;a href=&#34;http://superuser.com/questions/947231/how-can-i-remove-the-windows-10-education-watermark-from-my-dreamspark-license&#34; title=&#34;Get rid of the watermark&#34;&gt;without changing some HEX values&lt;/a&gt; in the registry&amp;hellip;)&lt;/p&gt;

&lt;h2 id=&#34;the-first-boot&#34;&gt;The first boot&lt;/h2&gt;

&lt;p&gt;The blurriness was back. About every non-modern app looked blurry. Probably driver issues, right? Dell&amp;rsquo;s &lt;a href=&#34;http://www.dell.com/learn/us/en/19/campaigns/windows-upgrade-offer&#34;&gt;support site&lt;/a&gt; says that the XPS 13 is ready for Windows 10. Okay&amp;hellip; But the driver section doesn&amp;rsquo;t even have a graphics driver. I installed all the available Windows 10 drivers and some Windows 8 drivers which weren&amp;rsquo;t available in the Windows 10 section. I found drivers for the Intel HD 5500 and some other Intel components on Intel&amp;rsquo;s website and Realtek&amp;rsquo;s website has Windows 10 drivers for SD card reader and the audio chip.&lt;/p&gt;

&lt;p&gt;The installation of the graphics driver failed miserably. In the final step of the installation my screen turned black, showing just a white mouse pointer. It stayed that way for more than 15 minutes. Although, after a reboot (had to press the power button for a few seconds), the driver seemed to be &lt;em&gt;correctly&lt;/em&gt; installed.&lt;/p&gt;

&lt;p&gt;The installation of the audio driver just failed completely. The first step of the installation uninstalls your existing driver and asks you to reboot. The second step should install the new driver, but after a reboot the installation process started over. I stopped trying after 4 attempts as audio seemed to be working fine.&lt;/p&gt;

&lt;h2 id=&#34;the-blurriness-is-here-to-stay&#34;&gt;The blurriness (is here to stay)&lt;/h2&gt;

&lt;p&gt;It was still there. I fiddled a little bit with the Intel HD Graphics Control Panel and enabled some settings that should improve the quality of textures. That was a bad choice. If you enable most settings in the &lt;em&gt;3D&lt;/em&gt; section of the control panel, textures in modern apps will look very dark and the Windows 10 start menu becomes one dark grey mess. &lt;strong&gt;Disable all settings in the &lt;em&gt;3D&lt;/em&gt; section of the Intel HD Graphics Control Panel on Windows 10&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;My next try was &lt;a href=&#34;http://windows.microsoft.com/en-us/windows/make-text-easier-read-cleartype#1TC=windows-7&#34; title=&#34;ClearType settings&#34;&gt;ClearType&lt;/a&gt;. This helped a little bit with the blurriness, but not that much.&lt;/p&gt;

&lt;p&gt;Finally, I played with the DPI scaling. The factory default is 150%. I found that 125% is not too blurry and not too small. I&amp;rsquo;d prefer a non-blurry screen on 150% scaling though.&lt;/p&gt;

&lt;p&gt;I concluded that most Windows applications simply aren&amp;rsquo;t built with high DPI screens in mind. It&amp;rsquo;s &lt;a href=&#34;https://retinamacapps.com/&#34;&gt;the retina story&lt;/a&gt; of the new Macs all over again.&lt;/p&gt;

&lt;h2 id=&#34;some-issues-i-worked-around-or-fixed&#34;&gt;Some issues I worked around or fixed&lt;/h2&gt;

&lt;h3 id=&#34;the-failing-touchpad-driver-update&#34;&gt;The failing touchpad driver update&lt;/h3&gt;

&lt;p&gt;Windows 10 tried to install an update for the touchpad driver and kept on failing. This was &lt;a href=&#34;http://en.community.dell.com/support-forums/laptop/f/3518/t/19643591&#34;&gt;a known issue&lt;/a&gt; you could safely ignore. Microsoft offers a utility to hide some specific updates.&lt;/p&gt;

&lt;h3 id=&#34;the-dell-adapter&#34;&gt;The Dell adapter&lt;/h3&gt;

&lt;p&gt;Installing and plugging in the Dell adapter I bought, gave me BSoDs and a lot of other crap. Installing a &lt;a href=&#34;http://www.displaylink.com/downloads/downloads.php&#34; title=&#34;DisplayLink drivers&#34;&gt;recent driver from DisplayLink&lt;/a&gt;, its manufacturer, fixed it.&lt;/p&gt;

&lt;h3 id=&#34;distorted-sound&#34;&gt;Distorted sound&lt;/h3&gt;

&lt;p&gt;Sometimes the audio driver went berserk and the sound became very distorted. Disabling and enabling the Realtek HW audio codec usually fixed it temporarily, but it was finally fixed after installing a new version of the Realtek audio driver last week.&lt;/p&gt;

&lt;h4 id=&#34;update&#34;&gt;Update&lt;/h4&gt;

&lt;p&gt;This issue reappeared a few hours after publishing this post.&lt;/p&gt;

&lt;h3 id=&#34;missing-settings-in-the-power-management-section-of-the-control-panel&#34;&gt;Missing settings in the power management section of the control panel&lt;/h3&gt;

&lt;p&gt;Dell offers a great utility called &lt;a href=&#34;http://en.community.dell.com/techcenter/enterprise-client/w/wiki/7535.dell-command-power-manager&#34;&gt;Dell Command | Power&lt;/a&gt; which you should definitely install if you own a recent Dell laptop. You can optimize various settings that avoid battery wear (e.g. optimize the charging algorithm for a laptop that is often plugged into the charger or keep the laptop extra cool).&lt;/p&gt;

&lt;p&gt;You can also use &lt;a href=&#34;http://www.eightforums.com/tutorials/54127-power-options-add-remove-wireless-adapter-settings.html&#34;&gt;this trick&lt;/a&gt; to enable some settings in the control panel that were hidden by the manufacturer of your device.&lt;/p&gt;

&lt;h3 id=&#34;slow-wi-fi&#34;&gt;Slow Wi-Fi&lt;/h3&gt;

&lt;p&gt;The latest version of the Wi-Fi driver that&amp;rsquo;s available on Intel&amp;rsquo;s website fixed an issue where I would experience a very slow Wi-Fi connection from time to time.&lt;/p&gt;

&lt;h2 id=&#34;some-issues-i-still-experience&#34;&gt;Some issues I still experience&lt;/h2&gt;

&lt;h3 id=&#34;sleep-hibernate-coma&#34;&gt;Sleep, hibernate, COMA&lt;/h3&gt;

&lt;p&gt;Usually, when I close the lid of my XPS 13, the laptop immediately goes to sleep. When I open it up again, everything is back up and running in less than a second. So far, so good.&lt;/p&gt;

&lt;p&gt;When I connect an external monitor to the laptop (be it through the Dell adapter I bought or be it with a DisplayPort-VGA adapter), things start getting crazy. If I take a break of half an hour or more, I can&amp;rsquo;t get the laptop to wake up again. I tried everything:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pressing a random key&lt;/li&gt;
&lt;li&gt;moving or tapping on the touchpad&lt;/li&gt;
&lt;li&gt;pressing the power button (the power LED is turned off, by the way)&lt;/li&gt;
&lt;li&gt;disconnecting every external device&lt;/li&gt;
&lt;li&gt;plugging the charger in/out&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only action that gets my laptop out of its coma is holding the power button down for a few seconds, then it starts booting up again.&lt;/p&gt;

&lt;h3 id=&#34;crazy-multi-monitor-dpi-issues&#34;&gt;Crazy multi-monitor DPI issues&lt;/h3&gt;

&lt;p&gt;If you want to see Windows from a new perspective, connect an external monitor with a different DPI scaling than the one on your laptop screen. All sorts of crazy things start to happen. I suspect the issue above is related to this one. Windows rarely gets it right on the first try. Sometimes it uses the higher DPI scaling on both monitors. It never picks the default DPI scaling (100%) for both monitors. A reboot usually fixes most of my issues, but they often reappear when I resume the machine from sleep.&lt;/p&gt;

&lt;p&gt;I am seriously considering buying an extra monitor just so I could use the same DPI scaling on both screens&amp;hellip; Rebooting Windows doesn&amp;rsquo;t take more than 10 seconds, but you still have to close all your programs.&lt;/p&gt;

&lt;h2 id=&#34;a-quick-review&#34;&gt;A quick review&lt;/h2&gt;

&lt;h3 id=&#34;the-battery-life&#34;&gt;The battery life&lt;/h3&gt;

&lt;p&gt;Dell promises 10+ hours of battery life with this laptop. I never even got close. You&amp;rsquo;d probably only get this with your laptop on the lowest brightness setting in flight mode. I usually get up to 8 hours with light usage (browsing, reading&amp;hellip;) and up to 4 hours with heavy usage (running multiple instances of Visual Studio and building about every 15 minutes).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m quite happy with the battery life, it&amp;rsquo;s not as good as expected, but still a lot better than what you get from most other (non-Apple) laptops.&lt;/p&gt;

&lt;h3 id=&#34;the-screen&#34;&gt;The screen&lt;/h3&gt;

&lt;p&gt;Software developers need to start thinking about high DPI screens. I didn&amp;rsquo;t even get the 4K screen. I love the thin bezels and the screen looks very good except in direct sunlight.&lt;/p&gt;

&lt;h3 id=&#34;the-touchpad&#34;&gt;The touchpad&lt;/h3&gt;

&lt;p&gt;I highly recommend playing a little bit with the settings. A lot of people seem to be complaining about some kind of lag or delay. You can adjust this delay in the settings. I&amp;rsquo;ve put it on the shortest delay, but haven&amp;rsquo;t disabled the delay completely.&lt;/p&gt;

&lt;p&gt;The touchpad works fine; it registers everything I want it to.&lt;/p&gt;

&lt;h3 id=&#34;the-keyboard&#34;&gt;The keyboard&lt;/h3&gt;

&lt;p&gt;The keys are very thin but typing is very comfortable. The backspace and the FN buttons are placed awkwardly (especially if you use multiple desktops in Windows 10), but I got used to it.&lt;/p&gt;

&lt;h3 id=&#34;performance&#34;&gt;Performance&lt;/h3&gt;

&lt;p&gt;The performance really depends on the configuration you pick. I picked the Intel i7-5600U with 8 GB of RAM. I would have loved a 16 GB configuration and all you can upgrade is the SSD. It isn&amp;rsquo;t as fast as the quad core i7 with Hyper Threading I used to have, but the difference is hardly noticeable.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m very happy with my XPS 13. The battery is great, it almost never gets hot and it&amp;rsquo;s very small and lightweight being a 13-inch laptop. Microsoft, Dell and their partners seem to be working hard on fixing driver issues and making Windows 10 a very pleasant experience.&lt;/p&gt;

&lt;p&gt;The DPI issues I mentioned would probably also happen on other high DPI laptops. I have never used this laptop with Windows 8.1, which has a different DPI scaling system. There&amp;rsquo;s a utility available online which reverts your DPI scaling system to the one in Windows 8, but it made the situation even worse when I connected an external monitor.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>